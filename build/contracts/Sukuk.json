{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_number_of_sukuk",
          "type": "uint256"
        }
      ],
      "name": "purchase_suk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/ASUS/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
    "1": "contracts/Purchese.sol"
  },
  "ast": {
    "absolutePath": "contracts/Purchese.sol",
    "exportedSymbols": {
      "Sukuk": [
        115
      ]
    },
    "id": 116,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "absolutePath": "C:/Users/ASUS/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 116,
        "sourceUnit": 162,
        "src": "57:76:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 115,
        "linearizedBaseContracts": [
          115
        ],
        "name": "Sukuk",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3e47d6f3",
            "id": 6,
            "name": "addressToAmountFunded",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 115,
            "src": "247:56:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "255:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "247:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 4,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3feb5f2b",
            "id": 9,
            "name": "investors",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 115,
            "src": "309:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "309:15:1",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 8,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "309:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 11,
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 115,
            "src": "349:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "349:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "741bef1a",
            "id": 13,
            "name": "priceFeed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 115,
            "src": "376:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$161",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 12,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 161,
              "src": "376:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$161",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Sukuk.Sukuk_state",
            "id": 19,
            "members": [
              {
                "id": 14,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "465:4:1"
              },
              {
                "id": 15,
                "name": "CLOSE",
                "nodeType": "EnumValue",
                "src": "479:5:1"
              },
              {
                "id": 16,
                "name": "REDEEM_PERIOD",
                "nodeType": "EnumValue",
                "src": "494:13:1"
              },
              {
                "id": 17,
                "name": "TERM_1",
                "nodeType": "EnumValue",
                "src": "517:6:1"
              },
              {
                "id": 18,
                "name": "TERM_2",
                "nodeType": "EnumValue",
                "src": "533:6:1"
              }
            ],
            "name": "Sukuk_state",
            "nodeType": "EnumDefinition",
            "src": "439:106:1"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "665:144:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "675:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$161",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 26,
                          "name": "_priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "709:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "687:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$161_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "687:33:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$161",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "675:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$161",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "675:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "783:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "791:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "791:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "783:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "783:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 36,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "_priceFeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 36,
                  "src": "626:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "616:36:1"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:0:1"
            },
            "scope": 115,
            "src": "605:204:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "877:176:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "addressToAmountFunded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "955:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 44,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 42,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "977:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "977:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "955:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "992:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "992:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "955:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "955:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 176,
                              "src": "1034:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1034:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1026:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 52,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1026:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1026:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1011:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1011:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1011:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:35:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7ce2a070",
            "id": 60,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase_suk",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "name": "_number_of_sukuk",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 60,
                  "src": "837:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "836:26:1"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "877:0:1"
            },
            "scope": 115,
            "src": "815:238:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "1080:56:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 63,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "1098:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1098:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 65,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1112:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1098:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 62,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        179,
                        180
                      ],
                      "referencedDeclaration": 179,
                      "src": "1090:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:28:1"
                },
                {
                  "id": 69,
                  "nodeType": "PlaceholderStatement",
                  "src": "1128:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 71,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1078:2:1"
            },
            "src": "1060:76:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1186:304:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 83,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "1224:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Sukuk_$115",
                                "typeString": "contract Sukuk"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Sukuk_$115",
                                "typeString": "contract Sukuk"
                              }
                            ],
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1216:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 81,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1216:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1216:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1216:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "1196:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1196:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1196:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:42:1"
                },
                {
                  "body": {
                    "id": 111,
                    "nodeType": "Block",
                    "src": "1372:111:1",
                    "statements": [
                      {
                        "assignments": [
                          100
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 100,
                            "name": "funder",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 111,
                            "src": "1386:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 99,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1386:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 104,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 101,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "1403:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                              "typeString": "address payable[] storage ref"
                            }
                          },
                          "id": 103,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 102,
                            "name": "funderIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "1413:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1403:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1386:39:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 105,
                              "name": "addressToAmountFunded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1439:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 107,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 106,
                              "name": "funder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100,
                              "src": "1461:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1439:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1471:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1439:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 110,
                        "nodeType": "ExpressionStatement",
                        "src": "1439:33:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "funderIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1304:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1318:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1318:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1304:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 112,
                  "initializationExpression": {
                    "assignments": [
                      89
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 89,
                        "name": "funderIndex",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 112,
                        "src": "1267:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 91,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1289:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1267:23:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1348:13:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "funderIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "1348:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 98,
                    "nodeType": "ExpressionStatement",
                    "src": "1348:13:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1249:234:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 74,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 73,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 71,
                  "src": "1177:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1177:9:1"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1159:2:1"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:1"
            },
            "scope": 115,
            "src": "1142:348:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 116,
        "src": "227:1309:1"
      }
    ],
    "src": "33:1503:1"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516103133803806103138339818101604052602081101561003357600080fd5b5051600380546001600160a01b039092166001600160a01b031992831617905560028054909116331790556102a68061006d6000396000f3fe6080604052600436106100555760003560e01c80633ccfd60b1461005a5780633e47d6f3146100645780633feb5f2b146100a9578063741bef1a146100ef5780637ce2a07014610104578063f851a44014610121575b600080fd5b610062610136565b005b34801561007057600080fd5b506100976004803603602081101561008757600080fd5b50356001600160a01b03166101c3565b60408051918252519081900360200190f35b3480156100b557600080fd5b506100d3600480360360208110156100cc57600080fd5b50356101d5565b604080516001600160a01b039092168252519081900360200190f35b3480156100fb57600080fd5b506100d36101fc565b6100626004803603602081101561011a57600080fd5b503561020b565b34801561012d57600080fd5b506100d3610261565b6002546001600160a01b0316331461014d57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610179573d6000803e3d6000fd5b5060005b6001548110156101c05760006001828154811061019657fe5b60009182526020808320909101546001600160a01b0316825281905260408120555060010161017d565b50565b60006020819052908152604090205481565b600181815481106101e257fe5b6000918252602090912001546001600160a01b0316905081565b6003546001600160a01b031681565b5033600081815260208190526040812080543401905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b6002546001600160a01b03168156fea2646970667358221220ce13cc4674a9005df708b085ee3521784cd3bc42315c08e1a5ef65dcdb16f45664736f6c63430006000033",
  "bytecodeSha1": "78b0afe18d9aace93f1cf75b5808d635e98eaaa6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.0+commit.26b70077"
  },
  "contractName": "Sukuk",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {}
    },
    "statements": {
      "0": {},
      "1": {
        "Sukuk.purchase_suk": {
          "3": [
            955,
            1001
          ],
          "4": [
            1011,
            1046
          ]
        },
        "Sukuk.withdraw": {
          "0": [
            1196,
            1238
          ],
          "1": [
            1439,
            1472
          ],
          "2": [
            1348,
            1361
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/AggregatorV3Interface"
  ],
  "deployedBytecode": "6080604052600436106100555760003560e01c80633ccfd60b1461005a5780633e47d6f3146100645780633feb5f2b146100a9578063741bef1a146100ef5780637ce2a07014610104578063f851a44014610121575b600080fd5b610062610136565b005b34801561007057600080fd5b506100976004803603602081101561008757600080fd5b50356001600160a01b03166101c3565b60408051918252519081900360200190f35b3480156100b557600080fd5b506100d3600480360360208110156100cc57600080fd5b50356101d5565b604080516001600160a01b039092168252519081900360200190f35b3480156100fb57600080fd5b506100d36101fc565b6100626004803603602081101561011a57600080fd5b503561020b565b34801561012d57600080fd5b506100d3610261565b6002546001600160a01b0316331461014d57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610179573d6000803e3d6000fd5b5060005b6001548110156101c05760006001828154811061019657fe5b60009182526020808320909101546001600160a01b0316825281905260408120555060010161017d565b50565b60006020819052908152604090205481565b600181815481106101e257fe5b6000918252602090912001546001600160a01b0316905081565b6003546001600160a01b031681565b5033600081815260208190526040812080543401905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b6002546001600160a01b03168156fea2646970667358221220ce13cc4674a9005df708b085ee3521784cd3bc42315c08e1a5ef65dcdb16f45664736f6c63430006000033",
  "deployedSourceMap": "227:1309:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1142:348;;;:::i;:::-;;247:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:56:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;247:56:1;-1:-1:-1;;;;;247:56:1;;:::i;:::-;;;;;;;;;;;;;;;;309:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;309:34:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;309:34:1;;:::i;:::-;;;;-1:-1:-1;;;;;309:34:1;;;;;;;;;;;;;;376:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;376:38:1;;;:::i;815:238::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;815:238:1;;:::i;349:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:21:1;;;:::i;1142:348::-;1112:5;;-1:-1:-1;;;;;1112:5:1;1098:10;:19;1090:28;;;;;;1196:42:::1;::::0;:10:::1;::::0;1216:21:::1;1196:42:::0;::::1;;;::::0;::::1;::::0;;;1216:21;1196:10;:42;::::1;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;1267:19:1::1;1249:234;1318:9;:16:::0;1304:30;::::1;1249:234;;;1386:14;1403:9;1413:11;1403:22;;;;;;;;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;1403:22:1::1;1439:29:::0;;;;;;;;:33;-1:-1:-1;1403:22:1;1348:13:::1;1249:234;;;;1142:348::o:0;247:56::-;;;;;;;;;;;;;;:::o;309:34::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;309:34:1;;-1:-1:-1;309:34:1;:::o;376:38::-;;;-1:-1:-1;;;;;376:38:1;;:::o;815:238::-;-1:-1:-1;977:10:1;955:21;:33;;;;;;;;;;:46;;992:9;955:46;;;-1:-1:-1;27:10;;23:18;;;45:23;;1011:35:1;;;;;;-1:-1:-1;;;;;;1011:35:1;;;;;;815:238::o;349:21::-;;;-1:-1:-1;;;;;349:21:1;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    227,
    1536
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x3FEB5F2B EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x7CE2A070 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x121 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH2 0x136 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x97 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x62 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x20B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x179 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x196 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 ADD PUSH2 0x17D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1E2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SGT 0xCC CHAINID PUSH21 0xA9005DF708B085EE3521784CD3BC42315C08E1A5EF PUSH6 0xDCDB16F45664 PUSH20 0x6F6C634300060000330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        227,
        1536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x55"
    },
    "12": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3CCFD60B"
    },
    "25": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "EQ",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A"
    },
    "29": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3E47D6F3"
    },
    "36": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3FEB5F2B"
    },
    "47": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9"
    },
    "51": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x741BEF1A"
    },
    "58": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "62": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7CE2A070"
    },
    "69": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "73": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF851A440"
    },
    "80": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "EQ",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x121"
    },
    "84": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "86": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "88": {
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "89": {
      "first_revert": true,
      "fn": null,
      "offset": [
        227,
        1536
      ],
      "op": "REVERT",
      "path": "1"
    },
    "90": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1142,
        1490
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "91": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1142,
        1490
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62"
    },
    "94": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1142,
        1490
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "97": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        1142,
        1490
      ],
      "op": "JUMP",
      "path": "1"
    },
    "98": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1142,
        1490
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "99": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1142,
        1490
      ],
      "op": "STOP",
      "path": "1"
    },
    "100": {
      "offset": [
        247,
        303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "101": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "102": {
      "op": "DUP1"
    },
    "103": {
      "op": "ISZERO"
    },
    "104": {
      "op": "PUSH2",
      "value": "0x70"
    },
    "107": {
      "op": "JUMPI"
    },
    "108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "110": {
      "op": "DUP1"
    },
    "111": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "REVERT",
      "path": "1"
    },
    "112": {
      "op": "JUMPDEST"
    },
    "113": {
      "offset": [
        247,
        303
      ],
      "op": "POP",
      "path": "1"
    },
    "114": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x97"
    },
    "117": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "119": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP1",
      "path": "1"
    },
    "120": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "121": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SUB",
      "path": "1"
    },
    "122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "124": {
      "op": "DUP2"
    },
    "125": {
      "op": "LT"
    },
    "126": {
      "op": "ISZERO"
    },
    "127": {
      "op": "PUSH2",
      "value": "0x87"
    },
    "130": {
      "op": "JUMPI"
    },
    "131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "133": {
      "op": "DUP1"
    },
    "134": {
      "op": "REVERT"
    },
    "135": {
      "op": "JUMPDEST"
    },
    "136": {
      "op": "POP"
    },
    "137": {
      "offset": [
        247,
        303
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "144": {
      "op": "SHL"
    },
    "145": {
      "op": "SUB"
    },
    "146": {
      "offset": [
        247,
        303
      ],
      "op": "AND",
      "path": "1"
    },
    "147": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C3"
    },
    "150": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        247,
        303
      ],
      "op": "JUMP",
      "path": "1"
    },
    "151": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "152": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "154": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP1",
      "path": "1"
    },
    "155": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "156": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "157": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP3",
      "path": "1"
    },
    "158": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "159": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "160": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "161": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "162": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "163": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SUB",
      "path": "1"
    },
    "164": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "166": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "ADD",
      "path": "1"
    },
    "167": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "168": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "RETURN",
      "path": "1"
    },
    "169": {
      "offset": [
        309,
        343
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "170": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "171": {
      "op": "DUP1"
    },
    "172": {
      "op": "ISZERO"
    },
    "173": {
      "op": "PUSH2",
      "value": "0xB5"
    },
    "176": {
      "op": "JUMPI"
    },
    "177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "179": {
      "op": "DUP1"
    },
    "180": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "REVERT",
      "path": "1"
    },
    "181": {
      "op": "JUMPDEST"
    },
    "182": {
      "offset": [
        309,
        343
      ],
      "op": "POP",
      "path": "1"
    },
    "183": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD3"
    },
    "186": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "188": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP1",
      "path": "1"
    },
    "189": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "190": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SUB",
      "path": "1"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "193": {
      "op": "DUP2"
    },
    "194": {
      "op": "LT"
    },
    "195": {
      "op": "ISZERO"
    },
    "196": {
      "op": "PUSH2",
      "value": "0xCC"
    },
    "199": {
      "op": "JUMPI"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "202": {
      "op": "DUP1"
    },
    "203": {
      "op": "REVERT"
    },
    "204": {
      "op": "JUMPDEST"
    },
    "205": {
      "op": "POP"
    },
    "206": {
      "offset": [
        309,
        343
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "207": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D5"
    },
    "210": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        309,
        343
      ],
      "op": "JUMP",
      "path": "1"
    },
    "211": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "212": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "214": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP1",
      "path": "1"
    },
    "215": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "222": {
      "op": "SHL"
    },
    "223": {
      "op": "SUB"
    },
    "224": {
      "offset": [
        309,
        343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "225": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "226": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "AND",
      "path": "1"
    },
    "227": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP3",
      "path": "1"
    },
    "228": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "229": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "230": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "231": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "232": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "233": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SUB",
      "path": "1"
    },
    "234": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "236": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "ADD",
      "path": "1"
    },
    "237": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "238": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "RETURN",
      "path": "1"
    },
    "239": {
      "offset": [
        376,
        414
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "240": {
      "fn": "Sukuk.withdraw",
      "offset": [
        376,
        414
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "241": {
      "op": "DUP1"
    },
    "242": {
      "op": "ISZERO"
    },
    "243": {
      "op": "PUSH2",
      "value": "0xFB"
    },
    "246": {
      "op": "JUMPI"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "249": {
      "op": "DUP1"
    },
    "250": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.withdraw",
      "offset": [
        376,
        414
      ],
      "op": "REVERT",
      "path": "1"
    },
    "251": {
      "op": "JUMPDEST"
    },
    "252": {
      "offset": [
        376,
        414
      ],
      "op": "POP",
      "path": "1"
    },
    "253": {
      "fn": "Sukuk.withdraw",
      "offset": [
        376,
        414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD3"
    },
    "256": {
      "fn": "Sukuk.withdraw",
      "offset": [
        376,
        414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FC"
    },
    "259": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        376,
        414
      ],
      "op": "JUMP",
      "path": "1"
    },
    "260": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        815,
        1053
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "261": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        815,
        1053
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62"
    },
    "264": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        815,
        1053
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "266": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        815,
        1053
      ],
      "op": "DUP1",
      "path": "1"
    },
    "267": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        815,
        1053
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "268": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        815,
        1053
      ],
      "op": "SUB",
      "path": "1"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "271": {
      "op": "DUP2"
    },
    "272": {
      "op": "LT"
    },
    "273": {
      "op": "ISZERO"
    },
    "274": {
      "op": "PUSH2",
      "value": "0x11A"
    },
    "277": {
      "op": "JUMPI"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "280": {
      "op": "DUP1"
    },
    "281": {
      "op": "REVERT"
    },
    "282": {
      "op": "JUMPDEST"
    },
    "283": {
      "op": "POP"
    },
    "284": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        815,
        1053
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "285": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        815,
        1053
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20B"
    },
    "288": {
      "fn": "Sukuk.purchase_suk",
      "jump": "i",
      "offset": [
        815,
        1053
      ],
      "op": "JUMP",
      "path": "1"
    },
    "289": {
      "offset": [
        349,
        370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "290": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        349,
        370
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "291": {
      "op": "DUP1"
    },
    "292": {
      "op": "ISZERO"
    },
    "293": {
      "op": "PUSH2",
      "value": "0x12D"
    },
    "296": {
      "op": "JUMPI"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "299": {
      "op": "DUP1"
    },
    "300": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.purchase_suk",
      "offset": [
        349,
        370
      ],
      "op": "REVERT",
      "path": "1"
    },
    "301": {
      "op": "JUMPDEST"
    },
    "302": {
      "offset": [
        349,
        370
      ],
      "op": "POP",
      "path": "1"
    },
    "303": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        349,
        370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD3"
    },
    "306": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        349,
        370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x261"
    },
    "309": {
      "fn": "Sukuk.purchase_suk",
      "jump": "i",
      "offset": [
        349,
        370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "310": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1142,
        1490
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "311": {
      "offset": [
        1112,
        1117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "313": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1112,
        1117
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "320": {
      "op": "SHL"
    },
    "321": {
      "op": "SUB"
    },
    "322": {
      "offset": [
        1112,
        1117
      ],
      "op": "AND",
      "path": "1"
    },
    "323": {
      "offset": [
        1098,
        1108
      ],
      "op": "CALLER",
      "path": "1"
    },
    "324": {
      "offset": [
        1098,
        1117
      ],
      "op": "EQ",
      "path": "1"
    },
    "325": {
      "offset": [
        1090,
        1118
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D"
    },
    "328": {
      "offset": [
        1090,
        1118
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "329": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1090,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "331": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1090,
        1118
      ],
      "op": "DUP1",
      "path": "1"
    },
    "332": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1090,
        1118
      ],
      "op": "REVERT",
      "path": "1"
    },
    "333": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1090,
        1118
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "334": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x40"
    },
    "336": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "337": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1206
      ],
      "op": "CALLER",
      "path": "1"
    },
    "338": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1206
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "339": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1216,
        1237
      ],
      "op": "SELFBALANCE",
      "path": "1"
    },
    "340": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "DUP1",
      "path": "1"
    },
    "341": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "342": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "345": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "MUL",
      "path": "1"
    },
    "346": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "347": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "349": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "DUP2",
      "path": "1"
    },
    "350": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "DUP2",
      "path": "1"
    },
    "351": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "DUP2",
      "path": "1"
    },
    "352": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1216,
        1237
      ],
      "op": "DUP6",
      "path": "1"
    },
    "353": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1206
      ],
      "op": "DUP9",
      "path": "1"
    },
    "354": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "DUP9",
      "path": "1"
    },
    "355": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "CALL",
      "path": "1"
    },
    "356": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "357": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "POP",
      "path": "1"
    },
    "358": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "POP",
      "path": "1"
    },
    "359": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "POP",
      "path": "1"
    },
    "360": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "POP",
      "path": "1"
    },
    "361": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1196,
        1238
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "362": {
      "op": "DUP1"
    },
    "363": {
      "op": "ISZERO"
    },
    "364": {
      "op": "PUSH2",
      "value": "0x179"
    },
    "367": {
      "op": "JUMPI"
    },
    "368": {
      "op": "RETURNDATASIZE"
    },
    "369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "371": {
      "op": "DUP1"
    },
    "372": {
      "op": "RETURNDATACOPY"
    },
    "373": {
      "op": "RETURNDATASIZE"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "376": {
      "op": "REVERT"
    },
    "377": {
      "op": "JUMPDEST"
    },
    "378": {
      "op": "POP"
    },
    "379": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1267,
        1286
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "381": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1249,
        1483
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "382": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1318,
        1327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "384": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1318,
        1334
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "385": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1304,
        1334
      ],
      "op": "DUP2",
      "path": "1"
    },
    "386": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1304,
        1334
      ],
      "op": "LT",
      "path": "1"
    },
    "387": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1249,
        1483
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "388": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1249,
        1483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0"
    },
    "391": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1249,
        1483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "392": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1386,
        1400
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "394": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "396": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1413,
        1424
      ],
      "op": "DUP3",
      "path": "1"
    },
    "397": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "DUP2",
      "path": "1"
    },
    "398": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "399": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "DUP2",
      "path": "1"
    },
    "400": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "LT",
      "path": "1"
    },
    "401": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x196"
    },
    "404": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "405": {
      "dev": "Index out of range",
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "INVALID",
      "path": "1"
    },
    "406": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "407": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "409": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "410": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "DUP3",
      "path": "1"
    },
    "411": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "412": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "414": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "DUP1",
      "path": "1"
    },
    "415": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "DUP4",
      "path": "1"
    },
    "416": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "417": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "418": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "419": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "ADD",
      "path": "1"
    },
    "420": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "427": {
      "op": "SHL"
    },
    "428": {
      "op": "SUB"
    },
    "429": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "AND",
      "path": "1"
    },
    "430": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1439,
        1468
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 1
    },
    "431": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1439,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "432": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1439,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "433": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1439,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "434": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1439,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "435": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1439,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "437": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1439,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "438": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1439,
        1468
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "439": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1439,
        1472
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "440": {
      "op": "POP"
    },
    "441": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1403,
        1425
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "443": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1348,
        1361
      ],
      "op": "ADD",
      "path": "1",
      "statement": 2
    },
    "444": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1249,
        1483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17D"
    },
    "447": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1249,
        1483
      ],
      "op": "JUMP",
      "path": "1"
    },
    "448": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1249,
        1483
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "449": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1249,
        1483
      ],
      "op": "POP",
      "path": "1"
    },
    "450": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        1142,
        1490
      ],
      "op": "JUMP",
      "path": "1"
    },
    "451": {
      "offset": [
        247,
        303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "452": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "454": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "456": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "457": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "458": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "459": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "460": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "461": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "462": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "464": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "465": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "466": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "467": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "468": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        247,
        303
      ],
      "op": "JUMP",
      "path": "1"
    },
    "469": {
      "offset": [
        309,
        343
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "470": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "472": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "473": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "474": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "475": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "476": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "LT",
      "path": "1"
    },
    "477": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E2"
    },
    "480": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "481": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "INVALID",
      "path": "1"
    },
    "482": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "483": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "485": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "486": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP3",
      "path": "1"
    },
    "487": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "488": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "490": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "491": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "492": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "493": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "ADD",
      "path": "1"
    },
    "494": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "501": {
      "op": "SHL"
    },
    "502": {
      "op": "SUB"
    },
    "503": {
      "offset": [
        309,
        343
      ],
      "op": "AND",
      "path": "1"
    },
    "504": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "505": {
      "op": "POP"
    },
    "506": {
      "offset": [
        309,
        343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "507": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        309,
        343
      ],
      "op": "JUMP",
      "path": "1"
    },
    "508": {
      "offset": [
        376,
        414
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "509": {
      "fn": "Sukuk.withdraw",
      "offset": [
        376,
        414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "511": {
      "fn": "Sukuk.withdraw",
      "offset": [
        376,
        414
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "518": {
      "op": "SHL"
    },
    "519": {
      "op": "SUB"
    },
    "520": {
      "offset": [
        376,
        414
      ],
      "op": "AND",
      "path": "1"
    },
    "521": {
      "fn": "Sukuk.withdraw",
      "offset": [
        376,
        414
      ],
      "op": "DUP2",
      "path": "1"
    },
    "522": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        376,
        414
      ],
      "op": "JUMP",
      "path": "1"
    },
    "523": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        815,
        1053
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "524": {
      "op": "POP"
    },
    "525": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        977,
        987
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 3
    },
    "526": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        976
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "528": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        988
      ],
      "op": "DUP2",
      "path": "1"
    },
    "529": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        988
      ],
      "op": "DUP2",
      "path": "1"
    },
    "530": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        988
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "531": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        988
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "533": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        988
      ],
      "op": "DUP2",
      "path": "1"
    },
    "534": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        988
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "535": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        988
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "536": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        988
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "538": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        988
      ],
      "op": "DUP2",
      "path": "1"
    },
    "539": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        988
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "540": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        1001
      ],
      "op": "DUP1",
      "path": "1"
    },
    "541": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        1001
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "542": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        992,
        1001
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "543": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        1001
      ],
      "op": "ADD",
      "path": "1"
    },
    "544": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        1001
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "545": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        955,
        1001
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "548": {
      "op": "DUP1"
    },
    "549": {
      "op": "SLOAD"
    },
    "550": {
      "op": "DUP1"
    },
    "551": {
      "op": "DUP3"
    },
    "552": {
      "op": "ADD"
    },
    "553": {
      "op": "DUP3"
    },
    "554": {
      "op": "SSTORE"
    },
    "555": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 4
    },
    "556": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "557": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "590": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "ADD",
      "path": "1"
    },
    "591": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "DUP1",
      "path": "1"
    },
    "592": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "op": "SUB"
    },
    "601": {
      "op": "NOT"
    },
    "602": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "AND",
      "path": "1"
    },
    "603": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "604": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "605": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "OR",
      "path": "1"
    },
    "606": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "607": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1011,
        1046
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "608": {
      "fn": "Sukuk.purchase_suk",
      "jump": "o",
      "offset": [
        815,
        1053
      ],
      "op": "JUMP",
      "path": "1"
    },
    "609": {
      "offset": [
        349,
        370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "610": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        349,
        370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "612": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        349,
        370
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "619": {
      "op": "SHL"
    },
    "620": {
      "op": "SUB"
    },
    "621": {
      "offset": [
        349,
        370
      ],
      "op": "AND",
      "path": "1"
    },
    "622": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        349,
        370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "623": {
      "fn": "Sukuk.purchase_suk",
      "jump": "o",
      "offset": [
        349,
        370
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "637192d06535accdee15f5edae49bfeed2da60de",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.0;\n\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\n\n\n// This one for now to track what each investor/ I will look at the implementation later\n\n\ncontract Sukuk{\n    mapping(address => uint256) public addressToAmountFunded;\n    address payable[] public investors;\n    address public  admin;\n    AggregatorV3Interface public priceFeed;\n\n    //Sukuk State\n    enum Sukuk_state{\n        OPEN,\n        CLOSE,\n        REDEEM_PERIOD,\n        TERM_1,\n        TERM_2\n    }\n\n\n\n\n    //added an argument to constructor for testing\n    constructor(\n        address _priceFeed\n      ) \n    public {\n        priceFeed = AggregatorV3Interface(_priceFeed);\n        // Admin will be the contract sender for now\n        admin = msg.sender;\n\n    }\n\n    function purchase_suk(uint256 _number_of_sukuk) public payable{\n\n\n\n        // Right now it only tracks the amount and address only.\n        addressToAmountFunded[msg.sender] += msg.value;\n        investors.push(payable(msg.sender));\n    }\n\n\n    modifier onlyAdmin(){\n        require(msg.sender == admin);\n        _;\n    }\n\n    function withdraw() public payable onlyAdmin{\n        msg.sender.transfer(address(this).balance);\n\n        for (\n            uint256 funderIndex = 0;\n            funderIndex < investors.length;\n            funderIndex++\n        ) {\n            address funder = investors[funderIndex];\n            addressToAmountFunded[funder] = 0;\n        }\n\n    }\n\n    //function redeem() public payable{}\n\n\n}",
  "sourceMap": "227:1309:1:-:0;;;605:204;8:9:-1;5:2;;;30:1;27;20:12;5:2;605:204:1;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;605:204:1;675:9;:45;;-1:-1:-1;;;;;675:45:1;;;-1:-1:-1;;;;;;675:45:1;;;;;;783:5;:18;;;;;791:10;783:18;;;227:1309;;;;;;",
  "sourcePath": "contracts/Purchese.sol",
  "type": "contract"
}