{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/DeLL/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
    "2": "contracts/Purchese.sol"
  },
  "ast": {
    "absolutePath": "contracts/Purchese.sol",
    "exportedSymbols": {
      "Sukuk": [
        113
      ]
    },
    "id": 114,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:2"
      },
      {
        "absolutePath": "C:/Users/DeLL/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 114,
        "sourceUnit": 160,
        "src": "66:76:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/DeLL/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
        "file": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 114,
        "sourceUnit": 299,
        "src": "143:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 113,
        "linearizedBaseContracts": [
          113
        ],
        "name": "Sukuk",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3e47d6f3",
            "id": 7,
            "mutability": "mutable",
            "name": "addressToAmountFunded",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 113,
            "src": "234:56:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "242:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "234:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "253:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3feb5f2b",
            "id": 10,
            "mutability": "mutable",
            "name": "investors",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 113,
            "src": "296:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "296:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 9,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "296:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 12,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 113,
            "src": "328:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "328:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "741bef1a",
            "id": 14,
            "mutability": "mutable",
            "name": "priceFeed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 113,
            "src": "354:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$159",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 13,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 159,
              "src": "354:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$159",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "490:144:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "500:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$159",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21,
                          "name": "_priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "534:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 20,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "512:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$159_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "512:33:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$159",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "500:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$159",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "500:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 25,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "608:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 26,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "616:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "616:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "608:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "608:18:2"
                }
              ]
            },
            "documentation": null,
            "id": 31,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 31,
                  "src": "462:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "461:22:2"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "490:0:2"
            },
            "scope": 113,
            "src": "450:184:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "670:167:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "addressToAmountFunded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "748:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 37,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 35,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "770:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "770:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "748:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "785:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "785:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "748:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "748:46:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "819:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "819:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "804:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "804:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "804:26:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b60d4288",
            "id": 50,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "653:2:2"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:2"
            },
            "scope": 113,
            "src": "640:197:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "864:56:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 53,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "882:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "882:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 55,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "896:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "882:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 52,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "874:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "874:28:2"
                },
                {
                  "id": 59,
                  "nodeType": "PlaceholderStatement",
                  "src": "912:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:2:2"
            },
            "src": "844:76:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "970:341:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 73,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1008:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Sukuk_$113",
                                "typeString": "contract Sukuk"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Sukuk_$113",
                                "typeString": "contract Sukuk"
                              }
                            ],
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1000:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 71,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1000:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1000:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1000:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "980:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "980:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "980:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "980:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "980:42:2"
                },
                {
                  "body": {
                    "id": 101,
                    "nodeType": "Block",
                    "src": "1156:111:2",
                    "statements": [
                      {
                        "assignments": [
                          90
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 90,
                            "mutability": "mutable",
                            "name": "funder",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 101,
                            "src": "1170:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 89,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1170:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 94,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 91,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1187:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 93,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 92,
                            "name": "funderIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "1197:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1187:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1170:39:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 95,
                              "name": "addressToAmountFunded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1223:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 97,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 96,
                              "name": "funder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1245:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1223:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1255:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1223:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 100,
                        "nodeType": "ExpressionStatement",
                        "src": "1223:33:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "funderIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1088:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1102:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1102:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1088:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102,
                  "initializationExpression": {
                    "assignments": [
                      79
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 79,
                        "mutability": "mutable",
                        "name": "funderIndex",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 102,
                        "src": "1051:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 78,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1051:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 81,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1073:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1051:23:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1132:13:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "funderIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1132:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 88,
                    "nodeType": "ExpressionStatement",
                    "src": "1132:13:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1033:234:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "investors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1276:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1302:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1288:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 104,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1292:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 105,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1292:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1288:16:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1276:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:28:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 64,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 63,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 61,
                  "src": "961:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "961:9:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:2:2"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:0:2"
            },
            "scope": 113,
            "src": "926:385:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 114,
        "src": "214:1105:2"
      }
    ],
    "src": "33:1289:2"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161039f38038061039f8339818101604052602081101561003357600080fd5b5051600380546001600160a01b039092166001600160a01b031992831617905560028054909116331790556103328061006d6000396000f3fe6080604052600436106100555760003560e01c80633ccfd60b1461005a5780633e47d6f3146100645780633feb5f2b146100a9578063741bef1a146100ef578063b60d428814610104578063f851a4401461010c575b600080fd5b610062610121565b005b34801561007057600080fd5b506100976004803603602081101561008757600080fd5b50356001600160a01b03166101cc565b60408051918252519081900360200190f35b3480156100b557600080fd5b506100d3600480360360208110156100cc57600080fd5b50356101de565b604080516001600160a01b039092168252519081900360200190f35b3480156100fb57600080fd5b506100d3610205565b610062610214565b34801561011857600080fd5b506100d3610269565b6002546001600160a01b0316331461013857600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610164573d6000803e3d6000fd5b5060005b6001548110156101ab5760006001828154811061018157fe5b60009182526020808320909101546001600160a01b03168252819052604081205550600101610168565b5060408051600081526020810191829052516101c991600191610278565b50565b60006020819052908152604090205481565b600181815481106101eb57fe5b6000918252602090912001546001600160a01b0316905081565b6003546001600160a01b031681565b33600081815260208190526040812080543401905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b6002546001600160a01b031681565b8280548282559060005260206000209081019282156102cd579160200282015b828111156102cd57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610298565b506102d99291506102dd565b5090565b5b808211156102d95780546001600160a01b03191681556001016102de56fea2646970667358221220d67a8f52cfb6180c9897a6b8111c6ef108cd4cd0910340ae5864570af531705764736f6c634300060c0033",
  "bytecodeSha1": "aacbe5ed6e116fe6d3c446c4770ed885daee3455",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "Sukuk",
  "coverageMap": {
    "branches": {
      "0": {},
      "2": {}
    },
    "statements": {
      "0": {},
      "2": {
        "Sukuk.fund": {
          "4": [
            748,
            794
          ],
          "5": [
            804,
            830
          ]
        },
        "Sukuk.withdraw": {
          "0": [
            980,
            1022
          ],
          "1": [
            1223,
            1256
          ],
          "2": [
            1132,
            1145
          ],
          "3": [
            1276,
            1304
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/AggregatorV3Interface"
  ],
  "deployedBytecode": "6080604052600436106100555760003560e01c80633ccfd60b1461005a5780633e47d6f3146100645780633feb5f2b146100a9578063741bef1a146100ef578063b60d428814610104578063f851a4401461010c575b600080fd5b610062610121565b005b34801561007057600080fd5b506100976004803603602081101561008757600080fd5b50356001600160a01b03166101cc565b60408051918252519081900360200190f35b3480156100b557600080fd5b506100d3600480360360208110156100cc57600080fd5b50356101de565b604080516001600160a01b039092168252519081900360200190f35b3480156100fb57600080fd5b506100d3610205565b610062610214565b34801561011857600080fd5b506100d3610269565b6002546001600160a01b0316331461013857600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610164573d6000803e3d6000fd5b5060005b6001548110156101ab5760006001828154811061018157fe5b60009182526020808320909101546001600160a01b03168252819052604081205550600101610168565b5060408051600081526020810191829052516101c991600191610278565b50565b60006020819052908152604090205481565b600181815481106101eb57fe5b6000918252602090912001546001600160a01b0316905081565b6003546001600160a01b031681565b33600081815260208190526040812080543401905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b6002546001600160a01b031681565b8280548282559060005260206000209081019282156102cd579160200282015b828111156102cd57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610298565b506102d99291506102dd565b5090565b5b808211156102d95780546001600160a01b03191681556001016102de56fea2646970667358221220d67a8f52cfb6180c9897a6b8111c6ef108cd4cd0910340ae5864570af531705764736f6c634300060c0033",
  "deployedSourceMap": "214:1105:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:385;;;:::i;:::-;;234:56;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;234:56:2;-1:-1:-1;;;;;234:56:2;;:::i;:::-;;;;;;;;;;;;;;;;296:26;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;296:26:2;;:::i;:::-;;;;-1:-1:-1;;;;;296:26:2;;;;;;;;;;;;;;354:38;;;;;;;;;;;;;:::i;640:197::-;;;:::i;328:20::-;;;;;;;;;;;;;:::i;926:385::-;896:5;;-1:-1:-1;;;;;896:5:2;882:10;:19;874:28;;;;;;980:42:::1;::::0;:10:::1;::::0;1000:21:::1;980:42:::0;::::1;;;::::0;::::1;::::0;;;1000:21;980:10;:42;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1051:19;1033:234;1102:9;:16:::0;1088:30;::::1;1033:234;;;1170:14;1187:9;1197:11;1187:22;;;;;;;;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;1187:22:2::1;1223:29:::0;;;;;;;;:33;-1:-1:-1;1187:22:2;1132:13:::1;1033:234;;;-1:-1:-1::0;1288:16:2::1;::::0;;1302:1:::1;1288:16:::0;;::::1;::::0;::::1;::::0;;;;1276:28;::::1;::::0;:9:::1;::::0;:28:::1;:::i;:::-;;926:385::o:0;234:56::-;;;;;;;;;;;;;;:::o;296:26::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;296:26:2;;-1:-1:-1;296:26:2;:::o;354:38::-;;;-1:-1:-1;;;;;354:38:2;;:::o;640:197::-;770:10;748:21;:33;;;;;;;;;;:46;;785:9;748:46;;;-1:-1:-1;804:26:2;;;;;;;;;;;;;-1:-1:-1;;;;;;804:26:2;;;;;;640:197::o;328:20::-;;;-1:-1:-1;;;;;328:20:2;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    214,
    1319
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x3FEB5F2B EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x10C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH2 0x121 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x97 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x205 JUMP JUMPDEST PUSH2 0x62 PUSH2 0x214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x269 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x164 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x181 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 ADD PUSH2 0x168 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0x1C9 SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x278 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1EB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2CD JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2CD JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x298 JUMP JUMPDEST POP PUSH2 0x2D9 SWAP3 SWAP2 POP PUSH2 0x2DD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2D9 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2DE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH27 0x8F52CFB6180C9897A6B8111C6EF108CD4CD0910340AE5864570AF5 BALANCE PUSH17 0x5764736F6C634300060C00330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        214,
        1319
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55"
    },
    "12": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3CCFD60B"
    },
    "25": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "EQ",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A"
    },
    "29": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3E47D6F3"
    },
    "36": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "EQ",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3FEB5F2B"
    },
    "47": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9"
    },
    "51": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x741BEF1A"
    },
    "58": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF"
    },
    "62": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB60D4288"
    },
    "69": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104"
    },
    "73": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF851A440"
    },
    "80": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C"
    },
    "84": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "88": {
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "DUP1",
      "path": "2"
    },
    "89": {
      "first_revert": true,
      "fn": null,
      "offset": [
        214,
        1319
      ],
      "op": "REVERT",
      "path": "2"
    },
    "90": {
      "fn": "Sukuk.withdraw",
      "offset": [
        926,
        1311
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "91": {
      "fn": "Sukuk.withdraw",
      "offset": [
        926,
        1311
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62"
    },
    "94": {
      "fn": "Sukuk.withdraw",
      "offset": [
        926,
        1311
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x121"
    },
    "97": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        926,
        1311
      ],
      "op": "JUMP",
      "path": "2"
    },
    "98": {
      "fn": "Sukuk.withdraw",
      "offset": [
        926,
        1311
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "99": {
      "fn": "Sukuk.withdraw",
      "offset": [
        926,
        1311
      ],
      "op": "STOP",
      "path": "2"
    },
    "100": {
      "offset": [
        234,
        290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "101": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "102": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP1",
      "path": "2"
    },
    "103": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "104": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70"
    },
    "107": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "108": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "110": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP1",
      "path": "2"
    },
    "111": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "REVERT",
      "path": "2"
    },
    "112": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "113": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "POP",
      "path": "2"
    },
    "114": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97"
    },
    "117": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "119": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP1",
      "path": "2"
    },
    "120": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "121": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "SUB",
      "path": "2"
    },
    "122": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "124": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP2",
      "path": "2"
    },
    "125": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "LT",
      "path": "2"
    },
    "126": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "127": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87"
    },
    "130": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "131": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "133": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP1",
      "path": "2"
    },
    "134": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "REVERT",
      "path": "2"
    },
    "135": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "136": {
      "op": "POP"
    },
    "137": {
      "offset": [
        234,
        290
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "144": {
      "op": "SHL"
    },
    "145": {
      "op": "SUB"
    },
    "146": {
      "offset": [
        234,
        290
      ],
      "op": "AND",
      "path": "2"
    },
    "147": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CC"
    },
    "150": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        234,
        290
      ],
      "op": "JUMP",
      "path": "2"
    },
    "151": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "152": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "154": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP1",
      "path": "2"
    },
    "155": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "156": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "157": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP3",
      "path": "2"
    },
    "158": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "159": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "160": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "161": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP2",
      "path": "2"
    },
    "162": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "163": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "SUB",
      "path": "2"
    },
    "164": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "166": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "ADD",
      "path": "2"
    },
    "167": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "168": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "RETURN",
      "path": "2"
    },
    "169": {
      "offset": [
        296,
        322
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "170": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "171": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "172": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "173": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB5"
    },
    "176": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "177": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "179": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "180": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "REVERT",
      "path": "2"
    },
    "181": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "182": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "POP",
      "path": "2"
    },
    "183": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3"
    },
    "186": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "188": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "189": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "190": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SUB",
      "path": "2"
    },
    "191": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "193": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "194": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "LT",
      "path": "2"
    },
    "195": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "196": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "199": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "200": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "202": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "203": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "REVERT",
      "path": "2"
    },
    "204": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "205": {
      "op": "POP"
    },
    "206": {
      "offset": [
        296,
        322
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "207": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "210": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        296,
        322
      ],
      "op": "JUMP",
      "path": "2"
    },
    "211": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "212": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "214": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "215": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "222": {
      "op": "SHL"
    },
    "223": {
      "op": "SUB"
    },
    "224": {
      "offset": [
        296,
        322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "225": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "226": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "AND",
      "path": "2"
    },
    "227": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP3",
      "path": "2"
    },
    "228": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "229": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "230": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "231": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "232": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "233": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SUB",
      "path": "2"
    },
    "234": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "236": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "ADD",
      "path": "2"
    },
    "237": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "238": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "RETURN",
      "path": "2"
    },
    "239": {
      "offset": [
        354,
        392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "240": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "241": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "DUP1",
      "path": "2"
    },
    "242": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "243": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB"
    },
    "246": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "247": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "249": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "DUP1",
      "path": "2"
    },
    "250": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "REVERT",
      "path": "2"
    },
    "251": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "252": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "POP",
      "path": "2"
    },
    "253": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3"
    },
    "256": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x205"
    },
    "259": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        354,
        392
      ],
      "op": "JUMP",
      "path": "2"
    },
    "260": {
      "fn": "Sukuk.fund",
      "offset": [
        640,
        837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "261": {
      "fn": "Sukuk.fund",
      "offset": [
        640,
        837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62"
    },
    "264": {
      "fn": "Sukuk.fund",
      "offset": [
        640,
        837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x214"
    },
    "267": {
      "fn": "Sukuk.fund",
      "jump": "i",
      "offset": [
        640,
        837
      ],
      "op": "JUMP",
      "path": "2"
    },
    "268": {
      "offset": [
        328,
        348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "269": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "270": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "DUP1",
      "path": "2"
    },
    "271": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "272": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118"
    },
    "275": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "278": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "DUP1",
      "path": "2"
    },
    "279": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "REVERT",
      "path": "2"
    },
    "280": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "281": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "POP",
      "path": "2"
    },
    "282": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3"
    },
    "285": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x269"
    },
    "288": {
      "fn": "Sukuk.fund",
      "jump": "i",
      "offset": [
        328,
        348
      ],
      "op": "JUMP",
      "path": "2"
    },
    "289": {
      "fn": "Sukuk.withdraw",
      "offset": [
        926,
        1311
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "290": {
      "offset": [
        896,
        901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "292": {
      "fn": "Sukuk.withdraw",
      "offset": [
        896,
        901
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "299": {
      "op": "SHL"
    },
    "300": {
      "op": "SUB"
    },
    "301": {
      "offset": [
        896,
        901
      ],
      "op": "AND",
      "path": "2"
    },
    "302": {
      "offset": [
        882,
        892
      ],
      "op": "CALLER",
      "path": "2"
    },
    "303": {
      "offset": [
        882,
        901
      ],
      "op": "EQ",
      "path": "2"
    },
    "304": {
      "offset": [
        874,
        902
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x138"
    },
    "307": {
      "offset": [
        874,
        902
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "308": {
      "fn": "Sukuk.withdraw",
      "offset": [
        874,
        902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "310": {
      "fn": "Sukuk.withdraw",
      "offset": [
        874,
        902
      ],
      "op": "DUP1",
      "path": "2"
    },
    "311": {
      "fn": "Sukuk.withdraw",
      "offset": [
        874,
        902
      ],
      "op": "REVERT",
      "path": "2"
    },
    "312": {
      "fn": "Sukuk.withdraw",
      "offset": [
        874,
        902
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "313": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x40"
    },
    "315": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "316": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        990
      ],
      "op": "CALLER",
      "path": "2"
    },
    "317": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        990
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "318": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1000,
        1021
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "319": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "DUP1",
      "path": "2"
    },
    "320": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "321": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8FC"
    },
    "324": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "MUL",
      "path": "2"
    },
    "325": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "326": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "328": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "329": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "330": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "331": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1000,
        1021
      ],
      "op": "DUP6",
      "path": "2"
    },
    "332": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        990
      ],
      "op": "DUP9",
      "path": "2"
    },
    "333": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "DUP9",
      "path": "2"
    },
    "334": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "CALL",
      "path": "2"
    },
    "335": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "336": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "POP",
      "path": "2"
    },
    "337": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "POP",
      "path": "2"
    },
    "338": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "POP",
      "path": "2"
    },
    "339": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "POP",
      "path": "2"
    },
    "340": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "341": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "DUP1",
      "path": "2"
    },
    "342": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "343": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x164"
    },
    "346": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "347": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "348": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "350": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "DUP1",
      "path": "2"
    },
    "351": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "352": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "353": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "355": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "REVERT",
      "path": "2"
    },
    "356": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "357": {
      "fn": "Sukuk.withdraw",
      "offset": [
        980,
        1022
      ],
      "op": "POP",
      "path": "2"
    },
    "358": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1051,
        1070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "360": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1033,
        1267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "361": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1102,
        1111
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "363": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1102,
        1118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "364": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1088,
        1118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "365": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1088,
        1118
      ],
      "op": "LT",
      "path": "2"
    },
    "366": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1033,
        1267
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "367": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1033,
        1267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB"
    },
    "370": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1033,
        1267
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "371": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1170,
        1184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "373": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "375": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1197,
        1208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "376": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "DUP2",
      "path": "2"
    },
    "377": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "378": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "DUP2",
      "path": "2"
    },
    "379": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "LT",
      "path": "2"
    },
    "380": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "383": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "384": {
      "dev": "Index out of range",
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "INVALID",
      "path": "2"
    },
    "385": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "386": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "388": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "389": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "DUP3",
      "path": "2"
    },
    "390": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "391": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "393": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "DUP1",
      "path": "2"
    },
    "394": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "DUP4",
      "path": "2"
    },
    "395": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "396": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "397": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "398": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "ADD",
      "path": "2"
    },
    "399": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "op": "SUB"
    },
    "408": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "AND",
      "path": "2"
    },
    "409": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1223,
        1252
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 1
    },
    "410": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1223,
        1252
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "411": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1223,
        1252
      ],
      "op": "DUP2",
      "path": "2"
    },
    "412": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1223,
        1252
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "413": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1223,
        1252
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "414": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1223,
        1252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "416": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1223,
        1252
      ],
      "op": "DUP2",
      "path": "2"
    },
    "417": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1223,
        1252
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "418": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1223,
        1256
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "419": {
      "op": "POP"
    },
    "420": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1187,
        1209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "422": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1132,
        1145
      ],
      "op": "ADD",
      "path": "2",
      "statement": 2
    },
    "423": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1033,
        1267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x168"
    },
    "426": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1033,
        1267
      ],
      "op": "JUMP",
      "path": "2"
    },
    "427": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1033,
        1267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "428": {
      "op": "POP"
    },
    "429": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x40"
    },
    "431": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "DUP1",
      "path": "2"
    },
    "432": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "433": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1302,
        1303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "435": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "DUP2",
      "path": "2"
    },
    "436": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "437": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "439": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "DUP2",
      "path": "2"
    },
    "440": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "ADD",
      "path": "2"
    },
    "441": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "442": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "DUP3",
      "path": "2"
    },
    "443": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "444": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1288,
        1304
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "445": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1276,
        1304
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "446": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C9"
    },
    "449": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1276,
        1304
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "450": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1276,
        1285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "452": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1276,
        1285
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "453": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "456": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        1276,
        1304
      ],
      "op": "JUMP",
      "path": "2"
    },
    "457": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1276,
        1304
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "458": {
      "fn": "Sukuk.withdraw",
      "offset": [
        1276,
        1304
      ],
      "op": "POP",
      "path": "2"
    },
    "459": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        926,
        1311
      ],
      "op": "JUMP",
      "path": "2"
    },
    "460": {
      "offset": [
        234,
        290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "461": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "463": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "465": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP2",
      "path": "2"
    },
    "466": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "467": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "468": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "469": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP2",
      "path": "2"
    },
    "470": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "471": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "473": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "474": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "475": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "476": {
      "fn": "Sukuk.withdraw",
      "offset": [
        234,
        290
      ],
      "op": "DUP2",
      "path": "2"
    },
    "477": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        234,
        290
      ],
      "op": "JUMP",
      "path": "2"
    },
    "478": {
      "offset": [
        296,
        322
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "479": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "481": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "482": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "483": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "484": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "485": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "LT",
      "path": "2"
    },
    "486": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "489": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "490": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "INVALID",
      "path": "2"
    },
    "491": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "492": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "494": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "495": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "DUP3",
      "path": "2"
    },
    "496": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "497": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "499": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "500": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "501": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "502": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "ADD",
      "path": "2"
    },
    "503": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "510": {
      "op": "SHL"
    },
    "511": {
      "op": "SUB"
    },
    "512": {
      "offset": [
        296,
        322
      ],
      "op": "AND",
      "path": "2"
    },
    "513": {
      "fn": "Sukuk.withdraw",
      "offset": [
        296,
        322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "514": {
      "op": "POP"
    },
    "515": {
      "offset": [
        296,
        322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "516": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        296,
        322
      ],
      "op": "JUMP",
      "path": "2"
    },
    "517": {
      "offset": [
        354,
        392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "518": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "520": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "527": {
      "op": "SHL"
    },
    "528": {
      "op": "SUB"
    },
    "529": {
      "offset": [
        354,
        392
      ],
      "op": "AND",
      "path": "2"
    },
    "530": {
      "fn": "Sukuk.withdraw",
      "offset": [
        354,
        392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "531": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        354,
        392
      ],
      "op": "JUMP",
      "path": "2"
    },
    "532": {
      "fn": "Sukuk.fund",
      "offset": [
        640,
        837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "533": {
      "fn": "Sukuk.fund",
      "offset": [
        770,
        780
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 4
    },
    "534": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "536": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "537": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "538": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        781
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "539": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "541": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "542": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "543": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        781
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "544": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "546": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "547": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        781
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "548": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "549": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        794
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "550": {
      "fn": "Sukuk.fund",
      "offset": [
        785,
        794
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "551": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        794
      ],
      "op": "ADD",
      "path": "2"
    },
    "552": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "553": {
      "fn": "Sukuk.fund",
      "offset": [
        748,
        794
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "556": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 5
    },
    "557": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "558": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "DUP1",
      "path": "2"
    },
    "559": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "DUP3",
      "path": "2"
    },
    "560": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "ADD",
      "path": "2"
    },
    "561": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "DUP3",
      "path": "2"
    },
    "562": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "563": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "564": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "565": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "598": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "ADD",
      "path": "2"
    },
    "599": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "DUP1",
      "path": "2"
    },
    "600": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "op": "SUB"
    },
    "609": {
      "op": "NOT"
    },
    "610": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "AND",
      "path": "2"
    },
    "611": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "612": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "613": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "OR",
      "path": "2"
    },
    "614": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "615": {
      "fn": "Sukuk.fund",
      "offset": [
        804,
        830
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "616": {
      "fn": "Sukuk.fund",
      "jump": "o",
      "offset": [
        640,
        837
      ],
      "op": "JUMP",
      "path": "2"
    },
    "617": {
      "offset": [
        328,
        348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "618": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "620": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "op": "SUB"
    },
    "629": {
      "offset": [
        328,
        348
      ],
      "op": "AND",
      "path": "2"
    },
    "630": {
      "fn": "Sukuk.fund",
      "offset": [
        328,
        348
      ],
      "op": "DUP2",
      "path": "2"
    },
    "631": {
      "fn": "Sukuk.fund",
      "jump": "o",
      "offset": [
        328,
        348
      ],
      "op": "JUMP",
      "path": "2"
    },
    "632": {
      "op": "JUMPDEST"
    },
    "633": {
      "op": "DUP3"
    },
    "634": {
      "op": "DUP1"
    },
    "635": {
      "op": "SLOAD"
    },
    "636": {
      "op": "DUP3"
    },
    "637": {
      "op": "DUP3"
    },
    "638": {
      "op": "SSTORE"
    },
    "639": {
      "op": "SWAP1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "642": {
      "op": "MSTORE"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "647": {
      "op": "KECCAK256"
    },
    "648": {
      "op": "SWAP1"
    },
    "649": {
      "op": "DUP2"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "op": "SWAP3"
    },
    "652": {
      "op": "DUP3"
    },
    "653": {
      "op": "ISZERO"
    },
    "654": {
      "op": "PUSH2",
      "value": "0x2CD"
    },
    "657": {
      "op": "JUMPI"
    },
    "658": {
      "op": "SWAP2"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "661": {
      "op": "MUL"
    },
    "662": {
      "op": "DUP3"
    },
    "663": {
      "op": "ADD"
    },
    "664": {
      "op": "JUMPDEST"
    },
    "665": {
      "op": "DUP3"
    },
    "666": {
      "op": "DUP2"
    },
    "667": {
      "op": "GT"
    },
    "668": {
      "op": "ISZERO"
    },
    "669": {
      "op": "PUSH2",
      "value": "0x2CD"
    },
    "672": {
      "op": "JUMPI"
    },
    "673": {
      "op": "DUP3"
    },
    "674": {
      "op": "MLOAD"
    },
    "675": {
      "op": "DUP3"
    },
    "676": {
      "op": "SLOAD"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "683": {
      "op": "SHL"
    },
    "684": {
      "op": "SUB"
    },
    "685": {
      "op": "NOT"
    },
    "686": {
      "op": "AND"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "op": "SUB"
    },
    "695": {
      "op": "SWAP1"
    },
    "696": {
      "op": "SWAP2"
    },
    "697": {
      "op": "AND"
    },
    "698": {
      "op": "OR"
    },
    "699": {
      "op": "DUP3"
    },
    "700": {
      "op": "SSTORE"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "703": {
      "op": "SWAP1"
    },
    "704": {
      "op": "SWAP3"
    },
    "705": {
      "op": "ADD"
    },
    "706": {
      "op": "SWAP2"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "SWAP1"
    },
    "710": {
      "op": "SWAP2"
    },
    "711": {
      "op": "ADD"
    },
    "712": {
      "op": "SWAP1"
    },
    "713": {
      "op": "PUSH2",
      "value": "0x298"
    },
    "716": {
      "op": "JUMP"
    },
    "717": {
      "op": "JUMPDEST"
    },
    "718": {
      "op": "POP"
    },
    "719": {
      "op": "PUSH2",
      "value": "0x2D9"
    },
    "722": {
      "op": "SWAP3"
    },
    "723": {
      "op": "SWAP2"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "op": "PUSH2",
      "value": "0x2DD"
    },
    "728": {
      "op": "JUMP"
    },
    "729": {
      "op": "JUMPDEST"
    },
    "730": {
      "op": "POP"
    },
    "731": {
      "op": "SWAP1"
    },
    "732": {
      "op": "JUMP"
    },
    "733": {
      "op": "JUMPDEST"
    },
    "734": {
      "op": "JUMPDEST"
    },
    "735": {
      "op": "DUP1"
    },
    "736": {
      "op": "DUP3"
    },
    "737": {
      "op": "GT"
    },
    "738": {
      "op": "ISZERO"
    },
    "739": {
      "op": "PUSH2",
      "value": "0x2D9"
    },
    "742": {
      "op": "JUMPI"
    },
    "743": {
      "op": "DUP1"
    },
    "744": {
      "op": "SLOAD"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "751": {
      "op": "SHL"
    },
    "752": {
      "op": "SUB"
    },
    "753": {
      "op": "NOT"
    },
    "754": {
      "op": "AND"
    },
    "755": {
      "op": "DUP2"
    },
    "756": {
      "op": "SSTORE"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "op": "PUSH2",
      "value": "0x2DE"
    },
    "763": {
      "op": "JUMP"
    }
  },
  "sha1": "460d53dcb22842f7f19cbeb0954d96303f4e0a1e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.9.0;\n\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\";\n\n\ncontract Sukuk{\n    mapping(address => uint256) public addressToAmountFunded;\n    address[] public investors;\n    address public admin;\n    AggregatorV3Interface public priceFeed;\n\n    //added an argument to constructor for testing\n    constructor(address _priceFeed  ) public{\n        priceFeed = AggregatorV3Interface(_priceFeed);\n        // Admin will be the contract sender for now\n        admin = msg.sender;\n\n    }\n\n    function fund() public payable{\n\n\n\n        // Right now it only tracks the amount and address only.\n        addressToAmountFunded[msg.sender] += msg.value;\n        investors.push(msg.sender);\n    }\n\n\n    modifier onlyAdmin(){\n        require(msg.sender == admin);\n        _;\n    }\n\n    function withdraw() public payable onlyAdmin{\n        msg.sender.transfer(address(this).balance);\n\n        for (\n            uint256 funderIndex = 0;\n            funderIndex < investors.length;\n            funderIndex++\n        ) {\n            address funder = investors[funderIndex];\n            addressToAmountFunded[funder] = 0;\n        }\n        investors = new address[](0);\n    }\n\n\n    }\n\n\n",
  "sourceMap": "214:1105:2:-:0;;;450:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;450:184:2;500:9;:45;;-1:-1:-1;;;;;500:45:2;;;-1:-1:-1;;;;;;500:45:2;;;;;;608:5;:18;;;;;616:10;608:18;;;214:1105;;;;;;",
  "sourcePath": "contracts/Purchese.sol",
  "type": "contract"
}