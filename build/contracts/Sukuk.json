{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EndIssue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Ijaara",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IssueSukuk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountDeposited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get",
      "outputs": [
        {
          "internalType": "enum Sukuk.SUKUK_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIjaaraAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numberOfSukuk",
          "type": "uint256"
        }
      ],
      "name": "get_expetected_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "exptectedPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_number_of_sukuk",
          "type": "uint256"
        }
      ],
      "name": "purchase_suk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_Ijaara",
          "type": "address"
        }
      ],
      "name": "setIjaara",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startSukuk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "suk_investors",
      "outputs": [
        {
          "internalType": "address",
          "name": "investoraddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "number_of_sukuk",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "suk_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sukuk_state",
      "outputs": [
        {
          "internalType": "enum Sukuk.SUKUK_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/DeLL/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
    "1": "contracts/Purchese.sol"
  },
  "ast": {
    "absolutePath": "contracts/Purchese.sol",
    "exportedSymbols": {
      "Sukuk": [
        333
      ]
    },
    "id": 334,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "absolutePath": "C:/Users/DeLL/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 334,
        "sourceUnit": 380,
        "src": "57:76:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 333,
        "linearizedBaseContracts": [
          333
        ],
        "name": "Sukuk",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Sukuk.suk_investor",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "investoraddress",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 9,
                "src": "277:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "number_of_sukuk",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 9,
                "src": "310:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "310:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 9,
                "src": "343:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "343:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "suk_investor",
            "nodeType": "StructDefinition",
            "scope": 333,
            "src": "248:116:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e47d6f3",
            "id": 13,
            "name": "addressToAmountFunded",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 333,
            "src": "373:56:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "381:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "373:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 11,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "392:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e72ee67",
            "id": 17,
            "name": "addressToAmountDeposited",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 333,
            "src": "435:59:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "443:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "435:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "454:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3feb5f2b",
            "id": 20,
            "name": "investors",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 333,
            "src": "500:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "500:15:1",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 19,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "500:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 22,
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 333,
            "src": "540:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "540:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "741bef1a",
            "id": 24,
            "name": "priceFeed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 333,
            "src": "567:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$379",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 23,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 379,
              "src": "567:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$379",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "340d02fe",
            "id": 26,
            "name": "Ijaara",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 333,
            "src": "611:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 25,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "611:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "86e44716",
            "id": 28,
            "name": "suk_price",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 333,
            "src": "647:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "647:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc5dd07c",
            "id": 31,
            "name": "suk_investors",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 333,
            "src": "674:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_suk_investor_$9_storage_$dyn_storage",
              "typeString": "struct Sukuk.suk_investor[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 29,
                "name": "suk_investor",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "674:12:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_suk_investor_$9_storage_ptr",
                  "typeString": "struct Sukuk.suk_investor"
                }
              },
              "id": 30,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "674:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_suk_investor_$9_storage_$dyn_storage_ptr",
                "typeString": "struct Sukuk.suk_investor[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Sukuk.SUKUK_STATE",
            "id": 39,
            "members": [
              {
                "id": 32,
                "name": "COOLDOWN",
                "nodeType": "EnumValue",
                "src": "763:8:1"
              },
              {
                "id": 33,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "879:4:1"
              },
              {
                "id": 34,
                "name": "ISSUE",
                "nodeType": "EnumValue",
                "src": "893:5:1"
              },
              {
                "id": 35,
                "name": "CLOSEED",
                "nodeType": "EnumValue",
                "src": "908:7:1"
              },
              {
                "id": 36,
                "name": "REDEEM_PERIOD",
                "nodeType": "EnumValue",
                "src": "934:13:1"
              },
              {
                "id": 37,
                "name": "TERM_1",
                "nodeType": "EnumValue",
                "src": "957:6:1"
              },
              {
                "id": 38,
                "name": "TERM_2",
                "nodeType": "EnumValue",
                "src": "973:6:1"
              }
            ],
            "name": "SUKUK_STATE",
            "nodeType": "EnumDefinition",
            "src": "737:248:1"
          },
          {
            "constant": false,
            "functionSelector": "3fe8804c",
            "id": 41,
            "name": "sukuk_state",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 333,
            "src": "990:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
              "typeString": "enum Sukuk.SUKUK_STATE"
            },
            "typeName": {
              "contractScope": null,
              "id": 40,
              "name": "SUKUK_STATE",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 39,
              "src": "990:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                "typeString": "enum Sukuk.SUKUK_STATE"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "1075:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 46,
                    "name": "sukuk_state",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "1092:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "functionReturnParameters": 45,
                  "id": 47,
                  "nodeType": "Return",
                  "src": "1085:18:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6d4ce63c",
            "id": 49,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1040:2:1"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "1063:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                    "typeString": "enum Sukuk.SUKUK_STATE"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 43,
                    "name": "SUKUK_STATE",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 39,
                    "src": "1063:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1062:13:1"
            },
            "scope": 333,
            "src": "1028:82:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "1237:212:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1247:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$379",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "_priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1281:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 55,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "1259:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$379_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1259:33:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$379",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1247:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$379",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1355:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "1363:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1363:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1355:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 65,
                      "name": "sukuk_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "1383:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "SUKUK_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1397:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$39_$",
                          "typeString": "type(enum Sukuk.SUKUK_STATE)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSEED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1397:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "src": "1383:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 70,
                      "name": "suk_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1426:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1438:3:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1426:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:15:1"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "name": "_priceFeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 75,
                  "src": "1198:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1188:36:1"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1237:0:1"
            },
            "scope": 333,
            "src": "1177:272:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1550:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "suk_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1560:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 83,
                        "name": "getEntranceFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "1572:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1572:16:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1560:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:28:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "21f5e9e4",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_expetected_price",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "_numberOfSukuk",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1486:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1485:24:1"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "exptectedPrice",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1526:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1525:24:1"
            },
            "scope": 333,
            "src": "1456:139:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1657:316:1",
              "statements": [
                {
                  "assignments": [
                    null,
                    94,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 94,
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 123,
                      "src": "1670:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1670:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 98,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1692:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$379",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 378,
                      "src": "1692:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1692:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1667:52:1"
                },
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "name": "adjustedPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 123,
                      "src": "1729:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1729:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "1761:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1753:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1753:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1753:14:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1770:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1774:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "1770:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "1753:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1729:47:1"
                },
                {
                  "assignments": [
                    111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 111,
                      "name": "costToEnter",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 123,
                      "src": "1880:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1880:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 120,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "suk_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "1903:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1915:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1919:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1915:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1903:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 117,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1902:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "adjustedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1925:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1902:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1880:58:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 121,
                    "name": "costToEnter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 111,
                    "src": "1955:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 92,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "1948:18:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "09bc33a7",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntranceFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1624:2:1"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 124,
                  "src": "1648:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1647:9:1"
            },
            "scope": 333,
            "src": "1601:372:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "2025:172:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                          "typeString": "enum Sukuk.SUKUK_STATE"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "sukuk_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2060:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 131,
                            "name": "SUKUK_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2075:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$39_$",
                              "typeString": "type(enum Sukuk.SUKUK_STATE)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSEED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2075:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "src": "2060:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e2774206973737565206e65772073756b7320796574",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2108:26:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_093195bfbb4181c02475a26c76f54743a575d92d6e29bff005146da48d815657",
                          "typeString": "literal_string \"Can't issue new suks yet\""
                        },
                        "value": "Can't issue new suks yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_093195bfbb4181c02475a26c76f54743a575d92d6e29bff005146da48d815657",
                          "typeString": "literal_string \"Can't issue new suks yet\""
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        397,
                        398
                      ],
                      "referencedDeclaration": 398,
                      "src": "2039:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:105:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:105:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 137,
                      "name": "sukuk_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2159:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "SUKUK_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2173:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$39_$",
                          "typeString": "type(enum Sukuk.SUKUK_STATE)"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2173:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "src": "2159:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:30:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "45bcad9a",
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 127,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 126,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "2016:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2016:9:1"
              }
            ],
            "name": "startSukuk",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2005:3:1"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2025:0:1"
            },
            "scope": 333,
            "src": "1982:215:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2251:162:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                          "typeString": "enum Sukuk.SUKUK_STATE"
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 149,
                          "name": "sukuk_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2282:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 150,
                            "name": "SUKUK_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2297:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$39_$",
                              "typeString": "type(enum Sukuk.SUKUK_STATE)"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2297:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "src": "2282:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e2774206973737565206e65772073756b7320796574",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2327:26:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_093195bfbb4181c02475a26c76f54743a575d92d6e29bff005146da48d815657",
                          "typeString": "literal_string \"Can't issue new suks yet\""
                        },
                        "value": "Can't issue new suks yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_093195bfbb4181c02475a26c76f54743a575d92d6e29bff005146da48d815657",
                          "typeString": "literal_string \"Can't issue new suks yet\""
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        397,
                        398
                      ],
                      "referencedDeclaration": 398,
                      "src": "2261:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2261:102:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "2261:102:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 156,
                      "name": "sukuk_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2374:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "SUKUK_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2388:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$39_$",
                          "typeString": "type(enum Sukuk.SUKUK_STATE)"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ISSUE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2388:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "src": "2374:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2374:31:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ce00d813",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 146,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 145,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "2242:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2242:9:1"
              }
            ],
            "name": "IssueSukuk",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2231:3:1"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2251:0:1"
            },
            "scope": 333,
            "src": "2211:202:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "2455:145:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                          "typeString": "enum Sukuk.SUKUK_STATE"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 168,
                          "name": "sukuk_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2486:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 169,
                            "name": "SUKUK_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2501:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$39_$",
                              "typeString": "type(enum Sukuk.SUKUK_STATE)"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ISSUE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2501:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "src": "2486:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54657374",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2532:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                          "typeString": "literal_string \"Test\""
                        },
                        "value": "Test"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                          "typeString": "literal_string \"Test\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        397,
                        398
                      ],
                      "referencedDeclaration": 398,
                      "src": "2465:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2465:83:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:83:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 175,
                      "name": "sukuk_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2559:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "SUKUK_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2573:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$39_$",
                          "typeString": "type(enum Sukuk.SUKUK_STATE)"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "COOLDOWN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2573:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "src": "2559:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:34:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8a2fee73",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 165,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 164,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "2446:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2446:9:1"
              }
            ],
            "name": "EndIssue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2436:2:1"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2455:0:1"
            },
            "scope": 333,
            "src": "2419:181:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "2645:153:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                          "typeString": "enum Sukuk.SUKUK_STATE"
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "sukuk_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2676:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 188,
                            "name": "SUKUK_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2691:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$39_$",
                              "typeString": "type(enum Sukuk.SUKUK_STATE)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "COOLDOWN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2691:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "src": "2676:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54657374",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2725:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                          "typeString": "literal_string \"Test\""
                        },
                        "value": "Test"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                          "typeString": "literal_string \"Test\""
                        }
                      ],
                      "id": 186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        397,
                        398
                      ],
                      "referencedDeclaration": 398,
                      "src": "2655:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2655:86:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2655:86:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "sukuk_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2752:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "SUKUK_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2766:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$39_$",
                          "typeString": "type(enum Sukuk.SUKUK_STATE)"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "REDEEM_PERIOD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2766:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "src": "2752:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$39",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "2752:39:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9e3578d7",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 184,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 183,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "2636:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2636:9:1"
              }
            ],
            "name": "startRedeem",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2626:2:1"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2645:0:1"
            },
            "scope": 333,
            "src": "2606:192:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "2876:580:1",
              "statements": [
                {
                  "assignments": [
                    206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 206,
                      "name": "expectedPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 237,
                      "src": "3173:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 205,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3173:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 210,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 208,
                        "name": "_number_of_sukuk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "3215:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 207,
                      "name": "get_expetected_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "3194:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3194:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3173:59:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 212,
                          "name": "expectedPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "3263:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "3280:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3280:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3263:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e642074686520636f727265637420616d6f756e74206f6620657468",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3303:32:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30d9c083ea7a5c454975e4c0e568a6b30c0fcf61ef753facff41496269cfeafc",
                          "typeString": "literal_string \"Send the correct amount of eth\""
                        },
                        "value": "Send the correct amount of eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30d9c083ea7a5c454975e4c0e568a6b30c0fcf61ef753facff41496269cfeafc",
                          "typeString": "literal_string \"Send the correct amount of eth\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        397,
                        398
                      ],
                      "referencedDeclaration": 398,
                      "src": "3242:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:103:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:103:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "addressToAmountFunded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "3358:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 222,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "3380:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3380:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3358:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "3395:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3395:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3358:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3358:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 232,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "3437:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3437:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3429:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 230,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3429:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3429:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 227,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3414:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3414:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3414:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "3414:35:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7ce2a070",
            "id": 238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase_suk",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "name": "_number_of_sukuk",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 238,
                  "src": "2836:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2835:26:1"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2876:0:1"
            },
            "scope": 333,
            "src": "2814:642:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "3527:42:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 245,
                      "name": "Ijaara",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "3537:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 246,
                      "name": "_Ijaara",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "3546:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3537:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3537:16:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "bf859271",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 243,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 242,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "3518:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3518:9:1"
              }
            ],
            "name": "setIjaara",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "name": "_Ijaara",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 250,
                  "src": "3484:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3484:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3483:27:1"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3527:0:1"
            },
            "scope": 333,
            "src": "3465:104:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "3602:56:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 253,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "3620:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3620:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 255,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "3634:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3620:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        397,
                        398
                      ],
                      "referencedDeclaration": 397,
                      "src": "3612:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3612:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3612:28:1"
                },
                {
                  "id": 259,
                  "nodeType": "PlaceholderStatement",
                  "src": "3650:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 261,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3600:2:1"
            },
            "src": "3582:76:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "3685:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 264,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "3703:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3703:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 266,
                          "name": "Ijaara",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "3717:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3703:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        397,
                        398
                      ],
                      "referencedDeclaration": 397,
                      "src": "3695:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3695:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "3695:29:1"
                },
                {
                  "id": 270,
                  "nodeType": "PlaceholderStatement",
                  "src": "3734:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 272,
            "name": "onlyIjaara",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3683:2:1"
            },
            "src": "3664:78:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "3809:30:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 277,
                    "name": "admin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22,
                    "src": "3827:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 276,
                  "id": 278,
                  "nodeType": "Return",
                  "src": "3820:12:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b2e6b912",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAdminAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3774:3:1"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 280,
                  "src": "3799:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3799:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3798:10:1"
            },
            "scope": 333,
            "src": "3750:89:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "3904:30:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 285,
                    "name": "Ijaara",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "3921:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 284,
                  "id": 286,
                  "nodeType": "Return",
                  "src": "3914:13:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "84b560f3",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIjaaraAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3869:3:1"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 288,
                  "src": "3894:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3894:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3893:10:1"
            },
            "scope": 333,
            "src": "3844:90:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "3985:312:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 300,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 410,
                              "src": "4023:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Sukuk_$333",
                                "typeString": "contract Sukuk"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Sukuk_$333",
                                "typeString": "contract Sukuk"
                              }
                            ],
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4015:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 298,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4015:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4015:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4015:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "3995:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3995:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3995:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3995:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:42:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 291,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 290,
                  "name": "onlyIjaara",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 272,
                  "src": "3975:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3975:10:1"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3957:2:1"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3985:0:1"
            },
            "scope": 333,
            "src": "3940:357:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "4389:68:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 311,
                        "name": "addressToAmountDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "4399:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 314,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 312,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "4424:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4424:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4399:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "4440:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4440:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4399:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "4399:50:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d0e30db0",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 309,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 308,
                  "name": "onlyIjaara",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 272,
                  "src": "4379:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4379:10:1"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4361:2:1"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4389:0:1"
            },
            "scope": 333,
            "src": "4345:112:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "4523:54:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "4548:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Sukuk_$333",
                            "typeString": "contract Sukuk"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Sukuk_$333",
                            "typeString": "contract Sukuk"
                          }
                        ],
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4540:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4540:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4540:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4540:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 324,
                  "id": 330,
                  "nodeType": "Return",
                  "src": "4533:28:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "12065fe0",
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4481:3:1"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 332,
                  "src": "4506:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4506:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4505:17:1"
            },
            "scope": 333,
            "src": "4462:115:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 334,
        "src": "227:4354:1"
      }
    ],
    "src": "33:4548:1"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516109f33803806109f38339818101604052602081101561003357600080fd5b5051600480546001600160a01b0383166001600160a01b03199182161790915560038054909116331781556008805460ff19166001830217905550506064600655610970806100836000396000f3fe6080604052600436106101405760003560e01c80637ce2a070116100b6578063b2e6b9121161006f578063b2e6b9121461035f578063bf85927114610374578063cc5dd07c146103a7578063ce00d813146103f9578063d0e30db01461040e578063f851a4401461041657610140565b80637ce2a070146102bb5780637e72ee67146102d857806384b560f31461030b57806386e44716146103205780638a2fee73146103355780639e3578d71461034a57610140565b80633e47d6f3116101085780633e47d6f3146101e65780633fe8804c146102195780633feb5f2b1461025257806345bcad9a1461027c5780636d4ce63c14610291578063741bef1a146102a657610140565b806309bc33a71461014557806312065fe01461016c57806321f5e9e414610181578063340d02fe146101ab5780633ccfd60b146101dc575b600080fd5b34801561015157600080fd5b5061015a61042b565b60408051918252519081900360200190f35b34801561017857600080fd5b5061015a6104cc565b34801561018d57600080fd5b5061015a600480360360208110156101a457600080fd5b50356104d0565b3480156101b757600080fd5b506101c06104e2565b604080516001600160a01b039092168252519081900360200190f35b6101e46104f1565b005b3480156101f257600080fd5b5061015a6004803603602081101561020957600080fd5b50356001600160a01b0316610537565b34801561022557600080fd5b5061022e610549565b6040518082600681111561023e57fe5b60ff16815260200191505060405180910390f35b34801561025e57600080fd5b506101c06004803603602081101561027557600080fd5b5035610552565b34801561028857600080fd5b506101e4610579565b34801561029d57600080fd5b5061022e610606565b3480156102b257600080fd5b506101c061060f565b6101e4600480360360208110156102d157600080fd5b503561061e565b3480156102e457600080fd5b5061015a600480360360208110156102fb57600080fd5b50356001600160a01b03166106d7565b34801561031757600080fd5b506101c06106e9565b34801561032c57600080fd5b5061015a6106f8565b34801561034157600080fd5b506101e46106fe565b34801561035657600080fd5b506101e4610777565b34801561036b57600080fd5b506101c06107f0565b34801561038057600080fd5b506101e46004803603602081101561039757600080fd5b50356001600160a01b03166107ff565b3480156103b357600080fd5b506103d1600480360360208110156103ca57600080fd5b5035610838565b604080516001600160a01b039094168452602084019290925282820152519081900360600190f35b34801561040557600080fd5b506101e4610872565b6101e46108fd565b34801561042257600080fd5b506101c061092b565b6004805460408051633fabe5a360e21b8152905160009384936001600160a01b03169263feaf968c928183019260a092829003018186803b15801561046f57600080fd5b505afa158015610483573d6000803e3d6000fd5b505050506040513d60a081101561049957600080fd5b50602001516006549091506402540be4008202906000908290670de0b6b3a764000002816104c357fe5b04935050505090565b4790565b60006104da61042b565b600655919050565b6005546001600160a01b031681565b6005546001600160a01b0316331461050857600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610534573d6000803e3d6000fd5b50565b60006020819052908152604090205481565b60085460ff1681565b6002818154811061055f57fe5b6000918252602090912001546001600160a01b0316905081565b6003546001600160a01b0316331461059057600080fd5b600360085460ff1660068111156105a357fe5b146105f0576040805162461bcd60e51b815260206004820152601860248201527710d85b89dd081a5cdcdd59481b995dc81cdd5adcc81e595d60421b604482015290519081900360640190fd5b600880546001919060ff191682805b0217905550565b60085460ff1690565b6004546001600160a01b031681565b6000610629826104d0565b905034811461067f576040805162461bcd60e51b815260206004820152601e60248201527f53656e642074686520636f727265637420616d6f756e74206f66206574680000604482015290519081900360640190fd5b50503360008181526020819052604081208054340190556002805460018101825591527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319169091179055565b60016020526000908152604090205481565b6005546001600160a01b031690565b60065481565b6003546001600160a01b0316331461071557600080fd5b600260085460ff16600681111561072857fe5b14610763576040805162461bcd60e51b8152602060048083019190915260248201526315195cdd60e21b604482015290519081900360640190fd5b600880546000919060ff19166001836105ff565b6003546001600160a01b0316331461078e57600080fd5b600060085460ff1660068111156107a157fe5b146107dc576040805162461bcd60e51b8152602060048083019190915260248201526315195cdd60e21b604482015290519081900360640190fd5b600880546004919060ff19166001836105ff565b6003546001600160a01b031690565b6003546001600160a01b0316331461081657600080fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6007818154811061084557fe5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b6003546001600160a01b0316331461088957600080fd5b600160085460ff16600681111561089c57fe5b146108e9576040805162461bcd60e51b815260206004820152601860248201527710d85b89dd081a5cdcdd59481b995dc81cdd5adcc81e595d60421b604482015290519081900360640190fd5b600880546002919060ff19166001836105ff565b6005546001600160a01b0316331461091457600080fd5b336000908152600160205260409020805434019055565b6003546001600160a01b03168156fea26469706673582212204cce997b55da0e6168cafb915ce38fae787118a209a77525b39cedb33196fd8464736f6c63430006000033",
  "bytecodeSha1": "ff814d47a933380629c116e13fc8d3b75165600c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.0+commit.26b70077"
  },
  "contractName": "Sukuk",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Sukuk.EndIssue": {
          "21": [
            2486,
            2518,
            true
          ]
        },
        "Sukuk.IssueSukuk": {
          "23": [
            2282,
            2313,
            true
          ]
        },
        "Sukuk.purchase_suk": {
          "20": [
            3263,
            3289,
            true
          ]
        },
        "Sukuk.startRedeem": {
          "22": [
            2676,
            2711,
            true
          ]
        },
        "Sukuk.startSukuk": {
          "19": [
            2060,
            2094,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "Sukuk.EndIssue": {
          "10": [
            2465,
            2548
          ],
          "11": [
            2559,
            2593
          ]
        },
        "Sukuk.IssueSukuk": {
          "16": [
            2261,
            2363
          ],
          "17": [
            2374,
            2405
          ]
        },
        "Sukuk.deposit": {
          "18": [
            4399,
            4449
          ]
        },
        "Sukuk.get": {
          "5": [
            1085,
            1103
          ]
        },
        "Sukuk.getAdminAddress": {
          "14": [
            3820,
            3832
          ]
        },
        "Sukuk.getBalance": {
          "0": [
            4533,
            4561
          ]
        },
        "Sukuk.getIjaaraAddress": {
          "9": [
            3914,
            3927
          ]
        },
        "Sukuk.get_expetected_price": {
          "1": [
            1560,
            1588
          ]
        },
        "Sukuk.purchase_suk": {
          "6": [
            3242,
            3345
          ],
          "7": [
            3358,
            3404
          ],
          "8": [
            3414,
            3449
          ]
        },
        "Sukuk.setIjaara": {
          "15": [
            3537,
            3553
          ]
        },
        "Sukuk.startRedeem": {
          "12": [
            2655,
            2741
          ],
          "13": [
            2752,
            2791
          ]
        },
        "Sukuk.startSukuk": {
          "3": [
            2039,
            2144
          ],
          "4": [
            2159,
            2189
          ]
        },
        "Sukuk.withdraw": {
          "2": [
            3995,
            4037
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/AggregatorV3Interface"
  ],
  "deployedBytecode": "6080604052600436106101405760003560e01c80637ce2a070116100b6578063b2e6b9121161006f578063b2e6b9121461035f578063bf85927114610374578063cc5dd07c146103a7578063ce00d813146103f9578063d0e30db01461040e578063f851a4401461041657610140565b80637ce2a070146102bb5780637e72ee67146102d857806384b560f31461030b57806386e44716146103205780638a2fee73146103355780639e3578d71461034a57610140565b80633e47d6f3116101085780633e47d6f3146101e65780633fe8804c146102195780633feb5f2b1461025257806345bcad9a1461027c5780636d4ce63c14610291578063741bef1a146102a657610140565b806309bc33a71461014557806312065fe01461016c57806321f5e9e414610181578063340d02fe146101ab5780633ccfd60b146101dc575b600080fd5b34801561015157600080fd5b5061015a61042b565b60408051918252519081900360200190f35b34801561017857600080fd5b5061015a6104cc565b34801561018d57600080fd5b5061015a600480360360208110156101a457600080fd5b50356104d0565b3480156101b757600080fd5b506101c06104e2565b604080516001600160a01b039092168252519081900360200190f35b6101e46104f1565b005b3480156101f257600080fd5b5061015a6004803603602081101561020957600080fd5b50356001600160a01b0316610537565b34801561022557600080fd5b5061022e610549565b6040518082600681111561023e57fe5b60ff16815260200191505060405180910390f35b34801561025e57600080fd5b506101c06004803603602081101561027557600080fd5b5035610552565b34801561028857600080fd5b506101e4610579565b34801561029d57600080fd5b5061022e610606565b3480156102b257600080fd5b506101c061060f565b6101e4600480360360208110156102d157600080fd5b503561061e565b3480156102e457600080fd5b5061015a600480360360208110156102fb57600080fd5b50356001600160a01b03166106d7565b34801561031757600080fd5b506101c06106e9565b34801561032c57600080fd5b5061015a6106f8565b34801561034157600080fd5b506101e46106fe565b34801561035657600080fd5b506101e4610777565b34801561036b57600080fd5b506101c06107f0565b34801561038057600080fd5b506101e46004803603602081101561039757600080fd5b50356001600160a01b03166107ff565b3480156103b357600080fd5b506103d1600480360360208110156103ca57600080fd5b5035610838565b604080516001600160a01b039094168452602084019290925282820152519081900360600190f35b34801561040557600080fd5b506101e4610872565b6101e46108fd565b34801561042257600080fd5b506101c061092b565b6004805460408051633fabe5a360e21b8152905160009384936001600160a01b03169263feaf968c928183019260a092829003018186803b15801561046f57600080fd5b505afa158015610483573d6000803e3d6000fd5b505050506040513d60a081101561049957600080fd5b50602001516006549091506402540be4008202906000908290670de0b6b3a764000002816104c357fe5b04935050505090565b4790565b60006104da61042b565b600655919050565b6005546001600160a01b031681565b6005546001600160a01b0316331461050857600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610534573d6000803e3d6000fd5b50565b60006020819052908152604090205481565b60085460ff1681565b6002818154811061055f57fe5b6000918252602090912001546001600160a01b0316905081565b6003546001600160a01b0316331461059057600080fd5b600360085460ff1660068111156105a357fe5b146105f0576040805162461bcd60e51b815260206004820152601860248201527710d85b89dd081a5cdcdd59481b995dc81cdd5adcc81e595d60421b604482015290519081900360640190fd5b600880546001919060ff191682805b0217905550565b60085460ff1690565b6004546001600160a01b031681565b6000610629826104d0565b905034811461067f576040805162461bcd60e51b815260206004820152601e60248201527f53656e642074686520636f727265637420616d6f756e74206f66206574680000604482015290519081900360640190fd5b50503360008181526020819052604081208054340190556002805460018101825591527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319169091179055565b60016020526000908152604090205481565b6005546001600160a01b031690565b60065481565b6003546001600160a01b0316331461071557600080fd5b600260085460ff16600681111561072857fe5b14610763576040805162461bcd60e51b8152602060048083019190915260248201526315195cdd60e21b604482015290519081900360640190fd5b600880546000919060ff19166001836105ff565b6003546001600160a01b0316331461078e57600080fd5b600060085460ff1660068111156107a157fe5b146107dc576040805162461bcd60e51b8152602060048083019190915260248201526315195cdd60e21b604482015290519081900360640190fd5b600880546004919060ff19166001836105ff565b6003546001600160a01b031690565b6003546001600160a01b0316331461081657600080fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6007818154811061084557fe5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b6003546001600160a01b0316331461088957600080fd5b600160085460ff16600681111561089c57fe5b146108e9576040805162461bcd60e51b815260206004820152601860248201527710d85b89dd081a5cdcdd59481b995dc81cdd5adcc81e595d60421b604482015290519081900360640190fd5b600880546002919060ff19166001836105ff565b6005546001600160a01b0316331461091457600080fd5b336000908152600160205260409020805434019055565b6003546001600160a01b03168156fea26469706673582212204cce997b55da0e6168cafb915ce38fae787118a209a77525b39cedb33196fd8464736f6c63430006000033",
  "deployedSourceMap": "227:4354:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1601:372;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1601:372:1;;;:::i;:::-;;;;;;;;;;;;;;;;4462:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4462:115:1;;;:::i;1456:139::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1456:139:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1456:139:1;;:::i;611:29::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;611:29:1;;;:::i;:::-;;;;-1:-1:-1;;;;;611:29:1;;;;;;;;;;;;;;3940:357;;;:::i;:::-;;373:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;373:56:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;373:56:1;-1:-1:-1;;;;;373:56:1;;:::i;990:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;990:30:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;500:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;500:34:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;500:34:1;;:::i;1982:215::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1982:215:1;;;:::i;1028:82::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1028:82:1;;;:::i;567:38::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;567:38:1;;;:::i;2814:642::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2814:642:1;;:::i;435:59::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;435:59:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;435:59:1;-1:-1:-1;;;;;435:59:1;;:::i;3844:90::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3844:90:1;;;:::i;647:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;647:21:1;;;:::i;2419:181::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2419:181:1;;;:::i;2606:192::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2606:192:1;;;:::i;3750:89::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3750:89:1;;;:::i;3465:104::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3465:104:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3465:104:1;-1:-1:-1;;;;;3465:104:1;;:::i;674:35::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;674:35:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;674:35:1;;:::i;:::-;;;;-1:-1:-1;;;;;674:35:1;;;;;;;;;;;;;;;;;;;;;;;;;2211:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2211:202:1;;;:::i;4345:112::-;;;:::i;540:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;540:21:1;;;:::i;1601:372::-;1692:9;;;:27;;;-1:-1:-1;;;1692:27:1;;;;1648:7;;;;-1:-1:-1;;;;;1692:9:1;;:25;;:27;;;;;;;;;;;:9;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;1692:27:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1692:27:1;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1692:27:1;;;1903:9;;1692:27;;-1:-1:-1;1770:6:1;1753:23;;;1729:21;;1753:23;;1915:6;1903:18;1753:23;1902:36;;;;;;-1:-1:-1;;;;1601:372:1;:::o;4462:115::-;4540:21;4462:115;:::o;1456:139::-;1526:22;1572:16;:14;:16::i;:::-;1560:9;:28;1456:139;;-1:-1:-1;1456:139:1:o;611:29::-;;;-1:-1:-1;;;;;611:29:1;;:::o;3940:357::-;3717:6;;-1:-1:-1;;;;;3717:6:1;3703:10;:20;3695:29;;;;;;3995:42:::1;::::0;:10:::1;::::0;4015:21:::1;3995:42:::0;::::1;;;::::0;::::1;::::0;;;4015:21;3995:10;:42;::::1;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3995:42:1;3940:357::o:0;373:56::-;;;;;;;;;;;;;;:::o;990:30::-;;;;;;:::o;500:34::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;500:34:1;;-1:-1:-1;500:34:1;:::o;1982:215::-;3634:5;;-1:-1:-1;;;;;3634:5:1;3620:10;:19;3612:28;;;;;;2075:19:::1;2060:11;::::0;::::1;;:34;::::0;::::1;;;;;;;2039:105;;;::::0;;-1:-1:-1;;;2039:105:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2039:105:1;;;;;;;;;;;;;::::1;;2159:11;:30:::0;;2173:16:::1;::::0;2159:11;-1:-1:-1;;2159:30:1::1;2173:16:::0;;2159:30:::1;;;;;;1982:215::o:0;1028:82::-;1092:11;;;;1028:82;:::o;567:38::-;;;-1:-1:-1;;;;;567:38:1;;:::o;2814:642::-;3173:18;3194:38;3215:16;3194:20;:38::i;:::-;3173:59;;3280:9;3263:13;:26;3242:103;;;;;-1:-1:-1;;;3242:103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3380:10:1;3358:21;:33;;;;;;;;;;:46;;3395:9;3358:46;;;3414:9;27:10:-1;;-1:-1;23:18;;45:23;;3414:35:1;;;;;;-1:-1:-1;;;;;;3414:35:1;;;;;;2814:642::o;435:59::-;;;;;;;;;;;;;:::o;3844:90::-;3921:6;;-1:-1:-1;;;;;3921:6:1;3844:90;:::o;647:21::-;;;;:::o;2419:181::-;3634:5;;-1:-1:-1;;;;;3634:5:1;3620:10;:19;3612:28;;;;;;2501:17:::1;2486:11;::::0;::::1;;:32;::::0;::::1;;;;;;;2465:83;;;::::0;;-1:-1:-1;;;2465:83:1;;::::1;;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;2465:83:1;;;;;;;;;;;;;::::1;;2559:11;:34:::0;;2573:20:::1;::::0;2559:11;-1:-1:-1;;2559:34:1::1;::::0;2573:20;2559:34:::1;::::0;2606:192;3634:5;;-1:-1:-1;;;;;3634:5:1;3620:10;:19;3612:28;;;;;;2691:20:::1;2676:11;::::0;::::1;;:35;::::0;::::1;;;;;;;2655:86;;;::::0;;-1:-1:-1;;;2655:86:1;;::::1;;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;2655:86:1;;;;;;;;;;;;;::::1;;2752:11;:39:::0;;2766:25:::1;::::0;2752:11;-1:-1:-1;;2752:39:1::1;::::0;2766:25;2752:39:::1;::::0;3750:89;3827:5;;-1:-1:-1;;;;;3827:5:1;3750:89;:::o;3465:104::-;3634:5;;-1:-1:-1;;;;;3634:5:1;3620:10;:19;3612:28;;;;;;3537:6:::1;:16:::0;;-1:-1:-1;;;;;;3537:16:1::1;-1:-1:-1::0;;;;;3537:16:1;;;::::1;::::0;;;::::1;::::0;;3465:104::o;674:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;674:35:1;;;;-1:-1:-1;674:35:1;:::o;2211:202::-;3634:5;;-1:-1:-1;;;;;3634:5:1;3620:10;:19;3612:28;;;;;;2297:16:::1;2282:11;::::0;::::1;;:31;::::0;::::1;;;;;;;2261:102;;;::::0;;-1:-1:-1;;;2261:102:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2261:102:1;;;;;;;;;;;;;::::1;;2374:11;:31:::0;;2388:17:::1;::::0;2374:11;-1:-1:-1;;2374:31:1::1;::::0;2388:17;2374:31:::1;::::0;4345:112;3717:6;;-1:-1:-1;;;;;3717:6:1;3703:10;:20;3695:29;;;;;;4424:10:::1;4399:36;::::0;;;:24:::1;:36;::::0;;;;:50;;4440:9:::1;4399:50;::::0;;4345:112::o;540:21::-;;;-1:-1:-1;;;;;540:21:1;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    227,
    4581
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CE2A070 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xB2E6B912 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB2E6B912 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xBF859271 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xCC5DD07C EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xCE00D813 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x416 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x7CE2A070 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x7E72EE67 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x84B560F3 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x86E44716 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8A2FEE73 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x9E3578D7 EQ PUSH2 0x34A JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x3E47D6F3 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x3FE8804C EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x3FEB5F2B EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x45BCAD9A EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x2A6 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x21F5E9E4 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x340D02FE EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x4CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x537 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x23E JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x552 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x579 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x606 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x61E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x6E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x6F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x6FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x777 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x7F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x8FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0xFEAF968C SWAP3 DUP2 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x483 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH5 0x2540BE400 DUP3 MUL SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH8 0xDE0B6B3A7640000 MUL DUP2 PUSH2 0x4C3 JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA PUSH2 0x42B JUMP JUMPDEST PUSH1 0x6 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x534 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x55F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x5A3 JUMPI INVALID JUMPDEST EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x10D85B89DD081A5CDCDD59481B995DC81CDD5ADCC81E595D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x629 DUP3 PUSH2 0x4D0 JUMP JUMPDEST SWAP1 POP CALLVALUE DUP2 EQ PUSH2 0x67F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E642074686520636F727265637420616D6F756E74206F66206574680000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE ADD SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x728 JUMPI INVALID JUMPDEST EQ PUSH2 0x763 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x15195CDD PUSH1 0xE2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x7A1 JUMPI INVALID JUMPDEST EQ PUSH2 0x7DC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x15195CDD PUSH1 0xE2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x4 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x845 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x89C JUMPI INVALID JUMPDEST EQ PUSH2 0x8E9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x10D85B89DD081A5CDCDD59481B995DC81CDD5ADCC81E595D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x2 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLVALUE ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xCE SWAP10 PUSH28 0x55DA0E6168CAFB915CE38FAE787118A209A77525B39CEDB33196FD84 PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        227,
        4581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x140"
    },
    "12": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7CE2A070"
    },
    "25": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "GT",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6"
    },
    "29": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB2E6B912"
    },
    "36": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "GT",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB2E6B912"
    },
    "47": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35F"
    },
    "51": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBF859271"
    },
    "58": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x374"
    },
    "62": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xCC5DD07C"
    },
    "69": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "73": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xCE00D813"
    },
    "80": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F9"
    },
    "84": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "86": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD0E30DB0"
    },
    "91": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "92": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40E"
    },
    "95": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "96": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "97": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF851A440"
    },
    "102": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x416"
    },
    "106": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "107": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x140"
    },
    "110": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMP",
      "path": "1"
    },
    "111": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7CE2A070"
    },
    "118": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "119": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB"
    },
    "122": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "123": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "124": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7E72EE67"
    },
    "129": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "130": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D8"
    },
    "133": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "134": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x84B560F3"
    },
    "140": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30B"
    },
    "144": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "145": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "146": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x86E44716"
    },
    "151": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x320"
    },
    "155": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "156": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "157": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8A2FEE73"
    },
    "162": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x335"
    },
    "166": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "167": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "168": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9E3578D7"
    },
    "173": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34A"
    },
    "177": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "178": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x140"
    },
    "181": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMP",
      "path": "1"
    },
    "182": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "183": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "184": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3E47D6F3"
    },
    "189": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "GT",
      "path": "1"
    },
    "190": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "194": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "195": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3E47D6F3"
    },
    "200": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "201": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E6"
    },
    "204": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "205": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "206": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3FE8804C"
    },
    "211": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "212": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x219"
    },
    "215": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "216": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "217": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3FEB5F2B"
    },
    "222": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "223": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x252"
    },
    "226": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "227": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "228": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x45BCAD9A"
    },
    "233": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "234": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27C"
    },
    "237": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "238": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "239": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6D4CE63C"
    },
    "244": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "245": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x291"
    },
    "248": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "249": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "250": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x741BEF1A"
    },
    "255": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "256": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A6"
    },
    "259": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "260": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x140"
    },
    "263": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMP",
      "path": "1"
    },
    "264": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "265": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "266": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9BC33A7"
    },
    "271": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "272": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x145"
    },
    "275": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "276": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "277": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x12065FE0"
    },
    "282": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "283": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16C"
    },
    "286": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "287": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "288": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x21F5E9E4"
    },
    "293": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "294": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x181"
    },
    "297": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "298": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "299": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x340D02FE"
    },
    "304": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "305": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB"
    },
    "308": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "309": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "310": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3CCFD60B"
    },
    "315": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "EQ",
      "path": "1"
    },
    "316": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DC"
    },
    "319": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "320": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "321": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "323": {
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "324": {
      "first_revert": true,
      "fn": null,
      "offset": [
        227,
        4581
      ],
      "op": "REVERT",
      "path": "1"
    },
    "325": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "326": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "327": {
      "op": "DUP1"
    },
    "328": {
      "op": "ISZERO"
    },
    "329": {
      "op": "PUSH2",
      "value": "0x151"
    },
    "332": {
      "op": "JUMPI"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "335": {
      "op": "DUP1"
    },
    "336": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "REVERT",
      "path": "1"
    },
    "337": {
      "op": "JUMPDEST"
    },
    "338": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "POP",
      "path": "1"
    },
    "339": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "342": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x42B"
    },
    "345": {
      "fn": "Sukuk.getEntranceFee",
      "jump": "i",
      "offset": [
        1601,
        1973
      ],
      "op": "JUMP",
      "path": "1"
    },
    "346": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "347": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "349": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "DUP1",
      "path": "1"
    },
    "350": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "351": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "352": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "DUP3",
      "path": "1"
    },
    "353": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "354": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "355": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "356": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "DUP2",
      "path": "1"
    },
    "357": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "358": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "SUB",
      "path": "1"
    },
    "359": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "361": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "ADD",
      "path": "1"
    },
    "362": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "363": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "RETURN",
      "path": "1"
    },
    "364": {
      "fn": "Sukuk.getBalance",
      "offset": [
        4462,
        4577
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "365": {
      "fn": "Sukuk.getBalance",
      "offset": [
        4462,
        4577
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "366": {
      "op": "DUP1"
    },
    "367": {
      "op": "ISZERO"
    },
    "368": {
      "op": "PUSH2",
      "value": "0x178"
    },
    "371": {
      "op": "JUMPI"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "374": {
      "op": "DUP1"
    },
    "375": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.getBalance",
      "offset": [
        4462,
        4577
      ],
      "op": "REVERT",
      "path": "1"
    },
    "376": {
      "op": "JUMPDEST"
    },
    "377": {
      "fn": "Sukuk.getBalance",
      "offset": [
        4462,
        4577
      ],
      "op": "POP",
      "path": "1"
    },
    "378": {
      "fn": "Sukuk.getBalance",
      "offset": [
        4462,
        4577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "381": {
      "fn": "Sukuk.getBalance",
      "offset": [
        4462,
        4577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CC"
    },
    "384": {
      "fn": "Sukuk.getBalance",
      "jump": "i",
      "offset": [
        4462,
        4577
      ],
      "op": "JUMP",
      "path": "1"
    },
    "385": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "386": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "387": {
      "op": "DUP1"
    },
    "388": {
      "op": "ISZERO"
    },
    "389": {
      "op": "PUSH2",
      "value": "0x18D"
    },
    "392": {
      "op": "JUMPI"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "395": {
      "op": "DUP1"
    },
    "396": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "REVERT",
      "path": "1"
    },
    "397": {
      "op": "JUMPDEST"
    },
    "398": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "POP",
      "path": "1"
    },
    "399": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "402": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "404": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "DUP1",
      "path": "1"
    },
    "405": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "406": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "SUB",
      "path": "1"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "409": {
      "op": "DUP2"
    },
    "410": {
      "op": "LT"
    },
    "411": {
      "op": "ISZERO"
    },
    "412": {
      "op": "PUSH2",
      "value": "0x1A4"
    },
    "415": {
      "op": "JUMPI"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "418": {
      "op": "DUP1"
    },
    "419": {
      "op": "REVERT"
    },
    "420": {
      "op": "JUMPDEST"
    },
    "421": {
      "op": "POP"
    },
    "422": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "423": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D0"
    },
    "426": {
      "fn": "Sukuk.get_expetected_price",
      "jump": "i",
      "offset": [
        1456,
        1595
      ],
      "op": "JUMP",
      "path": "1"
    },
    "427": {
      "offset": [
        611,
        640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "428": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "429": {
      "op": "DUP1"
    },
    "430": {
      "op": "ISZERO"
    },
    "431": {
      "op": "PUSH2",
      "value": "0x1B7"
    },
    "434": {
      "op": "JUMPI"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "437": {
      "op": "DUP1"
    },
    "438": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "REVERT",
      "path": "1"
    },
    "439": {
      "op": "JUMPDEST"
    },
    "440": {
      "offset": [
        611,
        640
      ],
      "op": "POP",
      "path": "1"
    },
    "441": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0"
    },
    "444": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E2"
    },
    "447": {
      "fn": "Sukuk.get_expetected_price",
      "jump": "i",
      "offset": [
        611,
        640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "448": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "449": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "451": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "452": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "459": {
      "op": "SHL"
    },
    "460": {
      "op": "SUB"
    },
    "461": {
      "offset": [
        611,
        640
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "462": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "463": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "AND",
      "path": "1"
    },
    "464": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "DUP3",
      "path": "1"
    },
    "465": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "466": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "467": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "468": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "DUP2",
      "path": "1"
    },
    "469": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "470": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "SUB",
      "path": "1"
    },
    "471": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "473": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "ADD",
      "path": "1"
    },
    "474": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "475": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "RETURN",
      "path": "1"
    },
    "476": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3940,
        4297
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "477": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3940,
        4297
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E4"
    },
    "480": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3940,
        4297
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F1"
    },
    "483": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        3940,
        4297
      ],
      "op": "JUMP",
      "path": "1"
    },
    "484": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3940,
        4297
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "485": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3940,
        4297
      ],
      "op": "STOP",
      "path": "1"
    },
    "486": {
      "offset": [
        373,
        429
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "487": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "488": {
      "op": "DUP1"
    },
    "489": {
      "op": "ISZERO"
    },
    "490": {
      "op": "PUSH2",
      "value": "0x1F2"
    },
    "493": {
      "op": "JUMPI"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "496": {
      "op": "DUP1"
    },
    "497": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "REVERT",
      "path": "1"
    },
    "498": {
      "op": "JUMPDEST"
    },
    "499": {
      "offset": [
        373,
        429
      ],
      "op": "POP",
      "path": "1"
    },
    "500": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "503": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "505": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "DUP1",
      "path": "1"
    },
    "506": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "507": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "SUB",
      "path": "1"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "510": {
      "op": "DUP2"
    },
    "511": {
      "op": "LT"
    },
    "512": {
      "op": "ISZERO"
    },
    "513": {
      "op": "PUSH2",
      "value": "0x209"
    },
    "516": {
      "op": "JUMPI"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "519": {
      "op": "DUP1"
    },
    "520": {
      "op": "REVERT"
    },
    "521": {
      "op": "JUMPDEST"
    },
    "522": {
      "op": "POP"
    },
    "523": {
      "offset": [
        373,
        429
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "op": "SUB"
    },
    "532": {
      "offset": [
        373,
        429
      ],
      "op": "AND",
      "path": "1"
    },
    "533": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x537"
    },
    "536": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        373,
        429
      ],
      "op": "JUMP",
      "path": "1"
    },
    "537": {
      "offset": [
        990,
        1020
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "538": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "539": {
      "op": "DUP1"
    },
    "540": {
      "op": "ISZERO"
    },
    "541": {
      "op": "PUSH2",
      "value": "0x225"
    },
    "544": {
      "op": "JUMPI"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "547": {
      "op": "DUP1"
    },
    "548": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "REVERT",
      "path": "1"
    },
    "549": {
      "op": "JUMPDEST"
    },
    "550": {
      "offset": [
        990,
        1020
      ],
      "op": "POP",
      "path": "1"
    },
    "551": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22E"
    },
    "554": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x549"
    },
    "557": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        990,
        1020
      ],
      "op": "JUMP",
      "path": "1"
    },
    "558": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "559": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "561": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "562": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "DUP1",
      "path": "1"
    },
    "563": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "DUP3",
      "path": "1"
    },
    "564": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "566": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "DUP2",
      "path": "1"
    },
    "567": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "GT",
      "path": "1"
    },
    "568": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "569": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23E"
    },
    "572": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "573": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "INVALID",
      "path": "1"
    },
    "574": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "575": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "577": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "AND",
      "path": "1"
    },
    "578": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "DUP2",
      "path": "1"
    },
    "579": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "580": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "582": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "ADD",
      "path": "1"
    },
    "583": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "584": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "POP",
      "path": "1"
    },
    "585": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "POP",
      "path": "1"
    },
    "586": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "588": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "589": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "DUP1",
      "path": "1"
    },
    "590": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "591": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "SUB",
      "path": "1"
    },
    "592": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "593": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "RETURN",
      "path": "1"
    },
    "594": {
      "offset": [
        500,
        534
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "595": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "596": {
      "op": "DUP1"
    },
    "597": {
      "op": "ISZERO"
    },
    "598": {
      "op": "PUSH2",
      "value": "0x25E"
    },
    "601": {
      "op": "JUMPI"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "604": {
      "op": "DUP1"
    },
    "605": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "REVERT",
      "path": "1"
    },
    "606": {
      "op": "JUMPDEST"
    },
    "607": {
      "offset": [
        500,
        534
      ],
      "op": "POP",
      "path": "1"
    },
    "608": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0"
    },
    "611": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "613": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "DUP1",
      "path": "1"
    },
    "614": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "615": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "SUB",
      "path": "1"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "618": {
      "op": "DUP2"
    },
    "619": {
      "op": "LT"
    },
    "620": {
      "op": "ISZERO"
    },
    "621": {
      "op": "PUSH2",
      "value": "0x275"
    },
    "624": {
      "op": "JUMPI"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "627": {
      "op": "DUP1"
    },
    "628": {
      "op": "REVERT"
    },
    "629": {
      "op": "JUMPDEST"
    },
    "630": {
      "op": "POP"
    },
    "631": {
      "offset": [
        500,
        534
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "632": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x552"
    },
    "635": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        500,
        534
      ],
      "op": "JUMP",
      "path": "1"
    },
    "636": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1982,
        2197
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "637": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1982,
        2197
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "638": {
      "op": "DUP1"
    },
    "639": {
      "op": "ISZERO"
    },
    "640": {
      "op": "PUSH2",
      "value": "0x288"
    },
    "643": {
      "op": "JUMPI"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "646": {
      "op": "DUP1"
    },
    "647": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.startSukuk",
      "offset": [
        1982,
        2197
      ],
      "op": "REVERT",
      "path": "1"
    },
    "648": {
      "op": "JUMPDEST"
    },
    "649": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1982,
        2197
      ],
      "op": "POP",
      "path": "1"
    },
    "650": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1982,
        2197
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E4"
    },
    "653": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1982,
        2197
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x579"
    },
    "656": {
      "fn": "Sukuk.startSukuk",
      "jump": "i",
      "offset": [
        1982,
        2197
      ],
      "op": "JUMP",
      "path": "1"
    },
    "657": {
      "fn": "Sukuk.get",
      "offset": [
        1028,
        1110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "658": {
      "fn": "Sukuk.get",
      "offset": [
        1028,
        1110
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "659": {
      "op": "DUP1"
    },
    "660": {
      "op": "ISZERO"
    },
    "661": {
      "op": "PUSH2",
      "value": "0x29D"
    },
    "664": {
      "op": "JUMPI"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "667": {
      "op": "DUP1"
    },
    "668": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.get",
      "offset": [
        1028,
        1110
      ],
      "op": "REVERT",
      "path": "1"
    },
    "669": {
      "op": "JUMPDEST"
    },
    "670": {
      "fn": "Sukuk.get",
      "offset": [
        1028,
        1110
      ],
      "op": "POP",
      "path": "1"
    },
    "671": {
      "fn": "Sukuk.get",
      "offset": [
        1028,
        1110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22E"
    },
    "674": {
      "fn": "Sukuk.get",
      "offset": [
        1028,
        1110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x606"
    },
    "677": {
      "fn": "Sukuk.get",
      "jump": "i",
      "offset": [
        1028,
        1110
      ],
      "op": "JUMP",
      "path": "1"
    },
    "678": {
      "offset": [
        567,
        605
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "679": {
      "fn": "Sukuk.get",
      "offset": [
        567,
        605
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "680": {
      "op": "DUP1"
    },
    "681": {
      "op": "ISZERO"
    },
    "682": {
      "op": "PUSH2",
      "value": "0x2B2"
    },
    "685": {
      "op": "JUMPI"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "688": {
      "op": "DUP1"
    },
    "689": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.get",
      "offset": [
        567,
        605
      ],
      "op": "REVERT",
      "path": "1"
    },
    "690": {
      "op": "JUMPDEST"
    },
    "691": {
      "offset": [
        567,
        605
      ],
      "op": "POP",
      "path": "1"
    },
    "692": {
      "fn": "Sukuk.get",
      "offset": [
        567,
        605
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0"
    },
    "695": {
      "fn": "Sukuk.get",
      "offset": [
        567,
        605
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x60F"
    },
    "698": {
      "fn": "Sukuk.get",
      "jump": "i",
      "offset": [
        567,
        605
      ],
      "op": "JUMP",
      "path": "1"
    },
    "699": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2814,
        3456
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "700": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2814,
        3456
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E4"
    },
    "703": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2814,
        3456
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "705": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2814,
        3456
      ],
      "op": "DUP1",
      "path": "1"
    },
    "706": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2814,
        3456
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "707": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2814,
        3456
      ],
      "op": "SUB",
      "path": "1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "710": {
      "op": "DUP2"
    },
    "711": {
      "op": "LT"
    },
    "712": {
      "op": "ISZERO"
    },
    "713": {
      "op": "PUSH2",
      "value": "0x2D1"
    },
    "716": {
      "op": "JUMPI"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "719": {
      "op": "DUP1"
    },
    "720": {
      "op": "REVERT"
    },
    "721": {
      "op": "JUMPDEST"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2814,
        3456
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "724": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2814,
        3456
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61E"
    },
    "727": {
      "fn": "Sukuk.purchase_suk",
      "jump": "i",
      "offset": [
        2814,
        3456
      ],
      "op": "JUMP",
      "path": "1"
    },
    "728": {
      "offset": [
        435,
        494
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "729": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "730": {
      "op": "DUP1"
    },
    "731": {
      "op": "ISZERO"
    },
    "732": {
      "op": "PUSH2",
      "value": "0x2E4"
    },
    "735": {
      "op": "JUMPI"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "738": {
      "op": "DUP1"
    },
    "739": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "REVERT",
      "path": "1"
    },
    "740": {
      "op": "JUMPDEST"
    },
    "741": {
      "offset": [
        435,
        494
      ],
      "op": "POP",
      "path": "1"
    },
    "742": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "745": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "747": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "DUP1",
      "path": "1"
    },
    "748": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "749": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "SUB",
      "path": "1"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "752": {
      "op": "DUP2"
    },
    "753": {
      "op": "LT"
    },
    "754": {
      "op": "ISZERO"
    },
    "755": {
      "op": "PUSH2",
      "value": "0x2FB"
    },
    "758": {
      "op": "JUMPI"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "761": {
      "op": "DUP1"
    },
    "762": {
      "op": "REVERT"
    },
    "763": {
      "op": "JUMPDEST"
    },
    "764": {
      "op": "POP"
    },
    "765": {
      "offset": [
        435,
        494
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "op": "SUB"
    },
    "774": {
      "offset": [
        435,
        494
      ],
      "op": "AND",
      "path": "1"
    },
    "775": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D7"
    },
    "778": {
      "fn": "Sukuk.purchase_suk",
      "jump": "i",
      "offset": [
        435,
        494
      ],
      "op": "JUMP",
      "path": "1"
    },
    "779": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3844,
        3934
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "780": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3844,
        3934
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "781": {
      "op": "DUP1"
    },
    "782": {
      "op": "ISZERO"
    },
    "783": {
      "op": "PUSH2",
      "value": "0x317"
    },
    "786": {
      "op": "JUMPI"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "789": {
      "op": "DUP1"
    },
    "790": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3844,
        3934
      ],
      "op": "REVERT",
      "path": "1"
    },
    "791": {
      "op": "JUMPDEST"
    },
    "792": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3844,
        3934
      ],
      "op": "POP",
      "path": "1"
    },
    "793": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3844,
        3934
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0"
    },
    "796": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3844,
        3934
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6E9"
    },
    "799": {
      "fn": "Sukuk.getIjaaraAddress",
      "jump": "i",
      "offset": [
        3844,
        3934
      ],
      "op": "JUMP",
      "path": "1"
    },
    "800": {
      "offset": [
        647,
        668
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "801": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        647,
        668
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "802": {
      "op": "DUP1"
    },
    "803": {
      "op": "ISZERO"
    },
    "804": {
      "op": "PUSH2",
      "value": "0x32C"
    },
    "807": {
      "op": "JUMPI"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "810": {
      "op": "DUP1"
    },
    "811": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        647,
        668
      ],
      "op": "REVERT",
      "path": "1"
    },
    "812": {
      "op": "JUMPDEST"
    },
    "813": {
      "offset": [
        647,
        668
      ],
      "op": "POP",
      "path": "1"
    },
    "814": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        647,
        668
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "817": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        647,
        668
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F8"
    },
    "820": {
      "fn": "Sukuk.getIjaaraAddress",
      "jump": "i",
      "offset": [
        647,
        668
      ],
      "op": "JUMP",
      "path": "1"
    },
    "821": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2419,
        2600
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "822": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2419,
        2600
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "823": {
      "op": "DUP1"
    },
    "824": {
      "op": "ISZERO"
    },
    "825": {
      "op": "PUSH2",
      "value": "0x341"
    },
    "828": {
      "op": "JUMPI"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "831": {
      "op": "DUP1"
    },
    "832": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.EndIssue",
      "offset": [
        2419,
        2600
      ],
      "op": "REVERT",
      "path": "1"
    },
    "833": {
      "op": "JUMPDEST"
    },
    "834": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2419,
        2600
      ],
      "op": "POP",
      "path": "1"
    },
    "835": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2419,
        2600
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E4"
    },
    "838": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2419,
        2600
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6FE"
    },
    "841": {
      "fn": "Sukuk.EndIssue",
      "jump": "i",
      "offset": [
        2419,
        2600
      ],
      "op": "JUMP",
      "path": "1"
    },
    "842": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2606,
        2798
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "843": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2606,
        2798
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "844": {
      "op": "DUP1"
    },
    "845": {
      "op": "ISZERO"
    },
    "846": {
      "op": "PUSH2",
      "value": "0x356"
    },
    "849": {
      "op": "JUMPI"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "852": {
      "op": "DUP1"
    },
    "853": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.startRedeem",
      "offset": [
        2606,
        2798
      ],
      "op": "REVERT",
      "path": "1"
    },
    "854": {
      "op": "JUMPDEST"
    },
    "855": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2606,
        2798
      ],
      "op": "POP",
      "path": "1"
    },
    "856": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2606,
        2798
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E4"
    },
    "859": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2606,
        2798
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x777"
    },
    "862": {
      "fn": "Sukuk.startRedeem",
      "jump": "i",
      "offset": [
        2606,
        2798
      ],
      "op": "JUMP",
      "path": "1"
    },
    "863": {
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3750,
        3839
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "864": {
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3750,
        3839
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "865": {
      "op": "DUP1"
    },
    "866": {
      "op": "ISZERO"
    },
    "867": {
      "op": "PUSH2",
      "value": "0x36B"
    },
    "870": {
      "op": "JUMPI"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "873": {
      "op": "DUP1"
    },
    "874": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3750,
        3839
      ],
      "op": "REVERT",
      "path": "1"
    },
    "875": {
      "op": "JUMPDEST"
    },
    "876": {
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3750,
        3839
      ],
      "op": "POP",
      "path": "1"
    },
    "877": {
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3750,
        3839
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0"
    },
    "880": {
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3750,
        3839
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F0"
    },
    "883": {
      "fn": "Sukuk.getAdminAddress",
      "jump": "i",
      "offset": [
        3750,
        3839
      ],
      "op": "JUMP",
      "path": "1"
    },
    "884": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "885": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "886": {
      "op": "DUP1"
    },
    "887": {
      "op": "ISZERO"
    },
    "888": {
      "op": "PUSH2",
      "value": "0x380"
    },
    "891": {
      "op": "JUMPI"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "894": {
      "op": "DUP1"
    },
    "895": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "REVERT",
      "path": "1"
    },
    "896": {
      "op": "JUMPDEST"
    },
    "897": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "POP",
      "path": "1"
    },
    "898": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E4"
    },
    "901": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "903": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "DUP1",
      "path": "1"
    },
    "904": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "905": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "SUB",
      "path": "1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "908": {
      "op": "DUP2"
    },
    "909": {
      "op": "LT"
    },
    "910": {
      "op": "ISZERO"
    },
    "911": {
      "op": "PUSH2",
      "value": "0x397"
    },
    "914": {
      "op": "JUMPI"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "917": {
      "op": "DUP1"
    },
    "918": {
      "op": "REVERT"
    },
    "919": {
      "op": "JUMPDEST"
    },
    "920": {
      "op": "POP"
    },
    "921": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "op": "SUB"
    },
    "930": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "AND",
      "path": "1"
    },
    "931": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7FF"
    },
    "934": {
      "fn": "Sukuk.setIjaara",
      "jump": "i",
      "offset": [
        3465,
        3569
      ],
      "op": "JUMP",
      "path": "1"
    },
    "935": {
      "offset": [
        674,
        709
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "936": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "937": {
      "op": "DUP1"
    },
    "938": {
      "op": "ISZERO"
    },
    "939": {
      "op": "PUSH2",
      "value": "0x3B3"
    },
    "942": {
      "op": "JUMPI"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "945": {
      "op": "DUP1"
    },
    "946": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "REVERT",
      "path": "1"
    },
    "947": {
      "op": "JUMPDEST"
    },
    "948": {
      "offset": [
        674,
        709
      ],
      "op": "POP",
      "path": "1"
    },
    "949": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D1"
    },
    "952": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "954": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP1",
      "path": "1"
    },
    "955": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "956": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SUB",
      "path": "1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "959": {
      "op": "DUP2"
    },
    "960": {
      "op": "LT"
    },
    "961": {
      "op": "ISZERO"
    },
    "962": {
      "op": "PUSH2",
      "value": "0x3CA"
    },
    "965": {
      "op": "JUMPI"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "968": {
      "op": "DUP1"
    },
    "969": {
      "op": "REVERT"
    },
    "970": {
      "op": "JUMPDEST"
    },
    "971": {
      "op": "POP"
    },
    "972": {
      "offset": [
        674,
        709
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "973": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x838"
    },
    "976": {
      "fn": "Sukuk.setIjaara",
      "jump": "i",
      "offset": [
        674,
        709
      ],
      "op": "JUMP",
      "path": "1"
    },
    "977": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "978": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "980": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP1",
      "path": "1"
    },
    "981": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "op": "SUB"
    },
    "990": {
      "offset": [
        674,
        709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "991": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "992": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "AND",
      "path": "1"
    },
    "993": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP5",
      "path": "1"
    },
    "994": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "995": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "997": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP5",
      "path": "1"
    },
    "998": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "ADD",
      "path": "1"
    },
    "999": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1000": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1001": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1002": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1003": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1004": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1005": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "ADD",
      "path": "1"
    },
    "1006": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1007": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1008": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1009": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1010": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1011": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SUB",
      "path": "1"
    },
    "1012": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1014": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "ADD",
      "path": "1"
    },
    "1015": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1016": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "RETURN",
      "path": "1"
    },
    "1017": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2211,
        2413
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1018": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2211,
        2413
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1019": {
      "op": "DUP1"
    },
    "1020": {
      "op": "ISZERO"
    },
    "1021": {
      "op": "PUSH2",
      "value": "0x405"
    },
    "1024": {
      "op": "JUMPI"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1027": {
      "op": "DUP1"
    },
    "1028": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2211,
        2413
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1029": {
      "op": "JUMPDEST"
    },
    "1030": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2211,
        2413
      ],
      "op": "POP",
      "path": "1"
    },
    "1031": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2211,
        2413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E4"
    },
    "1034": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2211,
        2413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x872"
    },
    "1037": {
      "fn": "Sukuk.IssueSukuk",
      "jump": "i",
      "offset": [
        2211,
        2413
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1038": {
      "fn": "Sukuk.deposit",
      "offset": [
        4345,
        4457
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1039": {
      "fn": "Sukuk.deposit",
      "offset": [
        4345,
        4457
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E4"
    },
    "1042": {
      "fn": "Sukuk.deposit",
      "offset": [
        4345,
        4457
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FD"
    },
    "1045": {
      "fn": "Sukuk.deposit",
      "jump": "i",
      "offset": [
        4345,
        4457
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1046": {
      "offset": [
        540,
        561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1047": {
      "fn": "Sukuk.deposit",
      "offset": [
        540,
        561
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1048": {
      "op": "DUP1"
    },
    "1049": {
      "op": "ISZERO"
    },
    "1050": {
      "op": "PUSH2",
      "value": "0x422"
    },
    "1053": {
      "op": "JUMPI"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1056": {
      "op": "DUP1"
    },
    "1057": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.deposit",
      "offset": [
        540,
        561
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1058": {
      "op": "JUMPDEST"
    },
    "1059": {
      "offset": [
        540,
        561
      ],
      "op": "POP",
      "path": "1"
    },
    "1060": {
      "fn": "Sukuk.deposit",
      "offset": [
        540,
        561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0"
    },
    "1063": {
      "fn": "Sukuk.deposit",
      "offset": [
        540,
        561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x92B"
    },
    "1066": {
      "fn": "Sukuk.deposit",
      "jump": "i",
      "offset": [
        540,
        561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1067": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1068": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1070": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1071": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1701
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1072": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1074": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1075": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1076": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1083": {
      "op": "SHL"
    },
    "1084": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1085": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1086": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1087": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1088": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1648,
        1655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1090": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1648,
        1655
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1091": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1648,
        1655
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1092": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1648,
        1655
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1099": {
      "op": "SHL"
    },
    "1100": {
      "op": "SUB"
    },
    "1101": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1701
      ],
      "op": "AND",
      "path": "1"
    },
    "1102": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1701
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1103": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1717
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFEAF968C"
    },
    "1108": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1717
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1109": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1110": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1111": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "ADD",
      "path": "1"
    },
    "1112": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1113": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1115": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1116": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1117": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1118": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "SUB",
      "path": "1"
    },
    "1119": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "ADD",
      "path": "1"
    },
    "1120": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1121": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1701
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1122": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1123": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1124": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1125": {
      "op": "DUP1"
    },
    "1126": {
      "op": "ISZERO"
    },
    "1127": {
      "op": "PUSH2",
      "value": "0x46F"
    },
    "1130": {
      "op": "JUMPI"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1133": {
      "op": "DUP1"
    },
    "1134": {
      "op": "REVERT"
    },
    "1135": {
      "op": "JUMPDEST"
    },
    "1136": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "POP",
      "path": "1"
    },
    "1137": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "GAS",
      "path": "1"
    },
    "1138": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1139": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1140": {
      "op": "DUP1"
    },
    "1141": {
      "op": "ISZERO"
    },
    "1142": {
      "op": "PUSH2",
      "value": "0x483"
    },
    "1145": {
      "op": "JUMPI"
    },
    "1146": {
      "op": "RETURNDATASIZE"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1149": {
      "op": "DUP1"
    },
    "1150": {
      "op": "RETURNDATACOPY"
    },
    "1151": {
      "op": "RETURNDATASIZE"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1154": {
      "op": "REVERT"
    },
    "1155": {
      "op": "JUMPDEST"
    },
    "1156": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "POP",
      "path": "1"
    },
    "1157": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "POP",
      "path": "1"
    },
    "1158": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "POP",
      "path": "1"
    },
    "1159": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "POP",
      "path": "1"
    },
    "1160": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1162": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1163": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1166": {
      "op": "DUP2"
    },
    "1167": {
      "op": "LT"
    },
    "1168": {
      "op": "ISZERO"
    },
    "1169": {
      "op": "PUSH2",
      "value": "0x499"
    },
    "1172": {
      "op": "JUMPI"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1175": {
      "op": "DUP1"
    },
    "1176": {
      "op": "REVERT"
    },
    "1177": {
      "op": "JUMPDEST"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1181": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "ADD",
      "path": "1"
    },
    "1182": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1183": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1903,
        1912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1185": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1903,
        1912
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1186": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1187": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1692,
        1719
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1188": {
      "op": "POP"
    },
    "1189": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1770,
        1776
      ],
      "op": "PUSH5",
      "path": "1",
      "value": "0x2540BE400"
    },
    "1195": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1196": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1753,
        1776
      ],
      "op": "MUL",
      "path": "1"
    },
    "1197": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1198": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1729,
        1750
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1200": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1729,
        1750
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1201": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1202": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1203": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1915,
        1921
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "1212": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1903,
        1921
      ],
      "op": "MUL",
      "path": "1"
    },
    "1213": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1214": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1902,
        1938
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C3"
    },
    "1217": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1902,
        1938
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1218": {
      "dev": "Division by zero",
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1902,
        1938
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1219": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1902,
        1938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1220": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1902,
        1938
      ],
      "op": "DIV",
      "path": "1"
    },
    "1221": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1902,
        1938
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1222": {
      "op": "POP"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "op": "POP"
    },
    "1226": {
      "fn": "Sukuk.getEntranceFee",
      "offset": [
        1601,
        1973
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1227": {
      "fn": "Sukuk.getEntranceFee",
      "jump": "o",
      "offset": [
        1601,
        1973
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1228": {
      "fn": "Sukuk.getBalance",
      "offset": [
        4462,
        4577
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1229": {
      "fn": "Sukuk.getBalance",
      "offset": [
        4540,
        4561
      ],
      "op": "SELFBALANCE",
      "path": "1",
      "statement": 0
    },
    "1230": {
      "fn": "Sukuk.getBalance",
      "offset": [
        4462,
        4577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1231": {
      "fn": "Sukuk.getBalance",
      "jump": "o",
      "offset": [
        4462,
        4577
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1232": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1233": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1526,
        1548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1235": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1572,
        1588
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 1,
      "value": "0x4DA"
    },
    "1238": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1572,
        1586
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x42B"
    },
    "1241": {
      "fn": "Sukuk.get_expetected_price",
      "jump": "i",
      "offset": [
        1572,
        1588
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1242": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1572,
        1588
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1243": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1560,
        1569
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1245": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1560,
        1588
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1246": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1247": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        1456,
        1595
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1248": {
      "op": "POP"
    },
    "1249": {
      "fn": "Sukuk.get_expetected_price",
      "jump": "o",
      "offset": [
        1456,
        1595
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1250": {
      "offset": [
        611,
        640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1251": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1253": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "offset": [
        611,
        640
      ],
      "op": "AND",
      "path": "1"
    },
    "1263": {
      "fn": "Sukuk.get_expetected_price",
      "offset": [
        611,
        640
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1264": {
      "fn": "Sukuk.get_expetected_price",
      "jump": "o",
      "offset": [
        611,
        640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1265": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3940,
        4297
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1266": {
      "offset": [
        3717,
        3723
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1268": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3717,
        3723
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "op": "SUB"
    },
    "1277": {
      "offset": [
        3717,
        3723
      ],
      "op": "AND",
      "path": "1"
    },
    "1278": {
      "offset": [
        3703,
        3713
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1279": {
      "offset": [
        3703,
        3723
      ],
      "op": "EQ",
      "path": "1"
    },
    "1280": {
      "offset": [
        3695,
        3724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "1283": {
      "offset": [
        3695,
        3724
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1284": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3695,
        3724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1286": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3695,
        3724
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1287": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3695,
        3724
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1288": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3695,
        3724
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1289": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x40"
    },
    "1291": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1292": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4005
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1293": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4005
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1294": {
      "fn": "Sukuk.withdraw",
      "offset": [
        4015,
        4036
      ],
      "op": "SELFBALANCE",
      "path": "1"
    },
    "1295": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1296": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1297": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "1300": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "MUL",
      "path": "1"
    },
    "1301": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1302": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1304": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1305": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1306": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1307": {
      "fn": "Sukuk.withdraw",
      "offset": [
        4015,
        4036
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1308": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4005
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1309": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1310": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "CALL",
      "path": "1"
    },
    "1311": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1312": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "POP",
      "path": "1"
    },
    "1313": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "POP",
      "path": "1"
    },
    "1314": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "POP",
      "path": "1"
    },
    "1315": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "POP",
      "path": "1"
    },
    "1316": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1317": {
      "op": "DUP1"
    },
    "1318": {
      "op": "ISZERO"
    },
    "1319": {
      "op": "PUSH2",
      "value": "0x534"
    },
    "1322": {
      "op": "JUMPI"
    },
    "1323": {
      "op": "RETURNDATASIZE"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1326": {
      "op": "DUP1"
    },
    "1327": {
      "op": "RETURNDATACOPY"
    },
    "1328": {
      "op": "RETURNDATASIZE"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1331": {
      "op": "REVERT"
    },
    "1332": {
      "op": "JUMPDEST"
    },
    "1333": {
      "fn": "Sukuk.withdraw",
      "offset": [
        3995,
        4037
      ],
      "op": "POP",
      "path": "1"
    },
    "1334": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        3940,
        4297
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1335": {
      "offset": [
        373,
        429
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1336": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1338": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1340": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1341": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1342": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1343": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1344": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1345": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1346": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1348": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1349": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1350": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1351": {
      "fn": "Sukuk.withdraw",
      "offset": [
        373,
        429
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1352": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        373,
        429
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1353": {
      "offset": [
        990,
        1020
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1354": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1356": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1357": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1359": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "AND",
      "path": "1"
    },
    "1360": {
      "fn": "Sukuk.withdraw",
      "offset": [
        990,
        1020
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1361": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        990,
        1020
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1362": {
      "offset": [
        500,
        534
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1363": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1365": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1366": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1367": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1368": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1369": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "LT",
      "path": "1"
    },
    "1370": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x55F"
    },
    "1373": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1374": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1375": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1376": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1378": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1379": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1380": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1381": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1383": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1384": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1385": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1386": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "ADD",
      "path": "1"
    },
    "1387": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "SUB"
    },
    "1396": {
      "offset": [
        500,
        534
      ],
      "op": "AND",
      "path": "1"
    },
    "1397": {
      "fn": "Sukuk.withdraw",
      "offset": [
        500,
        534
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1398": {
      "op": "POP"
    },
    "1399": {
      "offset": [
        500,
        534
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1400": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        500,
        534
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1401": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1982,
        2197
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1402": {
      "offset": [
        3634,
        3639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1404": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        3634,
        3639
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "SUB"
    },
    "1413": {
      "offset": [
        3634,
        3639
      ],
      "op": "AND",
      "path": "1"
    },
    "1414": {
      "offset": [
        3620,
        3630
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1415": {
      "offset": [
        3620,
        3639
      ],
      "op": "EQ",
      "path": "1"
    },
    "1416": {
      "offset": [
        3612,
        3640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x590"
    },
    "1419": {
      "offset": [
        3612,
        3640
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1420": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        3612,
        3640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1422": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        3612,
        3640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1423": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        3612,
        3640
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1424": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        3612,
        3640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1425": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2075,
        2094
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x3"
    },
    "1427": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2071
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1429": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2071
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1430": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2071
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1432": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2071
      ],
      "op": "AND",
      "path": "1"
    },
    "1433": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2094
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1435": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2094
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1436": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2094
      ],
      "op": "GT",
      "path": "1"
    },
    "1437": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2094
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1438": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2094
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A3"
    },
    "1441": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2094
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1442": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2094
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1443": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2094
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1444": {
      "branch": 19,
      "fn": "Sukuk.startSukuk",
      "offset": [
        2060,
        2094
      ],
      "op": "EQ",
      "path": "1"
    },
    "1445": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F0"
    },
    "1448": {
      "branch": 19,
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1449": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1451": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1452": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1459": {
      "op": "SHL"
    },
    "1460": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1461": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1462": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1464": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1466": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1467": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "ADD",
      "path": "1"
    },
    "1468": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1469": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x18"
    },
    "1471": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1473": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1474": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "ADD",
      "path": "1"
    },
    "1475": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1476": {
      "op": "PUSH24",
      "value": "0x10D85B89DD081A5CDCDD59481B995DC81CDD5ADCC81E595D"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1503": {
      "op": "SHL"
    },
    "1504": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1506": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1507": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "ADD",
      "path": "1"
    },
    "1508": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1509": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1510": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1511": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1512": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1513": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1514": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "SUB",
      "path": "1"
    },
    "1515": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1517": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "ADD",
      "path": "1"
    },
    "1518": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1519": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1520": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2039,
        2144
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1521": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2170
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x8"
    },
    "1523": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2189
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1524": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2189
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1525": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2173,
        2189
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1527": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2173,
        2189
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1528": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2170
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1531": {
      "op": "NOT"
    },
    "1532": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2189
      ],
      "op": "AND",
      "path": "1"
    },
    "1533": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2173,
        2189
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1534": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2173,
        2189
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1535": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2189
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1536": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2189
      ],
      "op": "MUL",
      "path": "1"
    },
    "1537": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2189
      ],
      "op": "OR",
      "path": "1"
    },
    "1538": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2189
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1539": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2189
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1540": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2159,
        2189
      ],
      "op": "POP",
      "path": "1"
    },
    "1541": {
      "fn": "Sukuk.startSukuk",
      "jump": "o",
      "offset": [
        1982,
        2197
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1542": {
      "fn": "Sukuk.get",
      "offset": [
        1028,
        1110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1543": {
      "fn": "Sukuk.get",
      "offset": [
        1092,
        1103
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x8"
    },
    "1545": {
      "fn": "Sukuk.get",
      "offset": [
        1092,
        1103
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1546": {
      "fn": "Sukuk.get",
      "offset": [
        1092,
        1103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1548": {
      "fn": "Sukuk.get",
      "offset": [
        1092,
        1103
      ],
      "op": "AND",
      "path": "1"
    },
    "1549": {
      "fn": "Sukuk.get",
      "offset": [
        1028,
        1110
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1550": {
      "fn": "Sukuk.get",
      "jump": "o",
      "offset": [
        1028,
        1110
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1551": {
      "offset": [
        567,
        605
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1552": {
      "fn": "Sukuk.get",
      "offset": [
        567,
        605
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1554": {
      "fn": "Sukuk.get",
      "offset": [
        567,
        605
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "op": "SUB"
    },
    "1563": {
      "offset": [
        567,
        605
      ],
      "op": "AND",
      "path": "1"
    },
    "1564": {
      "fn": "Sukuk.get",
      "offset": [
        567,
        605
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1565": {
      "fn": "Sukuk.get",
      "jump": "o",
      "offset": [
        567,
        605
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1566": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2814,
        3456
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1567": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3173,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1569": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3194,
        3232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x629"
    },
    "1572": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3215,
        3231
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1573": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3194,
        3214
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D0"
    },
    "1576": {
      "fn": "Sukuk.purchase_suk",
      "jump": "i",
      "offset": [
        3194,
        3232
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1577": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3194,
        3232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1578": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3173,
        3232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1579": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3173,
        3232
      ],
      "op": "POP",
      "path": "1"
    },
    "1580": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3280,
        3289
      ],
      "op": "CALLVALUE",
      "path": "1",
      "statement": 6
    },
    "1581": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3263,
        3276
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1582": {
      "branch": 20,
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3263,
        3289
      ],
      "op": "EQ",
      "path": "1"
    },
    "1583": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x67F"
    },
    "1586": {
      "branch": 20,
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1587": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1589": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1590": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1591": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1597": {
      "op": "SHL"
    },
    "1598": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1599": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1600": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1602": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1604": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1605": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "ADD",
      "path": "1"
    },
    "1606": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1607": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "1609": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1611": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1612": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "ADD",
      "path": "1"
    },
    "1613": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1614": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x53656E642074686520636F727265637420616D6F756E74206F66206574680000"
    },
    "1647": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1649": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1650": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "ADD",
      "path": "1"
    },
    "1651": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1652": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1653": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1654": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1655": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1656": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1657": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "SUB",
      "path": "1"
    },
    "1658": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1660": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "ADD",
      "path": "1"
    },
    "1661": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1662": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1663": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3242,
        3345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1664": {
      "op": "POP"
    },
    "1665": {
      "op": "POP"
    },
    "1666": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3380,
        3390
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 7
    },
    "1667": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1669": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1670": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1671": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1672": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1674": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1675": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1676": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1677": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1679": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1680": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3391
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1681": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3404
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1682": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3404
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1683": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3395,
        3404
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1684": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3404
      ],
      "op": "ADD",
      "path": "1"
    },
    "1685": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1686": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3358,
        3404
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1687": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3423
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x2"
    },
    "1689": {
      "op": "DUP1"
    },
    "1690": {
      "op": "SLOAD"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "DUP2"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "op": "DUP3"
    },
    "1696": {
      "op": "SSTORE"
    },
    "1697": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1698": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1699": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "1732": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "ADD",
      "path": "1"
    },
    "1733": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1734": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "SUB"
    },
    "1743": {
      "op": "NOT"
    },
    "1744": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "AND",
      "path": "1"
    },
    "1745": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1746": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1747": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "OR",
      "path": "1"
    },
    "1748": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1749": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        3414,
        3449
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1750": {
      "fn": "Sukuk.purchase_suk",
      "jump": "o",
      "offset": [
        2814,
        3456
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1751": {
      "offset": [
        435,
        494
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1752": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1754": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1756": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1757": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1759": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1760": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1761": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1762": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1764": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1765": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1766": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1767": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        435,
        494
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1768": {
      "fn": "Sukuk.purchase_suk",
      "jump": "o",
      "offset": [
        435,
        494
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1769": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3844,
        3934
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1770": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3921,
        3927
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x5"
    },
    "1772": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3921,
        3927
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1779": {
      "op": "SHL"
    },
    "1780": {
      "op": "SUB"
    },
    "1781": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3921,
        3927
      ],
      "op": "AND",
      "path": "1"
    },
    "1782": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        3844,
        3934
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1783": {
      "fn": "Sukuk.getIjaaraAddress",
      "jump": "o",
      "offset": [
        3844,
        3934
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1784": {
      "offset": [
        647,
        668
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1785": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        647,
        668
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1787": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        647,
        668
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1788": {
      "fn": "Sukuk.getIjaaraAddress",
      "offset": [
        647,
        668
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1789": {
      "fn": "Sukuk.getIjaaraAddress",
      "jump": "o",
      "offset": [
        647,
        668
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1790": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2419,
        2600
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1791": {
      "offset": [
        3634,
        3639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1793": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        3634,
        3639
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1800": {
      "op": "SHL"
    },
    "1801": {
      "op": "SUB"
    },
    "1802": {
      "offset": [
        3634,
        3639
      ],
      "op": "AND",
      "path": "1"
    },
    "1803": {
      "offset": [
        3620,
        3630
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1804": {
      "offset": [
        3620,
        3639
      ],
      "op": "EQ",
      "path": "1"
    },
    "1805": {
      "offset": [
        3612,
        3640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x715"
    },
    "1808": {
      "offset": [
        3612,
        3640
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1809": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        3612,
        3640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1811": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        3612,
        3640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1812": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        3612,
        3640
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1813": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        3612,
        3640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1814": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2501,
        2518
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x2"
    },
    "1816": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2497
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1818": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2497
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1819": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2497
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1821": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2497
      ],
      "op": "AND",
      "path": "1"
    },
    "1822": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2518
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1824": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2518
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1825": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2518
      ],
      "op": "GT",
      "path": "1"
    },
    "1826": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2518
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1827": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2518
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x728"
    },
    "1830": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2518
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1831": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2518
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1832": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2518
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1833": {
      "branch": 21,
      "fn": "Sukuk.EndIssue",
      "offset": [
        2486,
        2518
      ],
      "op": "EQ",
      "path": "1"
    },
    "1834": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x763"
    },
    "1837": {
      "branch": 21,
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1838": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1840": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1841": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1842": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1848": {
      "op": "SHL"
    },
    "1849": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1850": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1851": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1853": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1855": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1856": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1857": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "ADD",
      "path": "1"
    },
    "1858": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1859": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1860": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1861": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1862": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1864": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1865": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "ADD",
      "path": "1"
    },
    "1866": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1867": {
      "op": "PUSH4",
      "value": "0x15195CDD"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1874": {
      "op": "SHL"
    },
    "1875": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1877": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1878": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "ADD",
      "path": "1"
    },
    "1879": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1880": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1881": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1882": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1883": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1884": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1885": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "SUB",
      "path": "1"
    },
    "1886": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1888": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "ADD",
      "path": "1"
    },
    "1889": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1890": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1891": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2465,
        2548
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1892": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2559,
        2570
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x8"
    },
    "1894": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2559,
        2593
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1895": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2559,
        2593
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1896": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2573,
        2593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1898": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2573,
        2593
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1899": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2559,
        2570
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1902": {
      "op": "NOT"
    },
    "1903": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2559,
        2593
      ],
      "op": "AND",
      "path": "1"
    },
    "1904": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2559,
        2593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1906": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2573,
        2593
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1907": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2559,
        2593
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5FF"
    },
    "1910": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2559,
        2593
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1911": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2606,
        2798
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1912": {
      "offset": [
        3634,
        3639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1914": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        3634,
        3639
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1921": {
      "op": "SHL"
    },
    "1922": {
      "op": "SUB"
    },
    "1923": {
      "offset": [
        3634,
        3639
      ],
      "op": "AND",
      "path": "1"
    },
    "1924": {
      "offset": [
        3620,
        3630
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1925": {
      "offset": [
        3620,
        3639
      ],
      "op": "EQ",
      "path": "1"
    },
    "1926": {
      "offset": [
        3612,
        3640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x78E"
    },
    "1929": {
      "offset": [
        3612,
        3640
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1930": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        3612,
        3640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1932": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        3612,
        3640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1933": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        3612,
        3640
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1934": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        3612,
        3640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1935": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2691,
        2711
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 12,
      "value": "0x0"
    },
    "1937": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2687
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1939": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2687
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1940": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2687
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1942": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2687
      ],
      "op": "AND",
      "path": "1"
    },
    "1943": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2711
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1945": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2711
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1946": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2711
      ],
      "op": "GT",
      "path": "1"
    },
    "1947": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2711
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1948": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A1"
    },
    "1951": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1952": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2711
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1953": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1954": {
      "branch": 22,
      "fn": "Sukuk.startRedeem",
      "offset": [
        2676,
        2711
      ],
      "op": "EQ",
      "path": "1"
    },
    "1955": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7DC"
    },
    "1958": {
      "branch": 22,
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1959": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1961": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1962": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1963": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1971": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1972": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1974": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1976": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1977": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1978": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "ADD",
      "path": "1"
    },
    "1979": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1980": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1981": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1982": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1983": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1985": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1986": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "ADD",
      "path": "1"
    },
    "1987": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1988": {
      "op": "PUSH4",
      "value": "0x15195CDD"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1995": {
      "op": "SHL"
    },
    "1996": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1998": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1999": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "ADD",
      "path": "1"
    },
    "2000": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2001": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2002": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2003": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2004": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2005": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2006": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "SUB",
      "path": "1"
    },
    "2007": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2009": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "ADD",
      "path": "1"
    },
    "2010": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2011": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2012": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2655,
        2741
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2013": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2752,
        2763
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x8"
    },
    "2015": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2752,
        2791
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2016": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2752,
        2791
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2017": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2766,
        2791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2019": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2766,
        2791
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2020": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2752,
        2763
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2023": {
      "op": "NOT"
    },
    "2024": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2752,
        2791
      ],
      "op": "AND",
      "path": "1"
    },
    "2025": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2752,
        2791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2027": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2766,
        2791
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2028": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2752,
        2791
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5FF"
    },
    "2031": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2752,
        2791
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2032": {
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3750,
        3839
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2033": {
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3827,
        3832
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x3"
    },
    "2035": {
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3827,
        3832
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2042": {
      "op": "SHL"
    },
    "2043": {
      "op": "SUB"
    },
    "2044": {
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3827,
        3832
      ],
      "op": "AND",
      "path": "1"
    },
    "2045": {
      "fn": "Sukuk.getAdminAddress",
      "offset": [
        3750,
        3839
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2046": {
      "fn": "Sukuk.getAdminAddress",
      "jump": "o",
      "offset": [
        3750,
        3839
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2047": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3465,
        3569
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2048": {
      "offset": [
        3634,
        3639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2050": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3634,
        3639
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2057": {
      "op": "SHL"
    },
    "2058": {
      "op": "SUB"
    },
    "2059": {
      "offset": [
        3634,
        3639
      ],
      "op": "AND",
      "path": "1"
    },
    "2060": {
      "offset": [
        3620,
        3630
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2061": {
      "offset": [
        3620,
        3639
      ],
      "op": "EQ",
      "path": "1"
    },
    "2062": {
      "offset": [
        3612,
        3640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x816"
    },
    "2065": {
      "offset": [
        3612,
        3640
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2066": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3612,
        3640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2068": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3612,
        3640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2069": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3612,
        3640
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2070": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3612,
        3640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2071": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3543
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x5"
    },
    "2073": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2074": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "op": "NOT"
    },
    "2084": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "AND",
      "path": "1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2094": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2095": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2096": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "AND",
      "path": "1"
    },
    "2097": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2098": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2099": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2100": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "OR",
      "path": "1"
    },
    "2101": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2102": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        3537,
        3553
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2103": {
      "fn": "Sukuk.setIjaara",
      "jump": "o",
      "offset": [
        3465,
        3569
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2104": {
      "offset": [
        674,
        709
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2105": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "2107": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2108": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2109": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2110": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2111": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "LT",
      "path": "1"
    },
    "2112": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x845"
    },
    "2115": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2116": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "INVALID",
      "path": "1"
    },
    "2117": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2118": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2120": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2121": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2122": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2123": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2125": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2126": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2127": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2128": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2130": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2131": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2132": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "MUL",
      "path": "1"
    },
    "2133": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "ADD",
      "path": "1"
    },
    "2134": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2135": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2136": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2138": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2139": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "ADD",
      "path": "1"
    },
    "2140": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2141": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2143": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2144": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2145": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "ADD",
      "path": "1"
    },
    "2146": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2153": {
      "op": "SHL"
    },
    "2154": {
      "op": "SUB"
    },
    "2155": {
      "offset": [
        674,
        709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2156": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2157": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "AND",
      "path": "1"
    },
    "2158": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        674,
        709
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2159": {
      "op": "POP"
    },
    "2160": {
      "offset": [
        674,
        709
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2161": {
      "fn": "Sukuk.setIjaara",
      "jump": "o",
      "offset": [
        674,
        709
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2162": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2211,
        2413
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2163": {
      "offset": [
        3634,
        3639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2165": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        3634,
        3639
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2172": {
      "op": "SHL"
    },
    "2173": {
      "op": "SUB"
    },
    "2174": {
      "offset": [
        3634,
        3639
      ],
      "op": "AND",
      "path": "1"
    },
    "2175": {
      "offset": [
        3620,
        3630
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2176": {
      "offset": [
        3620,
        3639
      ],
      "op": "EQ",
      "path": "1"
    },
    "2177": {
      "offset": [
        3612,
        3640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x889"
    },
    "2180": {
      "offset": [
        3612,
        3640
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2181": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        3612,
        3640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2183": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        3612,
        3640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2184": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        3612,
        3640
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2185": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        3612,
        3640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2186": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2297,
        2313
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x1"
    },
    "2188": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2190": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2191": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2193": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2293
      ],
      "op": "AND",
      "path": "1"
    },
    "2194": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "2196": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2197": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2313
      ],
      "op": "GT",
      "path": "1"
    },
    "2198": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2313
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2199": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2313
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x89C"
    },
    "2202": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2313
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2203": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2313
      ],
      "op": "INVALID",
      "path": "1"
    },
    "2204": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2313
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2205": {
      "branch": 23,
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2282,
        2313
      ],
      "op": "EQ",
      "path": "1"
    },
    "2206": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E9"
    },
    "2209": {
      "branch": 23,
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2210": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2212": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2213": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2222": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2223": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2225": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2227": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2228": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "ADD",
      "path": "1"
    },
    "2229": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2230": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x18"
    },
    "2232": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2234": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2235": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "ADD",
      "path": "1"
    },
    "2236": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2237": {
      "op": "PUSH24",
      "value": "0x10D85B89DD081A5CDCDD59481B995DC81CDD5ADCC81E595D"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2267": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2268": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "ADD",
      "path": "1"
    },
    "2269": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2270": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2271": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2272": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2273": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2274": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2275": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "SUB",
      "path": "1"
    },
    "2276": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2278": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "ADD",
      "path": "1"
    },
    "2279": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2280": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2281": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2261,
        2363
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2282": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2374,
        2385
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x8"
    },
    "2284": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2374,
        2405
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2285": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2374,
        2405
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2286": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2388,
        2405
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2288": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2388,
        2405
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2289": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2374,
        2385
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2292": {
      "op": "NOT"
    },
    "2293": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2374,
        2405
      ],
      "op": "AND",
      "path": "1"
    },
    "2294": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2374,
        2405
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2296": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2388,
        2405
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2297": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2374,
        2405
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5FF"
    },
    "2300": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2374,
        2405
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2301": {
      "fn": "Sukuk.deposit",
      "offset": [
        4345,
        4457
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2302": {
      "offset": [
        3717,
        3723
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2304": {
      "fn": "Sukuk.deposit",
      "offset": [
        3717,
        3723
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2311": {
      "op": "SHL"
    },
    "2312": {
      "op": "SUB"
    },
    "2313": {
      "offset": [
        3717,
        3723
      ],
      "op": "AND",
      "path": "1"
    },
    "2314": {
      "offset": [
        3703,
        3713
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2315": {
      "offset": [
        3703,
        3723
      ],
      "op": "EQ",
      "path": "1"
    },
    "2316": {
      "offset": [
        3695,
        3724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x914"
    },
    "2319": {
      "offset": [
        3695,
        3724
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2320": {
      "fn": "Sukuk.deposit",
      "offset": [
        3695,
        3724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2322": {
      "fn": "Sukuk.deposit",
      "offset": [
        3695,
        3724
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2323": {
      "fn": "Sukuk.deposit",
      "offset": [
        3695,
        3724
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2324": {
      "fn": "Sukuk.deposit",
      "offset": [
        3695,
        3724
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2325": {
      "fn": "Sukuk.deposit",
      "offset": [
        4424,
        4434
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 18
    },
    "2326": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2328": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4435
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2329": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4435
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2330": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4435
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2331": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4423
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2333": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2335": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4435
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2336": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2338": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4435
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2339": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4435
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2340": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4449
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2341": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4449
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2342": {
      "fn": "Sukuk.deposit",
      "offset": [
        4440,
        4449
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2343": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4449
      ],
      "op": "ADD",
      "path": "1"
    },
    "2344": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2345": {
      "fn": "Sukuk.deposit",
      "offset": [
        4399,
        4449
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2346": {
      "fn": "Sukuk.deposit",
      "jump": "o",
      "offset": [
        4345,
        4457
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2347": {
      "offset": [
        540,
        561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2348": {
      "fn": "Sukuk.deposit",
      "offset": [
        540,
        561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2350": {
      "fn": "Sukuk.deposit",
      "offset": [
        540,
        561
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2357": {
      "op": "SHL"
    },
    "2358": {
      "op": "SUB"
    },
    "2359": {
      "offset": [
        540,
        561
      ],
      "op": "AND",
      "path": "1"
    },
    "2360": {
      "fn": "Sukuk.deposit",
      "offset": [
        540,
        561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2361": {
      "fn": "Sukuk.deposit",
      "jump": "o",
      "offset": [
        540,
        561
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "077bd07c14ef865eeb93fa5a2165fc63f4f0c8bb",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.0;\n\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\n\n\n// This one for now to track what each investor/ I will look at the implementation later\n\n\ncontract Sukuk{\n\n    struct suk_investor{\n        address investoraddress;\n        uint256 number_of_sukuk;\n        uint256 value;\n\n    }\n\n\n\n\n    mapping(address => uint256) public addressToAmountFunded;\n    mapping(address => uint256) public addressToAmountDeposited;\n    address payable[] public investors;\n    address public  admin;\n    AggregatorV3Interface public priceFeed;\n    address payable public Ijaara ;\n    uint public suk_price;\n    suk_investor[] public suk_investors;\n\n\n\n\n    //Sukuk State\n    enum SUKUK_STATE{\n        COOLDOWN,   //This state will be when the contract is in effect however it doesn't have any tasks to excute\n        OPEN,\n        ISSUE,\n        CLOSEED,\n        \n        REDEEM_PERIOD,\n        TERM_1,\n        TERM_2\n    }\n    SUKUK_STATE public sukuk_state;\n\n\n    function get() public view returns(SUKUK_STATE){\n        return sukuk_state;\n    }\n\n\n\n\n\n\n\n\n\n\n\n    //added an argument to constructor for testing\n    constructor(\n        address _priceFeed\n      ) \n    public {\n        priceFeed = AggregatorV3Interface(_priceFeed);\n        // Admin will be the contract sender for now\n        admin = msg.sender;\n        sukuk_state = SUKUK_STATE.CLOSEED;\n        suk_price = 100;\n\n    }\n\n\n    function get_expetected_price(uint256 _numberOfSukuk) public returns (uint256 exptectedPrice) {\n        suk_price = getEntranceFee();\n    }\n\n    function getEntranceFee() public view returns (uint256) {\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 adjustedPrice = uint256(price) * 10**10; // 18 decimals\n        // $50, $2,000 / ETH\n        // 50/2,000\n        // 50 * 100000 / 2000\n        uint256 costToEnter = (suk_price * 10**18) / adjustedPrice;\n        return costToEnter;\n    }\n\n\n\n\n    function     startSukuk( ) public onlyAdmin{\n            require(\n            sukuk_state == SUKUK_STATE.CLOSEED,\n            \"Can't issue new suks yet\"\n        );\n\n\n\n\n\n        sukuk_state = SUKUK_STATE.OPEN;\n\n    }\n    \n\n\n\n\n    function  IssueSukuk( ) public onlyAdmin{\n        require(\n            sukuk_state == SUKUK_STATE.OPEN,\n            \"Can't issue new suks yet\"\n        );\n\n        sukuk_state = SUKUK_STATE.ISSUE;\n\n    }\n\n    function EndIssue() public onlyAdmin{\n        require(\n            sukuk_state == SUKUK_STATE.ISSUE,\n            \"Test\"\n        );\n\n        sukuk_state = SUKUK_STATE.COOLDOWN;\n    }\n\n    function startRedeem() public onlyAdmin{\n        require(\n            sukuk_state == SUKUK_STATE.COOLDOWN,\n            \"Test\"\n        );\n\n        sukuk_state = SUKUK_STATE.REDEEM_PERIOD;\n    }\n\n\n\n\n\n    \n\n    function purchase_suk(uint256 _number_of_sukuk) public payable{\n\n\n\n        // Right now it only tracks the amount and address only.\n        // Later I will need to take the number of sukuk as a factor and change how it works\n        // It should take the number of sukuk and checks if the sent amount is correct or not \n        // Not lower or higher\n        uint expectedPrice = get_expetected_price(_number_of_sukuk);\n        require(\n            expectedPrice == msg.value,\n            \"Send the correct amount of eth\"\n        );\n\n\n\n        addressToAmountFunded[msg.sender] += msg.value;\n        investors.push(payable(msg.sender));\n    }\n\n\n\n\n    function setIjaara(address payable  _Ijaara ) public onlyAdmin{\n        Ijaara = _Ijaara;\n        \n    }\n\n\n\n\n\n\n\n\n    modifier onlyAdmin(){\n        require(msg.sender == admin);\n        _;\n    }\n\n    modifier onlyIjaara(){\n        require(msg.sender == Ijaara);\n        _;\n    }\n\n\n\n    function getAdminAddress( ) view public returns (address ) {\n\n        return admin;\n    }\n    function getIjaaraAddress( ) view public returns (address ) {\n        return Ijaara;\n    }\n\n    function withdraw() public payable onlyIjaara{\n        msg.sender.transfer(address(this).balance);\n\n       /* for (\n            uint256 funderIndex = 0;\n            funderIndex < investors.length;\n            funderIndex++\n        ) {\n            address funder = investors[funderIndex];\n            addressToAmountFunded[funder] = 0;\n        }\n    */\n    }\n\n    //function redeem() public payable{}\n\n    function deposit() public payable onlyIjaara{\n        addressToAmountDeposited[msg.sender] +=  msg.value;\n\n    }\n    function getBalance( ) view public returns (uint256 balance) {\n        return address(this).balance;\n        \n    }\n\n\n}",
  "sourceMap": "227:4354:1:-:0;;;1177:272;8:9:-1;5:2;;;30:1;27;20:12;5:2;1177:272:1;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1177:272:1;1247:9;:45;;-1:-1:-1;;;;;1247:45:1;;-1:-1:-1;;;;;;1247:45:1;;;;;;;1355:5;:18;;;;;1363:10;1355:18;;;1383:11;:33;;-1:-1:-1;;1383:33:1;1247:45;1355:5;1383:33;;;;-1:-1:-1;;1438:3:1;1426:9;:15;227:4354;;;;;;",
  "sourcePath": "contracts/Purchese.sol",
  "type": "contract"
}