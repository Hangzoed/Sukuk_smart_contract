{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EndIssue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Ijaara",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IssueSukuk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get",
      "outputs": [
        {
          "internalType": "enum Sukuk.SUKUK_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_number_of_sukuk",
          "type": "uint256"
        }
      ],
      "name": "purchase_suk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_Ijaara",
          "type": "address"
        }
      ],
      "name": "setIjaara",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startSukuk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sukuk_state",
      "outputs": [
        {
          "internalType": "enum Sukuk.SUKUK_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/ASUS/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
    "1": "contracts/Purchese.sol"
  },
  "ast": {
    "absolutePath": "contracts/Purchese.sol",
    "exportedSymbols": {
      "Sukuk": [
        233
      ]
    },
    "id": 234,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "absolutePath": "C:/Users/ASUS/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 234,
        "sourceUnit": 280,
        "src": "57:76:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 233,
        "linearizedBaseContracts": [
          233
        ],
        "name": "Sukuk",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3e47d6f3",
            "id": 6,
            "name": "addressToAmountFunded",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 233,
            "src": "247:56:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "255:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "247:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 4,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3feb5f2b",
            "id": 9,
            "name": "investors",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 233,
            "src": "309:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "309:15:1",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 8,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "309:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 11,
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 233,
            "src": "349:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "349:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "741bef1a",
            "id": 13,
            "name": "priceFeed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 233,
            "src": "376:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$279",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 12,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 279,
              "src": "376:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$279",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "340d02fe",
            "id": 15,
            "name": "Ijaara",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 233,
            "src": "420:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "420:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Sukuk.SUKUK_STATE",
            "id": 23,
            "members": [
              {
                "id": 16,
                "name": "COOLDOWN",
                "nodeType": "EnumValue",
                "src": "501:8:1"
              },
              {
                "id": 17,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "615:4:1"
              },
              {
                "id": 18,
                "name": "ISSUE",
                "nodeType": "EnumValue",
                "src": "629:5:1"
              },
              {
                "id": 19,
                "name": "CLOSEED",
                "nodeType": "EnumValue",
                "src": "644:7:1"
              },
              {
                "id": 20,
                "name": "REDEEM_PERIOD",
                "nodeType": "EnumValue",
                "src": "670:13:1"
              },
              {
                "id": 21,
                "name": "TERM_1",
                "nodeType": "EnumValue",
                "src": "693:6:1"
              },
              {
                "id": 22,
                "name": "TERM_2",
                "nodeType": "EnumValue",
                "src": "709:6:1"
              }
            ],
            "name": "SUKUK_STATE",
            "nodeType": "EnumDefinition",
            "src": "475:246:1"
          },
          {
            "constant": false,
            "functionSelector": "3fe8804c",
            "id": 25,
            "name": "sukuk_state",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 233,
            "src": "726:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
              "typeString": "enum Sukuk.SUKUK_STATE"
            },
            "typeName": {
              "contractScope": null,
              "id": 24,
              "name": "SUKUK_STATE",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23,
              "src": "726:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                "typeString": "enum Sukuk.SUKUK_STATE"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "811:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "name": "sukuk_state",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "828:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "functionReturnParameters": 29,
                  "id": 31,
                  "nodeType": "Return",
                  "src": "821:18:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6d4ce63c",
            "id": 33,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:2:1"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 33,
                  "src": "799:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                    "typeString": "enum Sukuk.SUKUK_STATE"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 27,
                    "name": "SUKUK_STATE",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 23,
                    "src": "799:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "798:13:1"
            },
            "scope": 233,
            "src": "764:82:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "967:187:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "977:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$279",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 40,
                          "name": "_priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "1011:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 39,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "989:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$279_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "989:33:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$279",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "977:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$279",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "977:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 44,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1085:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "1093:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1093:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1085:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "sukuk_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1113:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "SUKUK_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1127:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$23_$",
                          "typeString": "type(enum Sukuk.SUKUK_STATE)"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSEED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1127:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "src": "1113:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "1113:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 55,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "_priceFeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 55,
                  "src": "928:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "918:36:1"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:0:1"
            },
            "scope": 233,
            "src": "907:247:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "1206:172:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                          "typeString": "enum Sukuk.SUKUK_STATE"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "sukuk_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1241:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "SUKUK_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1256:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$23_$",
                              "typeString": "type(enum Sukuk.SUKUK_STATE)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSEED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1256:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "src": "1241:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e2774206973737565206e65772073756b7320796574",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1289:26:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_093195bfbb4181c02475a26c76f54743a575d92d6e29bff005146da48d815657",
                          "typeString": "literal_string \"Can't issue new suks yet\""
                        },
                        "value": "Can't issue new suks yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_093195bfbb4181c02475a26c76f54743a575d92d6e29bff005146da48d815657",
                          "typeString": "literal_string \"Can't issue new suks yet\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        297,
                        298
                      ],
                      "referencedDeclaration": 298,
                      "src": "1220:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:105:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:105:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "sukuk_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1340:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "SUKUK_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1354:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$23_$",
                          "typeString": "type(enum Sukuk.SUKUK_STATE)"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1354:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "src": "1340:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:30:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "45bcad9a",
            "id": 74,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 58,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 57,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 178,
                  "src": "1197:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1197:9:1"
              }
            ],
            "name": "startSukuk",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:3:1"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1206:0:1"
            },
            "scope": 233,
            "src": "1163:215:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "1432:162:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                          "typeString": "enum Sukuk.SUKUK_STATE"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "sukuk_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1463:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "SUKUK_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1478:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$23_$",
                              "typeString": "type(enum Sukuk.SUKUK_STATE)"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1478:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "src": "1463:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e2774206973737565206e65772073756b7320796574",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1508:26:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_093195bfbb4181c02475a26c76f54743a575d92d6e29bff005146da48d815657",
                          "typeString": "literal_string \"Can't issue new suks yet\""
                        },
                        "value": "Can't issue new suks yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_093195bfbb4181c02475a26c76f54743a575d92d6e29bff005146da48d815657",
                          "typeString": "literal_string \"Can't issue new suks yet\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        297,
                        298
                      ],
                      "referencedDeclaration": 298,
                      "src": "1442:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1442:102:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1442:102:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "sukuk_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1555:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "SUKUK_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1569:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$23_$",
                          "typeString": "type(enum Sukuk.SUKUK_STATE)"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ISSUE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1569:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "src": "1555:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:31:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ce00d813",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 77,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 76,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 178,
                  "src": "1423:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1423:9:1"
              }
            ],
            "name": "IssueSukuk",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1412:3:1"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1432:0:1"
            },
            "scope": 233,
            "src": "1392:202:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1636:145:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                          "typeString": "enum Sukuk.SUKUK_STATE"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 99,
                          "name": "sukuk_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1667:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 100,
                            "name": "SUKUK_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1682:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$23_$",
                              "typeString": "type(enum Sukuk.SUKUK_STATE)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ISSUE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1682:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "src": "1667:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54657374",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1713:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                          "typeString": "literal_string \"Test\""
                        },
                        "value": "Test"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                          "typeString": "literal_string \"Test\""
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        297,
                        298
                      ],
                      "referencedDeclaration": 298,
                      "src": "1646:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1646:83:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:83:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "sukuk_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1740:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "SUKUK_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1754:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$23_$",
                          "typeString": "type(enum Sukuk.SUKUK_STATE)"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "COOLDOWN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1754:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "src": "1740:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:34:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8a2fee73",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 96,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 95,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 178,
                  "src": "1627:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1627:9:1"
              }
            ],
            "name": "EndIssue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1617:2:1"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1636:0:1"
            },
            "scope": 233,
            "src": "1600:181:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1826:153:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                          "typeString": "enum Sukuk.SUKUK_STATE"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "sukuk_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1857:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 119,
                            "name": "SUKUK_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1872:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$23_$",
                              "typeString": "type(enum Sukuk.SUKUK_STATE)"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "COOLDOWN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1872:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                            "typeString": "enum Sukuk.SUKUK_STATE"
                          }
                        },
                        "src": "1857:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54657374",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1906:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                          "typeString": "literal_string \"Test\""
                        },
                        "value": "Test"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                          "typeString": "literal_string \"Test\""
                        }
                      ],
                      "id": 117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        297,
                        298
                      ],
                      "referencedDeclaration": 298,
                      "src": "1836:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:86:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:86:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 125,
                      "name": "sukuk_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1933:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "SUKUK_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1947:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SUKUK_STATE_$23_$",
                          "typeString": "type(enum Sukuk.SUKUK_STATE)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "REDEEM_PERIOD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1947:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                        "typeString": "enum Sukuk.SUKUK_STATE"
                      }
                    },
                    "src": "1933:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SUKUK_STATE_$23",
                      "typeString": "enum Sukuk.SUKUK_STATE"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:39:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9e3578d7",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 115,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 114,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 178,
                  "src": "1817:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1817:9:1"
              }
            ],
            "name": "startRedeem",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1807:2:1"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1826:0:1"
            },
            "scope": 233,
            "src": "1787:192:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "2057:176:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "addressToAmountFunded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2135:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 139,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 137,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "2157:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2157:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2135:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "2172:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2172:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2135:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 149,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 294,
                              "src": "2214:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2214:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2206:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 147,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2206:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2206:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2191:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2191:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2191:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2191:35:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7ce2a070",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase_suk",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "name": "_number_of_sukuk",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 155,
                  "src": "2017:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2016:26:1"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2057:0:1"
            },
            "scope": 233,
            "src": "1995:238:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "2303:42:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "Ijaara",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2313:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 163,
                      "name": "_Ijaara",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "2322:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2313:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2313:16:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "bf859271",
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 159,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 178,
                  "src": "2294:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2294:9:1"
              }
            ],
            "name": "setIjaara",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "name": "_Ijaara",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "2261:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2260:26:1"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2303:0:1"
            },
            "scope": 233,
            "src": "2242:103:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2378:56:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 170,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "2396:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2396:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 172,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2410:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2396:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        297,
                        298
                      ],
                      "referencedDeclaration": 297,
                      "src": "2388:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:28:1"
                },
                {
                  "id": 176,
                  "nodeType": "PlaceholderStatement",
                  "src": "2426:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 178,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2376:2:1"
            },
            "src": "2358:76:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "2461:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 181,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "2479:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2479:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 183,
                          "name": "Ijaara",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2493:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2479:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        297,
                        298
                      ],
                      "referencedDeclaration": 297,
                      "src": "2471:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:29:1"
                },
                {
                  "id": 187,
                  "nodeType": "PlaceholderStatement",
                  "src": "2510:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 189,
            "name": "onlyIjaara",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2459:2:1"
            },
            "src": "2440:78:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "2568:304:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 201,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "2606:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Sukuk_$233",
                                "typeString": "contract Sukuk"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Sukuk_$233",
                                "typeString": "contract Sukuk"
                              }
                            ],
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2598:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 199,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2598:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2598:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2598:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 194,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "2578:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2578:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2578:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2578:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:42:1"
                },
                {
                  "body": {
                    "id": 229,
                    "nodeType": "Block",
                    "src": "2754:111:1",
                    "statements": [
                      {
                        "assignments": [
                          218
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 218,
                            "name": "funder",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 229,
                            "src": "2768:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 217,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2768:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 222,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 219,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "2785:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                              "typeString": "address payable[] storage ref"
                            }
                          },
                          "id": 221,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 220,
                            "name": "funderIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "2795:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2785:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2768:39:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 223,
                              "name": "addressToAmountFunded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "2821:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 225,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 224,
                              "name": "funder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "2843:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2821:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2853:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2821:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 228,
                        "nodeType": "ExpressionStatement",
                        "src": "2821:33:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 210,
                      "name": "funderIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "2686:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2700:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2700:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2686:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 230,
                  "initializationExpression": {
                    "assignments": [
                      207
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 207,
                        "name": "funderIndex",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 230,
                        "src": "2649:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2649:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 209,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2671:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2649:23:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2730:13:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 214,
                        "name": "funderIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "2730:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 216,
                    "nodeType": "ExpressionStatement",
                    "src": "2730:13:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2631:234:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 192,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 191,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 178,
                  "src": "2559:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2559:9:1"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2541:2:1"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2568:0:1"
            },
            "scope": 233,
            "src": "2524:348:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 234,
        "src": "227:2691:1"
      }
    ],
    "src": "33:2885:1"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516107403803806107408339818101604052602081101561003357600080fd5b5051600380546001600160a01b0383166001600160a01b031991821617825560028054909116331790556004805460ff60a01b1916600160a01b830217905550506106bd806100836000396000f3fe6080604052600436106100dd5760003560e01c8063741bef1a1161007f5780639e3578d7116100595780639e3578d714610236578063bf8592711461024b578063ce00d8131461027e578063f851a44014610293576100dd565b8063741bef1a146101ef5780637ce2a070146102045780638a2fee7314610221576100dd565b80633fe8804c116100bb5780633fe8804c146101625780633feb5f2b1461019b57806345bcad9a146101c55780636d4ce63c146101da576100dd565b8063340d02fe146100e25780633ccfd60b146101135780633e47d6f31461011d575b600080fd5b3480156100ee57600080fd5b506100f76102a8565b604080516001600160a01b039092168252519081900360200190f35b61011b6102b7565b005b34801561012957600080fd5b506101506004803603602081101561014057600080fd5b50356001600160a01b0316610344565b60408051918252519081900360200190f35b34801561016e57600080fd5b50610177610356565b6040518082600681111561018757fe5b60ff16815260200191505060405180910390f35b3480156101a757600080fd5b506100f7600480360360208110156101be57600080fd5b5035610366565b3480156101d157600080fd5b5061011b61038d565b3480156101e657600080fd5b50610177610428565b3480156101fb57600080fd5b506100f7610438565b61011b6004803603602081101561021a57600080fd5b5035610447565b34801561022d57600080fd5b5061011b61049d565b34801561024257600080fd5b5061011b610523565b34801561025757600080fd5b5061011b6004803603602081101561026e57600080fd5b50356001600160a01b03166105a7565b34801561028a57600080fd5b5061011b6105e0565b34801561029f57600080fd5b506100f7610678565b6004546001600160a01b031681565b6002546001600160a01b031633146102ce57600080fd5b60405133904780156108fc02916000818181858888f193505050501580156102fa573d6000803e3d6000fd5b5060005b6001548110156103415760006001828154811061031757fe5b60009182526020808320909101546001600160a01b031682528190526040812055506001016102fe565b50565b60006020819052908152604090205481565b600454600160a01b900460ff1681565b6001818154811061037357fe5b6000918252602090912001546001600160a01b0316905081565b6002546001600160a01b031633146103a457600080fd5b6003600454600160a01b900460ff1660068111156103be57fe5b1461040b576040805162461bcd60e51b815260206004820152601860248201527710d85b89dd081a5cdcdd59481b995dc81cdd5adcc81e595d60421b604482015290519081900360640190fd5b600480546001919060ff60a01b1916600160a01b835b0217905550565b600454600160a01b900460ff1690565b6003546001600160a01b031681565b5033600081815260208190526040812080543401905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b6002546001600160a01b031633146104b457600080fd5b6002600454600160a01b900460ff1660068111156104ce57fe5b14610509576040805162461bcd60e51b8152602060048083019190915260248201526315195cdd60e21b604482015290519081900360640190fd5b600480546000919060ff60a01b1916600160a01b83610421565b6002546001600160a01b0316331461053a57600080fd5b6000600454600160a01b900460ff16600681111561055457fe5b1461058f576040805162461bcd60e51b8152602060048083019190915260248201526315195cdd60e21b604482015290519081900360640190fd5b60048054819060ff60a01b1916600160a01b82610421565b6002546001600160a01b031633146105be57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031633146105f757600080fd5b6001600454600160a01b900460ff16600681111561061157fe5b1461065e576040805162461bcd60e51b815260206004820152601860248201527710d85b89dd081a5cdcdd59481b995dc81cdd5adcc81e595d60421b604482015290519081900360640190fd5b600480546002919060ff60a01b1916600160a01b83610421565b6002546001600160a01b03168156fea2646970667358221220e57f9fb3e792c9c2308c4006eb904bdc73f74e68f7d75d8a01b74e624cd9475964736f6c63430006000033",
  "bytecodeSha1": "428d6426d2953a6fbd11135508c60017629fd260",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.0+commit.26b70077"
  },
  "contractName": "Sukuk",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Sukuk.EndIssue": {
          "16": [
            1667,
            1699,
            true
          ]
        },
        "Sukuk.IssueSukuk": {
          "18": [
            1463,
            1494,
            true
          ]
        },
        "Sukuk.startRedeem": {
          "17": [
            1857,
            1892,
            true
          ]
        },
        "Sukuk.startSukuk": {
          "15": [
            1241,
            1275,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "Sukuk.EndIssue": {
          "8": [
            1646,
            1729
          ],
          "9": [
            1740,
            1774
          ]
        },
        "Sukuk.IssueSukuk": {
          "13": [
            1442,
            1544
          ],
          "14": [
            1555,
            1586
          ]
        },
        "Sukuk.get": {
          "5": [
            821,
            839
          ]
        },
        "Sukuk.purchase_suk": {
          "6": [
            2135,
            2181
          ],
          "7": [
            2191,
            2226
          ]
        },
        "Sukuk.setIjaara": {
          "12": [
            2313,
            2329
          ]
        },
        "Sukuk.startRedeem": {
          "10": [
            1836,
            1922
          ],
          "11": [
            1933,
            1972
          ]
        },
        "Sukuk.startSukuk": {
          "3": [
            1220,
            1325
          ],
          "4": [
            1340,
            1370
          ]
        },
        "Sukuk.withdraw": {
          "0": [
            2578,
            2620
          ],
          "1": [
            2821,
            2854
          ],
          "2": [
            2730,
            2743
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/AggregatorV3Interface"
  ],
  "deployedBytecode": "6080604052600436106100dd5760003560e01c8063741bef1a1161007f5780639e3578d7116100595780639e3578d714610236578063bf8592711461024b578063ce00d8131461027e578063f851a44014610293576100dd565b8063741bef1a146101ef5780637ce2a070146102045780638a2fee7314610221576100dd565b80633fe8804c116100bb5780633fe8804c146101625780633feb5f2b1461019b57806345bcad9a146101c55780636d4ce63c146101da576100dd565b8063340d02fe146100e25780633ccfd60b146101135780633e47d6f31461011d575b600080fd5b3480156100ee57600080fd5b506100f76102a8565b604080516001600160a01b039092168252519081900360200190f35b61011b6102b7565b005b34801561012957600080fd5b506101506004803603602081101561014057600080fd5b50356001600160a01b0316610344565b60408051918252519081900360200190f35b34801561016e57600080fd5b50610177610356565b6040518082600681111561018757fe5b60ff16815260200191505060405180910390f35b3480156101a757600080fd5b506100f7600480360360208110156101be57600080fd5b5035610366565b3480156101d157600080fd5b5061011b61038d565b3480156101e657600080fd5b50610177610428565b3480156101fb57600080fd5b506100f7610438565b61011b6004803603602081101561021a57600080fd5b5035610447565b34801561022d57600080fd5b5061011b61049d565b34801561024257600080fd5b5061011b610523565b34801561025757600080fd5b5061011b6004803603602081101561026e57600080fd5b50356001600160a01b03166105a7565b34801561028a57600080fd5b5061011b6105e0565b34801561029f57600080fd5b506100f7610678565b6004546001600160a01b031681565b6002546001600160a01b031633146102ce57600080fd5b60405133904780156108fc02916000818181858888f193505050501580156102fa573d6000803e3d6000fd5b5060005b6001548110156103415760006001828154811061031757fe5b60009182526020808320909101546001600160a01b031682528190526040812055506001016102fe565b50565b60006020819052908152604090205481565b600454600160a01b900460ff1681565b6001818154811061037357fe5b6000918252602090912001546001600160a01b0316905081565b6002546001600160a01b031633146103a457600080fd5b6003600454600160a01b900460ff1660068111156103be57fe5b1461040b576040805162461bcd60e51b815260206004820152601860248201527710d85b89dd081a5cdcdd59481b995dc81cdd5adcc81e595d60421b604482015290519081900360640190fd5b600480546001919060ff60a01b1916600160a01b835b0217905550565b600454600160a01b900460ff1690565b6003546001600160a01b031681565b5033600081815260208190526040812080543401905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b6002546001600160a01b031633146104b457600080fd5b6002600454600160a01b900460ff1660068111156104ce57fe5b14610509576040805162461bcd60e51b8152602060048083019190915260248201526315195cdd60e21b604482015290519081900360640190fd5b600480546000919060ff60a01b1916600160a01b83610421565b6002546001600160a01b0316331461053a57600080fd5b6000600454600160a01b900460ff16600681111561055457fe5b1461058f576040805162461bcd60e51b8152602060048083019190915260248201526315195cdd60e21b604482015290519081900360640190fd5b60048054819060ff60a01b1916600160a01b82610421565b6002546001600160a01b031633146105be57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031633146105f757600080fd5b6001600454600160a01b900460ff16600681111561061157fe5b1461065e576040805162461bcd60e51b815260206004820152601860248201527710d85b89dd081a5cdcdd59481b995dc81cdd5adcc81e595d60421b604482015290519081900360640190fd5b600480546002919060ff60a01b1916600160a01b83610421565b6002546001600160a01b03168156fea2646970667358221220e57f9fb3e792c9c2308c4006eb904bdc73f74e68f7d75d8a01b74e624cd9475964736f6c63430006000033",
  "deployedSourceMap": "227:2691:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;420:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;420:29:1;;;:::i;:::-;;;;-1:-1:-1;;;;;420:29:1;;;;;;;;;;;;;;2524:348;;;:::i;:::-;;247:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:56:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;247:56:1;-1:-1:-1;;;;;247:56:1;;:::i;:::-;;;;;;;;;;;;;;;;726:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:30:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;309:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;309:34:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;309:34:1;;:::i;1163:215::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1163:215:1;;;:::i;764:82::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;764:82:1;;;:::i;376:38::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;376:38:1;;;:::i;1995:238::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1995:238:1;;:::i;1600:181::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1600:181:1;;;:::i;1787:192::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1787:192:1;;;:::i;2242:103::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2242:103:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2242:103:1;-1:-1:-1;;;;;2242:103:1;;:::i;1392:202::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1392:202:1;;;:::i;349:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:21:1;;;:::i;420:29::-;;;-1:-1:-1;;;;;420:29:1;;:::o;2524:348::-;2410:5;;-1:-1:-1;;;;;2410:5:1;2396:10;:19;2388:28;;;;;;2578:42:::1;::::0;:10:::1;::::0;2598:21:::1;2578:42:::0;::::1;;;::::0;::::1;::::0;;;2598:21;2578:10;:42;::::1;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;2649:19:1::1;2631:234;2700:9;:16:::0;2686:30;::::1;2631:234;;;2768:14;2785:9;2795:11;2785:22;;;;;;;;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;2785:22:1::1;2821:29:::0;;;;;;;;:33;-1:-1:-1;2785:22:1;2730:13:::1;2631:234;;;;2524:348::o:0;247:56::-;;;;;;;;;;;;;;:::o;726:30::-;;;-1:-1:-1;;;726:30:1;;;;;:::o;309:34::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;309:34:1;;-1:-1:-1;309:34:1;:::o;1163:215::-;2410:5;;-1:-1:-1;;;;;2410:5:1;2396:10;:19;2388:28;;;;;;1256:19:::1;1241:11;::::0;-1:-1:-1;;;1241:11:1;::::1;;;:34;::::0;::::1;;;;;;;1220:105;;;::::0;;-1:-1:-1;;;1220:105:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1220:105:1;;;;;;;;;;;;;::::1;;1340:11;:30:::0;;1354:16:::1;::::0;1340:11;-1:-1:-1;;;;1340:30:1::1;-1:-1:-1::0;;;1354:16:1;1340:30:::1;;;;;;1163:215::o:0;764:82::-;828:11;;-1:-1:-1;;;828:11:1;;;;;764:82::o;376:38::-;;;-1:-1:-1;;;;;376:38:1;;:::o;1995:238::-;-1:-1:-1;2157:10:1;2135:21;:33;;;;;;;;;;:46;;2172:9;2135:46;;;-1:-1:-1;27:10;;23:18;;;45:23;;2191:35:1;;;;;;-1:-1:-1;;;;;;2191:35:1;;;;;;1995:238::o;1600:181::-;2410:5;;-1:-1:-1;;;;;2410:5:1;2396:10;:19;2388:28;;;;;;1682:17:::1;1667:11;::::0;-1:-1:-1;;;1667:11:1;::::1;;;:32;::::0;::::1;;;;;;;1646:83;;;::::0;;-1:-1:-1;;;1646:83:1;;::::1;;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;1646:83:1;;;;;;;;;;;;;::::1;;1740:11;:34:::0;;1754:20:::1;::::0;1740:11;-1:-1:-1;;;;1740:34:1::1;-1:-1:-1::0;;;1754:20:1;1740:34:::1;::::0;1787:192;2410:5;;-1:-1:-1;;;;;2410:5:1;2396:10;:19;2388:28;;;;;;1872:20:::1;1857:11;::::0;-1:-1:-1;;;1857:11:1;::::1;;;:35;::::0;::::1;;;;;;;1836:86;;;::::0;;-1:-1:-1;;;1836:86:1;;::::1;;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;1836:86:1;;;;;;;;;;;;;::::1;;1947:25;1933:39:::0;;1947:25;;-1:-1:-1;;;;1933:39:1::1;-1:-1:-1::0;;;1947:25:1;1933:39:::1;::::0;2242:103;2410:5;;-1:-1:-1;;;;;2410:5:1;2396:10;:19;2388:28;;;;;;2313:6:::1;:16:::0;;-1:-1:-1;;;;;;2313:16:1::1;-1:-1:-1::0;;;;;2313:16:1;;;::::1;::::0;;;::::1;::::0;;2242:103::o;1392:202::-;2410:5;;-1:-1:-1;;;;;2410:5:1;2396:10;:19;2388:28;;;;;;1478:16:::1;1463:11;::::0;-1:-1:-1;;;1463:11:1;::::1;;;:31;::::0;::::1;;;;;;;1442:102;;;::::0;;-1:-1:-1;;;1442:102:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1442:102:1;;;;;;;;;;;;;::::1;;1555:11;:31:::0;;1569:17:::1;::::0;1555:11;-1:-1:-1;;;;1555:31:1::1;-1:-1:-1::0;;;1569:17:1;1555:31:::1;::::0;349:21;;;-1:-1:-1;;;;;349:21:1;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    227,
    2918
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x741BEF1A GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x9E3578D7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9E3578D7 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xBF859271 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xCE00D813 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x293 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x7CE2A070 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x8A2FEE73 EQ PUSH2 0x221 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x3FE8804C GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x3FE8804C EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x3FEB5F2B EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x45BCAD9A EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0x1DA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x340D02FE EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x2B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x187 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x366 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH2 0x38D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x428 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x447 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH2 0x49D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH2 0x523 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH2 0x5E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x317 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x373 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3BE JUMPI INVALID JUMPDEST EQ PUSH2 0x40B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x10D85B89DD081A5CDCDD59481B995DC81CDD5ADCC81E595D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4CE JUMPI INVALID JUMPDEST EQ PUSH2 0x509 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x15195CDD PUSH1 0xE2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x554 JUMPI INVALID JUMPDEST EQ PUSH2 0x58F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x15195CDD PUSH1 0xE2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD DUP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP3 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x611 JUMPI INVALID JUMPDEST EQ PUSH2 0x65E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x10D85B89DD081A5CDCDD59481B995DC81CDD5ADCC81E595D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x2 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x9FB3E792C9C2308C4006EB904BDC73F74E68F7D75D8A01B74E624CD947596473 PUSH16 0x6C634300060000330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        227,
        2918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD"
    },
    "12": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x741BEF1A"
    },
    "25": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "GT",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9E3578D7"
    },
    "36": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "GT",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9E3578D7"
    },
    "47": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x236"
    },
    "51": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBF859271"
    },
    "58": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24B"
    },
    "62": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xCE00D813"
    },
    "69": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27E"
    },
    "73": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF851A440"
    },
    "80": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x293"
    },
    "84": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD"
    },
    "88": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMP",
      "path": "1"
    },
    "89": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "90": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "91": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x741BEF1A"
    },
    "96": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "97": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EF"
    },
    "100": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7CE2A070"
    },
    "107": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "108": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x204"
    },
    "111": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8A2FEE73"
    },
    "118": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "119": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x221"
    },
    "122": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "123": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD"
    },
    "126": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMP",
      "path": "1"
    },
    "127": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "128": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "129": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3FE8804C"
    },
    "134": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "GT",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB"
    },
    "138": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "139": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "140": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3FE8804C"
    },
    "145": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "146": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162"
    },
    "149": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "150": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "151": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3FEB5F2B"
    },
    "156": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "157": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19B"
    },
    "160": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "161": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "162": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x45BCAD9A"
    },
    "167": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "168": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C5"
    },
    "171": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "172": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "173": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6D4CE63C"
    },
    "178": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "179": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DA"
    },
    "182": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "183": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD"
    },
    "186": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMP",
      "path": "1"
    },
    "187": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "188": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "189": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x340D02FE"
    },
    "194": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "195": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "198": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "199": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "200": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3CCFD60B"
    },
    "205": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "206": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x113"
    },
    "209": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "210": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "211": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3E47D6F3"
    },
    "216": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "EQ",
      "path": "1"
    },
    "217": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11D"
    },
    "220": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "221": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "222": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "224": {
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "225": {
      "first_revert": true,
      "fn": null,
      "offset": [
        227,
        2918
      ],
      "op": "REVERT",
      "path": "1"
    },
    "226": {
      "offset": [
        420,
        449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "227": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "228": {
      "op": "DUP1"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "PUSH2",
      "value": "0xEE"
    },
    "233": {
      "op": "JUMPI"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "236": {
      "op": "DUP1"
    },
    "237": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "REVERT",
      "path": "1"
    },
    "238": {
      "op": "JUMPDEST"
    },
    "239": {
      "offset": [
        420,
        449
      ],
      "op": "POP",
      "path": "1"
    },
    "240": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7"
    },
    "243": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A8"
    },
    "246": {
      "fn": null,
      "jump": "i",
      "offset": [
        420,
        449
      ],
      "op": "JUMP",
      "path": "1"
    },
    "247": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "248": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "250": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "DUP1",
      "path": "1"
    },
    "251": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "258": {
      "op": "SHL"
    },
    "259": {
      "op": "SUB"
    },
    "260": {
      "offset": [
        420,
        449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "261": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "262": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "AND",
      "path": "1"
    },
    "263": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "DUP3",
      "path": "1"
    },
    "264": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "265": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "266": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "267": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "DUP2",
      "path": "1"
    },
    "268": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "269": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "SUB",
      "path": "1"
    },
    "270": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "272": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "ADD",
      "path": "1"
    },
    "273": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "274": {
      "fn": null,
      "offset": [
        420,
        449
      ],
      "op": "RETURN",
      "path": "1"
    },
    "275": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2524,
        2872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "276": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2524,
        2872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B"
    },
    "279": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2524,
        2872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B7"
    },
    "282": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        2524,
        2872
      ],
      "op": "JUMP",
      "path": "1"
    },
    "283": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2524,
        2872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "284": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2524,
        2872
      ],
      "op": "STOP",
      "path": "1"
    },
    "285": {
      "offset": [
        247,
        303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "286": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "287": {
      "op": "DUP1"
    },
    "288": {
      "op": "ISZERO"
    },
    "289": {
      "op": "PUSH2",
      "value": "0x129"
    },
    "292": {
      "op": "JUMPI"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "295": {
      "op": "DUP1"
    },
    "296": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "REVERT",
      "path": "1"
    },
    "297": {
      "op": "JUMPDEST"
    },
    "298": {
      "offset": [
        247,
        303
      ],
      "op": "POP",
      "path": "1"
    },
    "299": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x150"
    },
    "302": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "304": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP1",
      "path": "1"
    },
    "305": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "306": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SUB",
      "path": "1"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "309": {
      "op": "DUP2"
    },
    "310": {
      "op": "LT"
    },
    "311": {
      "op": "ISZERO"
    },
    "312": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "315": {
      "op": "JUMPI"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "318": {
      "op": "DUP1"
    },
    "319": {
      "op": "REVERT"
    },
    "320": {
      "op": "JUMPDEST"
    },
    "321": {
      "op": "POP"
    },
    "322": {
      "offset": [
        247,
        303
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "offset": [
        247,
        303
      ],
      "op": "AND",
      "path": "1"
    },
    "332": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x344"
    },
    "335": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        247,
        303
      ],
      "op": "JUMP",
      "path": "1"
    },
    "336": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "337": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "339": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP1",
      "path": "1"
    },
    "340": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "341": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "342": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP3",
      "path": "1"
    },
    "343": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "344": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "345": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "346": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "347": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "348": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SUB",
      "path": "1"
    },
    "349": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "351": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "ADD",
      "path": "1"
    },
    "352": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "353": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "RETURN",
      "path": "1"
    },
    "354": {
      "offset": [
        726,
        756
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "355": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "356": {
      "op": "DUP1"
    },
    "357": {
      "op": "ISZERO"
    },
    "358": {
      "op": "PUSH2",
      "value": "0x16E"
    },
    "361": {
      "op": "JUMPI"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "364": {
      "op": "DUP1"
    },
    "365": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "REVERT",
      "path": "1"
    },
    "366": {
      "op": "JUMPDEST"
    },
    "367": {
      "offset": [
        726,
        756
      ],
      "op": "POP",
      "path": "1"
    },
    "368": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x177"
    },
    "371": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x356"
    },
    "374": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        726,
        756
      ],
      "op": "JUMP",
      "path": "1"
    },
    "375": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "378": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "379": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "DUP1",
      "path": "1"
    },
    "380": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "DUP3",
      "path": "1"
    },
    "381": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "383": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "DUP2",
      "path": "1"
    },
    "384": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "GT",
      "path": "1"
    },
    "385": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "386": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "389": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "390": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "INVALID",
      "path": "1"
    },
    "391": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "392": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "394": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "AND",
      "path": "1"
    },
    "395": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "DUP2",
      "path": "1"
    },
    "396": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "397": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "399": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "ADD",
      "path": "1"
    },
    "400": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "401": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "POP",
      "path": "1"
    },
    "402": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "POP",
      "path": "1"
    },
    "403": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "405": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "406": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "DUP1",
      "path": "1"
    },
    "407": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "408": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "SUB",
      "path": "1"
    },
    "409": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "410": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "RETURN",
      "path": "1"
    },
    "411": {
      "offset": [
        309,
        343
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "412": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "413": {
      "op": "DUP1"
    },
    "414": {
      "op": "ISZERO"
    },
    "415": {
      "op": "PUSH2",
      "value": "0x1A7"
    },
    "418": {
      "op": "JUMPI"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "421": {
      "op": "DUP1"
    },
    "422": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "REVERT",
      "path": "1"
    },
    "423": {
      "op": "JUMPDEST"
    },
    "424": {
      "offset": [
        309,
        343
      ],
      "op": "POP",
      "path": "1"
    },
    "425": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7"
    },
    "428": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "430": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP1",
      "path": "1"
    },
    "431": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "432": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SUB",
      "path": "1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "435": {
      "op": "DUP2"
    },
    "436": {
      "op": "LT"
    },
    "437": {
      "op": "ISZERO"
    },
    "438": {
      "op": "PUSH2",
      "value": "0x1BE"
    },
    "441": {
      "op": "JUMPI"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "444": {
      "op": "DUP1"
    },
    "445": {
      "op": "REVERT"
    },
    "446": {
      "op": "JUMPDEST"
    },
    "447": {
      "op": "POP"
    },
    "448": {
      "offset": [
        309,
        343
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "449": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x366"
    },
    "452": {
      "fn": "Sukuk.withdraw",
      "jump": "i",
      "offset": [
        309,
        343
      ],
      "op": "JUMP",
      "path": "1"
    },
    "453": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1163,
        1378
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "454": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1163,
        1378
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "455": {
      "op": "DUP1"
    },
    "456": {
      "op": "ISZERO"
    },
    "457": {
      "op": "PUSH2",
      "value": "0x1D1"
    },
    "460": {
      "op": "JUMPI"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "463": {
      "op": "DUP1"
    },
    "464": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.startSukuk",
      "offset": [
        1163,
        1378
      ],
      "op": "REVERT",
      "path": "1"
    },
    "465": {
      "op": "JUMPDEST"
    },
    "466": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1163,
        1378
      ],
      "op": "POP",
      "path": "1"
    },
    "467": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1163,
        1378
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B"
    },
    "470": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1163,
        1378
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38D"
    },
    "473": {
      "fn": "Sukuk.startSukuk",
      "jump": "i",
      "offset": [
        1163,
        1378
      ],
      "op": "JUMP",
      "path": "1"
    },
    "474": {
      "fn": "Sukuk.get",
      "offset": [
        764,
        846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "475": {
      "fn": "Sukuk.get",
      "offset": [
        764,
        846
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "476": {
      "op": "DUP1"
    },
    "477": {
      "op": "ISZERO"
    },
    "478": {
      "op": "PUSH2",
      "value": "0x1E6"
    },
    "481": {
      "op": "JUMPI"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "484": {
      "op": "DUP1"
    },
    "485": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.get",
      "offset": [
        764,
        846
      ],
      "op": "REVERT",
      "path": "1"
    },
    "486": {
      "op": "JUMPDEST"
    },
    "487": {
      "fn": "Sukuk.get",
      "offset": [
        764,
        846
      ],
      "op": "POP",
      "path": "1"
    },
    "488": {
      "fn": "Sukuk.get",
      "offset": [
        764,
        846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x177"
    },
    "491": {
      "fn": "Sukuk.get",
      "offset": [
        764,
        846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x428"
    },
    "494": {
      "fn": "Sukuk.get",
      "jump": "i",
      "offset": [
        764,
        846
      ],
      "op": "JUMP",
      "path": "1"
    },
    "495": {
      "offset": [
        376,
        414
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "496": {
      "fn": "Sukuk.get",
      "offset": [
        376,
        414
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "497": {
      "op": "DUP1"
    },
    "498": {
      "op": "ISZERO"
    },
    "499": {
      "op": "PUSH2",
      "value": "0x1FB"
    },
    "502": {
      "op": "JUMPI"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "505": {
      "op": "DUP1"
    },
    "506": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.get",
      "offset": [
        376,
        414
      ],
      "op": "REVERT",
      "path": "1"
    },
    "507": {
      "op": "JUMPDEST"
    },
    "508": {
      "offset": [
        376,
        414
      ],
      "op": "POP",
      "path": "1"
    },
    "509": {
      "fn": "Sukuk.get",
      "offset": [
        376,
        414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7"
    },
    "512": {
      "fn": "Sukuk.get",
      "offset": [
        376,
        414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x438"
    },
    "515": {
      "fn": "Sukuk.get",
      "jump": "i",
      "offset": [
        376,
        414
      ],
      "op": "JUMP",
      "path": "1"
    },
    "516": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1995,
        2233
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "517": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1995,
        2233
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B"
    },
    "520": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1995,
        2233
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "522": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1995,
        2233
      ],
      "op": "DUP1",
      "path": "1"
    },
    "523": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1995,
        2233
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "524": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1995,
        2233
      ],
      "op": "SUB",
      "path": "1"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "527": {
      "op": "DUP2"
    },
    "528": {
      "op": "LT"
    },
    "529": {
      "op": "ISZERO"
    },
    "530": {
      "op": "PUSH2",
      "value": "0x21A"
    },
    "533": {
      "op": "JUMPI"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "536": {
      "op": "DUP1"
    },
    "537": {
      "op": "REVERT"
    },
    "538": {
      "op": "JUMPDEST"
    },
    "539": {
      "op": "POP"
    },
    "540": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1995,
        2233
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "541": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1995,
        2233
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x447"
    },
    "544": {
      "fn": "Sukuk.purchase_suk",
      "jump": "i",
      "offset": [
        1995,
        2233
      ],
      "op": "JUMP",
      "path": "1"
    },
    "545": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1600,
        1781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "546": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1600,
        1781
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "547": {
      "op": "DUP1"
    },
    "548": {
      "op": "ISZERO"
    },
    "549": {
      "op": "PUSH2",
      "value": "0x22D"
    },
    "552": {
      "op": "JUMPI"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "555": {
      "op": "DUP1"
    },
    "556": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.EndIssue",
      "offset": [
        1600,
        1781
      ],
      "op": "REVERT",
      "path": "1"
    },
    "557": {
      "op": "JUMPDEST"
    },
    "558": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1600,
        1781
      ],
      "op": "POP",
      "path": "1"
    },
    "559": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1600,
        1781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B"
    },
    "562": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1600,
        1781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x49D"
    },
    "565": {
      "fn": "Sukuk.EndIssue",
      "jump": "i",
      "offset": [
        1600,
        1781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "566": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1787,
        1979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "567": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1787,
        1979
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "568": {
      "op": "DUP1"
    },
    "569": {
      "op": "ISZERO"
    },
    "570": {
      "op": "PUSH2",
      "value": "0x242"
    },
    "573": {
      "op": "JUMPI"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "576": {
      "op": "DUP1"
    },
    "577": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.startRedeem",
      "offset": [
        1787,
        1979
      ],
      "op": "REVERT",
      "path": "1"
    },
    "578": {
      "op": "JUMPDEST"
    },
    "579": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1787,
        1979
      ],
      "op": "POP",
      "path": "1"
    },
    "580": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1787,
        1979
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B"
    },
    "583": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1787,
        1979
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x523"
    },
    "586": {
      "fn": "Sukuk.startRedeem",
      "jump": "i",
      "offset": [
        1787,
        1979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "587": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "588": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "589": {
      "op": "DUP1"
    },
    "590": {
      "op": "ISZERO"
    },
    "591": {
      "op": "PUSH2",
      "value": "0x257"
    },
    "594": {
      "op": "JUMPI"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "597": {
      "op": "DUP1"
    },
    "598": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "REVERT",
      "path": "1"
    },
    "599": {
      "op": "JUMPDEST"
    },
    "600": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "POP",
      "path": "1"
    },
    "601": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B"
    },
    "604": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "606": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "607": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "608": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "SUB",
      "path": "1"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "611": {
      "op": "DUP2"
    },
    "612": {
      "op": "LT"
    },
    "613": {
      "op": "ISZERO"
    },
    "614": {
      "op": "PUSH2",
      "value": "0x26E"
    },
    "617": {
      "op": "JUMPI"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "620": {
      "op": "DUP1"
    },
    "621": {
      "op": "REVERT"
    },
    "622": {
      "op": "JUMPDEST"
    },
    "623": {
      "op": "POP"
    },
    "624": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "631": {
      "op": "SHL"
    },
    "632": {
      "op": "SUB"
    },
    "633": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "AND",
      "path": "1"
    },
    "634": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A7"
    },
    "637": {
      "fn": "Sukuk.setIjaara",
      "jump": "i",
      "offset": [
        2242,
        2345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "638": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1392,
        1594
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "639": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1392,
        1594
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "640": {
      "op": "DUP1"
    },
    "641": {
      "op": "ISZERO"
    },
    "642": {
      "op": "PUSH2",
      "value": "0x28A"
    },
    "645": {
      "op": "JUMPI"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "648": {
      "op": "DUP1"
    },
    "649": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1392,
        1594
      ],
      "op": "REVERT",
      "path": "1"
    },
    "650": {
      "op": "JUMPDEST"
    },
    "651": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1392,
        1594
      ],
      "op": "POP",
      "path": "1"
    },
    "652": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1392,
        1594
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B"
    },
    "655": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1392,
        1594
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E0"
    },
    "658": {
      "fn": "Sukuk.IssueSukuk",
      "jump": "i",
      "offset": [
        1392,
        1594
      ],
      "op": "JUMP",
      "path": "1"
    },
    "659": {
      "offset": [
        349,
        370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "660": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        349,
        370
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "661": {
      "op": "DUP1"
    },
    "662": {
      "op": "ISZERO"
    },
    "663": {
      "op": "PUSH2",
      "value": "0x29F"
    },
    "666": {
      "op": "JUMPI"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "669": {
      "op": "DUP1"
    },
    "670": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        349,
        370
      ],
      "op": "REVERT",
      "path": "1"
    },
    "671": {
      "op": "JUMPDEST"
    },
    "672": {
      "offset": [
        349,
        370
      ],
      "op": "POP",
      "path": "1"
    },
    "673": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        349,
        370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7"
    },
    "676": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        349,
        370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x678"
    },
    "679": {
      "fn": "Sukuk.IssueSukuk",
      "jump": "i",
      "offset": [
        349,
        370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "680": {
      "offset": [
        420,
        449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "681": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        420,
        449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "683": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        420,
        449
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "690": {
      "op": "SHL"
    },
    "691": {
      "op": "SUB"
    },
    "692": {
      "offset": [
        420,
        449
      ],
      "op": "AND",
      "path": "1"
    },
    "693": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        420,
        449
      ],
      "op": "DUP2",
      "path": "1"
    },
    "694": {
      "fn": "Sukuk.IssueSukuk",
      "jump": "o",
      "offset": [
        420,
        449
      ],
      "op": "JUMP",
      "path": "1"
    },
    "695": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2524,
        2872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "696": {
      "offset": [
        2410,
        2415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "698": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2410,
        2415
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "705": {
      "op": "SHL"
    },
    "706": {
      "op": "SUB"
    },
    "707": {
      "offset": [
        2410,
        2415
      ],
      "op": "AND",
      "path": "1"
    },
    "708": {
      "offset": [
        2396,
        2406
      ],
      "op": "CALLER",
      "path": "1"
    },
    "709": {
      "offset": [
        2396,
        2415
      ],
      "op": "EQ",
      "path": "1"
    },
    "710": {
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CE"
    },
    "713": {
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "714": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "716": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2388,
        2416
      ],
      "op": "DUP1",
      "path": "1"
    },
    "717": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2388,
        2416
      ],
      "op": "REVERT",
      "path": "1"
    },
    "718": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "719": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x40"
    },
    "721": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "722": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2588
      ],
      "op": "CALLER",
      "path": "1"
    },
    "723": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2588
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "724": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2598,
        2619
      ],
      "op": "SELFBALANCE",
      "path": "1"
    },
    "725": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "DUP1",
      "path": "1"
    },
    "726": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "727": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "730": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "MUL",
      "path": "1"
    },
    "731": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "732": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "734": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "DUP2",
      "path": "1"
    },
    "735": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "DUP2",
      "path": "1"
    },
    "736": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "DUP2",
      "path": "1"
    },
    "737": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2598,
        2619
      ],
      "op": "DUP6",
      "path": "1"
    },
    "738": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2588
      ],
      "op": "DUP9",
      "path": "1"
    },
    "739": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "DUP9",
      "path": "1"
    },
    "740": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "CALL",
      "path": "1"
    },
    "741": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "742": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "POP",
      "path": "1"
    },
    "743": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "POP",
      "path": "1"
    },
    "744": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "POP",
      "path": "1"
    },
    "745": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "POP",
      "path": "1"
    },
    "746": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2578,
        2620
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "747": {
      "op": "DUP1"
    },
    "748": {
      "op": "ISZERO"
    },
    "749": {
      "op": "PUSH2",
      "value": "0x2FA"
    },
    "752": {
      "op": "JUMPI"
    },
    "753": {
      "op": "RETURNDATASIZE"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "756": {
      "op": "DUP1"
    },
    "757": {
      "op": "RETURNDATACOPY"
    },
    "758": {
      "op": "RETURNDATASIZE"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "761": {
      "op": "REVERT"
    },
    "762": {
      "op": "JUMPDEST"
    },
    "763": {
      "op": "POP"
    },
    "764": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2649,
        2668
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "766": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2631,
        2865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "767": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2700,
        2709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "769": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2700,
        2716
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "770": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2686,
        2716
      ],
      "op": "DUP2",
      "path": "1"
    },
    "771": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2686,
        2716
      ],
      "op": "LT",
      "path": "1"
    },
    "772": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2631,
        2865
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "773": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2631,
        2865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x341"
    },
    "776": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2631,
        2865
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "777": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2768,
        2782
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "779": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2794
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "781": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2795,
        2806
      ],
      "op": "DUP3",
      "path": "1"
    },
    "782": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "DUP2",
      "path": "1"
    },
    "783": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "784": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "DUP2",
      "path": "1"
    },
    "785": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "LT",
      "path": "1"
    },
    "786": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x317"
    },
    "789": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "790": {
      "dev": "Index out of range",
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "INVALID",
      "path": "1"
    },
    "791": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "792": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "794": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "795": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "DUP3",
      "path": "1"
    },
    "796": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "797": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "799": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "800": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "DUP4",
      "path": "1"
    },
    "801": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "802": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "803": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "804": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "ADD",
      "path": "1"
    },
    "805": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "SUB"
    },
    "814": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "AND",
      "path": "1"
    },
    "815": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2821,
        2850
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 1
    },
    "816": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2821,
        2850
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "817": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2821,
        2850
      ],
      "op": "DUP2",
      "path": "1"
    },
    "818": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2821,
        2850
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "819": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2821,
        2850
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "820": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2821,
        2850
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "822": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2821,
        2850
      ],
      "op": "DUP2",
      "path": "1"
    },
    "823": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2821,
        2850
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "824": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2821,
        2854
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2785,
        2807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "828": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2730,
        2743
      ],
      "op": "ADD",
      "path": "1",
      "statement": 2
    },
    "829": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2631,
        2865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FE"
    },
    "832": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2631,
        2865
      ],
      "op": "JUMP",
      "path": "1"
    },
    "833": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2631,
        2865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "834": {
      "fn": "Sukuk.withdraw",
      "offset": [
        2631,
        2865
      ],
      "op": "POP",
      "path": "1"
    },
    "835": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        2524,
        2872
      ],
      "op": "JUMP",
      "path": "1"
    },
    "836": {
      "offset": [
        247,
        303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "837": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "839": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "841": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "842": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "843": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "844": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "845": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "846": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "847": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "849": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "850": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "851": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "852": {
      "fn": "Sukuk.withdraw",
      "offset": [
        247,
        303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "853": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        247,
        303
      ],
      "op": "JUMP",
      "path": "1"
    },
    "854": {
      "offset": [
        726,
        756
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "855": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "857": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "862": {
      "op": "SHL"
    },
    "863": {
      "offset": [
        726,
        756
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "864": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "DIV",
      "path": "1"
    },
    "865": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "867": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "AND",
      "path": "1"
    },
    "868": {
      "fn": "Sukuk.withdraw",
      "offset": [
        726,
        756
      ],
      "op": "DUP2",
      "path": "1"
    },
    "869": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        726,
        756
      ],
      "op": "JUMP",
      "path": "1"
    },
    "870": {
      "offset": [
        309,
        343
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "871": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "873": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "874": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "875": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "876": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "877": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "LT",
      "path": "1"
    },
    "878": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x373"
    },
    "881": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "882": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "INVALID",
      "path": "1"
    },
    "883": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "884": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "886": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "887": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "DUP3",
      "path": "1"
    },
    "888": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "889": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "891": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "892": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "893": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "894": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "ADD",
      "path": "1"
    },
    "895": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "902": {
      "op": "SHL"
    },
    "903": {
      "op": "SUB"
    },
    "904": {
      "offset": [
        309,
        343
      ],
      "op": "AND",
      "path": "1"
    },
    "905": {
      "fn": "Sukuk.withdraw",
      "offset": [
        309,
        343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "offset": [
        309,
        343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "908": {
      "fn": "Sukuk.withdraw",
      "jump": "o",
      "offset": [
        309,
        343
      ],
      "op": "JUMP",
      "path": "1"
    },
    "909": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1163,
        1378
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "910": {
      "offset": [
        2410,
        2415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "912": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2410,
        2415
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "919": {
      "op": "SHL"
    },
    "920": {
      "op": "SUB"
    },
    "921": {
      "offset": [
        2410,
        2415
      ],
      "op": "AND",
      "path": "1"
    },
    "922": {
      "offset": [
        2396,
        2406
      ],
      "op": "CALLER",
      "path": "1"
    },
    "923": {
      "offset": [
        2396,
        2415
      ],
      "op": "EQ",
      "path": "1"
    },
    "924": {
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A4"
    },
    "927": {
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "928": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "930": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2388,
        2416
      ],
      "op": "DUP1",
      "path": "1"
    },
    "931": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2388,
        2416
      ],
      "op": "REVERT",
      "path": "1"
    },
    "932": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "933": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1256,
        1275
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x3"
    },
    "935": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "937": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1252
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "942": {
      "op": "SHL"
    },
    "943": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "944": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1252
      ],
      "op": "DIV",
      "path": "1"
    },
    "945": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "947": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1252
      ],
      "op": "AND",
      "path": "1"
    },
    "948": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1275
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "950": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1275
      ],
      "op": "DUP2",
      "path": "1"
    },
    "951": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1275
      ],
      "op": "GT",
      "path": "1"
    },
    "952": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1275
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "953": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1275
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BE"
    },
    "956": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1275
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "957": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1275
      ],
      "op": "INVALID",
      "path": "1"
    },
    "958": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1275
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "959": {
      "branch": 15,
      "fn": "Sukuk.startSukuk",
      "offset": [
        1241,
        1275
      ],
      "op": "EQ",
      "path": "1"
    },
    "960": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40B"
    },
    "963": {
      "branch": 15,
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "964": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "966": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "DUP1",
      "path": "1"
    },
    "967": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "968": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "972": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "974": {
      "op": "SHL"
    },
    "975": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "DUP2",
      "path": "1"
    },
    "976": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "977": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "979": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "981": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "DUP3",
      "path": "1"
    },
    "982": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "ADD",
      "path": "1"
    },
    "983": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "984": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x18"
    },
    "986": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "988": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "DUP3",
      "path": "1"
    },
    "989": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "ADD",
      "path": "1"
    },
    "990": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "991": {
      "op": "PUSH24",
      "value": "0x10D85B89DD081A5CDCDD59481B995DC81CDD5ADCC81E595D"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1021": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1022": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "ADD",
      "path": "1"
    },
    "1023": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1024": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1025": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1026": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1027": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1028": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1029": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "SUB",
      "path": "1"
    },
    "1030": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1032": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "ADD",
      "path": "1"
    },
    "1033": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1034": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1035": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1220,
        1325
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1036": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1351
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x4"
    },
    "1038": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1039": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1370
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1040": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1354,
        1370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1042": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1354,
        1370
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1043": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1351
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "op": "NOT"
    },
    "1050": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1370
      ],
      "op": "AND",
      "path": "1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1354,
        1370
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1057": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1058": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1370
      ],
      "op": "MUL",
      "path": "1"
    },
    "1059": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1370
      ],
      "op": "OR",
      "path": "1"
    },
    "1060": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1061": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1370
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1062": {
      "fn": "Sukuk.startSukuk",
      "offset": [
        1340,
        1370
      ],
      "op": "POP",
      "path": "1"
    },
    "1063": {
      "fn": "Sukuk.startSukuk",
      "jump": "o",
      "offset": [
        1163,
        1378
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1064": {
      "fn": "Sukuk.get",
      "offset": [
        764,
        846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1065": {
      "fn": "Sukuk.get",
      "offset": [
        828,
        839
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x4"
    },
    "1067": {
      "fn": "Sukuk.get",
      "offset": [
        828,
        839
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1072": {
      "op": "SHL"
    },
    "1073": {
      "fn": "Sukuk.get",
      "offset": [
        828,
        839
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1074": {
      "fn": "Sukuk.get",
      "offset": [
        828,
        839
      ],
      "op": "DIV",
      "path": "1"
    },
    "1075": {
      "fn": "Sukuk.get",
      "offset": [
        828,
        839
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1077": {
      "fn": "Sukuk.get",
      "offset": [
        828,
        839
      ],
      "op": "AND",
      "path": "1"
    },
    "1078": {
      "fn": "Sukuk.get",
      "offset": [
        828,
        839
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1079": {
      "fn": "Sukuk.get",
      "jump": "o",
      "offset": [
        764,
        846
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1080": {
      "offset": [
        376,
        414
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1081": {
      "fn": "Sukuk.get",
      "offset": [
        376,
        414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1083": {
      "fn": "Sukuk.get",
      "offset": [
        376,
        414
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1090": {
      "op": "SHL"
    },
    "1091": {
      "op": "SUB"
    },
    "1092": {
      "offset": [
        376,
        414
      ],
      "op": "AND",
      "path": "1"
    },
    "1093": {
      "fn": "Sukuk.get",
      "offset": [
        376,
        414
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1094": {
      "fn": "Sukuk.get",
      "jump": "o",
      "offset": [
        376,
        414
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1095": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        1995,
        2233
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1096": {
      "op": "POP"
    },
    "1097": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2157,
        2167
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 6
    },
    "1098": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2156
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1100": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1101": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1102": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1103": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1105": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1106": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1107": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1108": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1110": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1111": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2168
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1112": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2181
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1113": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2181
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1114": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2172,
        2181
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1115": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2181
      ],
      "op": "ADD",
      "path": "1"
    },
    "1116": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2181
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1117": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2135,
        2181
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1120": {
      "op": "DUP1"
    },
    "1121": {
      "op": "SLOAD"
    },
    "1122": {
      "op": "DUP1"
    },
    "1123": {
      "op": "DUP3"
    },
    "1124": {
      "op": "ADD"
    },
    "1125": {
      "op": "DUP3"
    },
    "1126": {
      "op": "SSTORE"
    },
    "1127": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 7
    },
    "1128": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1129": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "1162": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "ADD",
      "path": "1"
    },
    "1163": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1164": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1171": {
      "op": "SHL"
    },
    "1172": {
      "op": "SUB"
    },
    "1173": {
      "op": "NOT"
    },
    "1174": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "AND",
      "path": "1"
    },
    "1175": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1176": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1177": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "OR",
      "path": "1"
    },
    "1178": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1179": {
      "fn": "Sukuk.purchase_suk",
      "offset": [
        2191,
        2226
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1180": {
      "fn": "Sukuk.purchase_suk",
      "jump": "o",
      "offset": [
        1995,
        2233
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1181": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1600,
        1781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1182": {
      "offset": [
        2410,
        2415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1184": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2410,
        2415
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1191": {
      "op": "SHL"
    },
    "1192": {
      "op": "SUB"
    },
    "1193": {
      "offset": [
        2410,
        2415
      ],
      "op": "AND",
      "path": "1"
    },
    "1194": {
      "offset": [
        2396,
        2406
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1195": {
      "offset": [
        2396,
        2415
      ],
      "op": "EQ",
      "path": "1"
    },
    "1196": {
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B4"
    },
    "1199": {
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1200": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1202": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2388,
        2416
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1203": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2388,
        2416
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1204": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1205": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1682,
        1699
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x2"
    },
    "1207": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1209": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1678
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1214": {
      "op": "SHL"
    },
    "1215": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1216": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1678
      ],
      "op": "DIV",
      "path": "1"
    },
    "1217": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1219": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1678
      ],
      "op": "AND",
      "path": "1"
    },
    "1220": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1222": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1699
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1223": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1699
      ],
      "op": "GT",
      "path": "1"
    },
    "1224": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1699
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1225": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CE"
    },
    "1228": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1699
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1229": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1699
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1230": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1231": {
      "branch": 16,
      "fn": "Sukuk.EndIssue",
      "offset": [
        1667,
        1699
      ],
      "op": "EQ",
      "path": "1"
    },
    "1232": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x509"
    },
    "1235": {
      "branch": 16,
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1236": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1238": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1239": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1246": {
      "op": "SHL"
    },
    "1247": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1248": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1249": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1251": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1253": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1254": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1255": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "ADD",
      "path": "1"
    },
    "1256": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1257": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1258": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1259": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1260": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1262": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1263": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "ADD",
      "path": "1"
    },
    "1264": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1265": {
      "op": "PUSH4",
      "value": "0x15195CDD"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1272": {
      "op": "SHL"
    },
    "1273": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1275": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1276": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "ADD",
      "path": "1"
    },
    "1277": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1278": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1279": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1280": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1281": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1282": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1283": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "SUB",
      "path": "1"
    },
    "1284": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1286": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "ADD",
      "path": "1"
    },
    "1287": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1288": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1289": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1646,
        1729
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1290": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1740,
        1751
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x4"
    },
    "1292": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1740,
        1774
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1293": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1740,
        1774
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1294": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1754,
        1774
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1296": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1754,
        1774
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1297": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1740,
        1751
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1302": {
      "op": "SHL"
    },
    "1303": {
      "op": "NOT"
    },
    "1304": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1740,
        1774
      ],
      "op": "AND",
      "path": "1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1754,
        1774
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1311": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1740,
        1774
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x421"
    },
    "1314": {
      "fn": "Sukuk.EndIssue",
      "offset": [
        1740,
        1774
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1315": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1787,
        1979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1316": {
      "offset": [
        2410,
        2415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1318": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2410,
        2415
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1325": {
      "op": "SHL"
    },
    "1326": {
      "op": "SUB"
    },
    "1327": {
      "offset": [
        2410,
        2415
      ],
      "op": "AND",
      "path": "1"
    },
    "1328": {
      "offset": [
        2396,
        2406
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1329": {
      "offset": [
        2396,
        2415
      ],
      "op": "EQ",
      "path": "1"
    },
    "1330": {
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53A"
    },
    "1333": {
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1334": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1336": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2388,
        2416
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1337": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2388,
        2416
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1338": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1339": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1872,
        1892
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x0"
    },
    "1341": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1868
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1343": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1868
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1348": {
      "op": "SHL"
    },
    "1349": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1868
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1350": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1868
      ],
      "op": "DIV",
      "path": "1"
    },
    "1351": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1868
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1353": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1868
      ],
      "op": "AND",
      "path": "1"
    },
    "1354": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1356": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1357": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1892
      ],
      "op": "GT",
      "path": "1"
    },
    "1358": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1892
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1359": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x554"
    },
    "1362": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1892
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1363": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1892
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1364": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1892
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1365": {
      "branch": 17,
      "fn": "Sukuk.startRedeem",
      "offset": [
        1857,
        1892
      ],
      "op": "EQ",
      "path": "1"
    },
    "1366": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58F"
    },
    "1369": {
      "branch": 17,
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1370": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1372": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1373": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1374": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1380": {
      "op": "SHL"
    },
    "1381": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1382": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1383": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1385": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1387": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1388": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1389": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "ADD",
      "path": "1"
    },
    "1390": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1391": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1392": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1393": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1394": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1396": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1397": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "ADD",
      "path": "1"
    },
    "1398": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1399": {
      "op": "PUSH4",
      "value": "0x15195CDD"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1409": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1410": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "ADD",
      "path": "1"
    },
    "1411": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1412": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1413": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1414": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1415": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1416": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1417": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "SUB",
      "path": "1"
    },
    "1418": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1420": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "ADD",
      "path": "1"
    },
    "1421": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1422": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1423": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1836,
        1922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1424": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1947,
        1972
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x4"
    },
    "1426": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1933,
        1972
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1427": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1933,
        1972
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1428": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1947,
        1972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1429": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1947,
        1972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "op": "NOT"
    },
    "1436": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1933,
        1972
      ],
      "op": "AND",
      "path": "1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1441": {
      "op": "SHL"
    },
    "1442": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1947,
        1972
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1443": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1933,
        1972
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x421"
    },
    "1446": {
      "fn": "Sukuk.startRedeem",
      "offset": [
        1933,
        1972
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1447": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2242,
        2345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1448": {
      "offset": [
        2410,
        2415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1450": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2410,
        2415
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1457": {
      "op": "SHL"
    },
    "1458": {
      "op": "SUB"
    },
    "1459": {
      "offset": [
        2410,
        2415
      ],
      "op": "AND",
      "path": "1"
    },
    "1460": {
      "offset": [
        2396,
        2406
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1461": {
      "offset": [
        2396,
        2415
      ],
      "op": "EQ",
      "path": "1"
    },
    "1462": {
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5BE"
    },
    "1465": {
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1466": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1468": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2388,
        2416
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1469": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2388,
        2416
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1470": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1471": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2319
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 12,
      "value": "0x4"
    },
    "1473": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1474": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1481": {
      "op": "SHL"
    },
    "1482": {
      "op": "SUB"
    },
    "1483": {
      "op": "NOT"
    },
    "1484": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "AND",
      "path": "1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "op": "SUB"
    },
    "1493": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1494": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1495": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1496": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "AND",
      "path": "1"
    },
    "1497": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1498": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1499": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1500": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "OR",
      "path": "1"
    },
    "1501": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1502": {
      "fn": "Sukuk.setIjaara",
      "offset": [
        2313,
        2329
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1503": {
      "fn": "Sukuk.setIjaara",
      "jump": "o",
      "offset": [
        2242,
        2345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1504": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1392,
        1594
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1505": {
      "offset": [
        2410,
        2415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1507": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2410,
        2415
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1514": {
      "op": "SHL"
    },
    "1515": {
      "op": "SUB"
    },
    "1516": {
      "offset": [
        2410,
        2415
      ],
      "op": "AND",
      "path": "1"
    },
    "1517": {
      "offset": [
        2396,
        2406
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1518": {
      "offset": [
        2396,
        2415
      ],
      "op": "EQ",
      "path": "1"
    },
    "1519": {
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F7"
    },
    "1522": {
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1523": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2388,
        2416
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1525": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2388,
        2416
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1526": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2388,
        2416
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1527": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        2388,
        2416
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1528": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1478,
        1494
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x1"
    },
    "1530": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1474
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1532": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1474
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1537": {
      "op": "SHL"
    },
    "1538": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1474
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1539": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1474
      ],
      "op": "DIV",
      "path": "1"
    },
    "1540": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1474
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1542": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1474
      ],
      "op": "AND",
      "path": "1"
    },
    "1543": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1545": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1494
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1546": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1494
      ],
      "op": "GT",
      "path": "1"
    },
    "1547": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1494
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1548": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x611"
    },
    "1551": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1494
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1552": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1494
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1553": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1494
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1554": {
      "branch": 18,
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1463,
        1494
      ],
      "op": "EQ",
      "path": "1"
    },
    "1555": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x65E"
    },
    "1558": {
      "branch": 18,
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1559": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1561": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1562": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1563": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1569": {
      "op": "SHL"
    },
    "1570": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1571": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1572": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1574": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1576": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1577": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "ADD",
      "path": "1"
    },
    "1578": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1579": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x18"
    },
    "1581": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1583": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1584": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "ADD",
      "path": "1"
    },
    "1585": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1586": {
      "op": "PUSH24",
      "value": "0x10D85B89DD081A5CDCDD59481B995DC81CDD5ADCC81E595D"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1613": {
      "op": "SHL"
    },
    "1614": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1616": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1617": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "ADD",
      "path": "1"
    },
    "1618": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1619": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1620": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1621": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1622": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1623": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1624": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "SUB",
      "path": "1"
    },
    "1625": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1627": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "ADD",
      "path": "1"
    },
    "1628": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1629": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1630": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1442,
        1544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1631": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1555,
        1566
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x4"
    },
    "1633": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1555,
        1586
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1634": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1555,
        1586
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1635": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1569,
        1586
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1637": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1569,
        1586
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1638": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1555,
        1566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1643": {
      "op": "SHL"
    },
    "1644": {
      "op": "NOT"
    },
    "1645": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1555,
        1586
      ],
      "op": "AND",
      "path": "1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1650": {
      "op": "SHL"
    },
    "1651": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1569,
        1586
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1652": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1555,
        1586
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x421"
    },
    "1655": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        1555,
        1586
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1656": {
      "offset": [
        349,
        370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1657": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        349,
        370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1659": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        349,
        370
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1666": {
      "op": "SHL"
    },
    "1667": {
      "op": "SUB"
    },
    "1668": {
      "offset": [
        349,
        370
      ],
      "op": "AND",
      "path": "1"
    },
    "1669": {
      "fn": "Sukuk.IssueSukuk",
      "offset": [
        349,
        370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1670": {
      "fn": "Sukuk.IssueSukuk",
      "jump": "o",
      "offset": [
        349,
        370
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "47531c4d1a22676f025ae7c4d68d76ab62804675",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.0;\n\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\n\n\n// This one for now to track what each investor/ I will look at the implementation later\n\n\ncontract Sukuk{\n    mapping(address => uint256) public addressToAmountFunded;\n    address payable[] public investors;\n    address public  admin;\n    AggregatorV3Interface public priceFeed;\n    address payable public Ijaara ;\n\n    //Sukuk State\n    enum SUKUK_STATE{\n        COOLDOWN,// This state will be when the contract is in effect however it doesn't have any tasks to excute\n        OPEN,\n        ISSUE,\n        CLOSEED,\n        \n        REDEEM_PERIOD,\n        TERM_1,\n        TERM_2\n    }\n    SUKUK_STATE public sukuk_state;\n\n\n    function get() public view returns(SUKUK_STATE){\n        return sukuk_state;\n    }\n\n\n\n\n\n    //added an argument to constructor for testing\n    constructor(\n        address _priceFeed\n      ) \n    public {\n        priceFeed = AggregatorV3Interface(_priceFeed);\n        // Admin will be the contract sender for now\n        admin = msg.sender;\n        sukuk_state = SUKUK_STATE.CLOSEED;\n\n    }\n\n\n\n\n    function     startSukuk( ) public onlyAdmin{\n            require(\n            sukuk_state == SUKUK_STATE.CLOSEED,\n            \"Can't issue new suks yet\"\n        );\n\n\n\n\n\n        sukuk_state = SUKUK_STATE.OPEN;\n\n    }\n    \n\n\n\n\n    function  IssueSukuk( ) public onlyAdmin{\n        require(\n            sukuk_state == SUKUK_STATE.OPEN,\n            \"Can't issue new suks yet\"\n        );\n\n        sukuk_state = SUKUK_STATE.ISSUE;\n\n    }\n\n    function EndIssue() public onlyAdmin{\n        require(\n            sukuk_state == SUKUK_STATE.ISSUE,\n            \"Test\"\n        );\n\n        sukuk_state = SUKUK_STATE.COOLDOWN;\n    }\n\n    function startRedeem() public onlyAdmin{\n        require(\n            sukuk_state == SUKUK_STATE.COOLDOWN,\n            \"Test\"\n        );\n\n        sukuk_state = SUKUK_STATE.REDEEM_PERIOD;\n    }\n\n\n\n\n\n    \n\n    function purchase_suk(uint256 _number_of_sukuk) public payable{\n\n\n\n        // Right now it only tracks the amount and address only.\n        addressToAmountFunded[msg.sender] += msg.value;\n        investors.push(payable(msg.sender));\n    }\n\n\n\n\n    function setIjaara(address payable _Ijaara ) public onlyAdmin{\n        Ijaara = _Ijaara;\n        \n    }\n\n\n\n\n\n\n\n\n    modifier onlyAdmin(){\n        require(msg.sender == admin);\n        _;\n    }\n\n    modifier onlyIjaara(){\n        require(msg.sender == Ijaara);\n        _;\n    }\n\n    function withdraw() public payable onlyAdmin{\n        msg.sender.transfer(address(this).balance);\n\n        for (\n            uint256 funderIndex = 0;\n            funderIndex < investors.length;\n            funderIndex++\n        ) {\n            address funder = investors[funderIndex];\n            addressToAmountFunded[funder] = 0;\n        }\n\n    }\n\n    //function redeem() public payable{}\n\n\n}",
  "sourceMap": "227:2691:1:-:0;;;907:247;8:9:-1;5:2;;;30:1;27;20:12;5:2;907:247:1;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;907:247:1;977:9;:45;;-1:-1:-1;;;;;977:45:1;;-1:-1:-1;;;;;;977:45:1;;;;;;1085:5;:18;;;;;1093:10;1085:18;;;1113:11;:33;;-1:-1:-1;;;;1113:33:1;-1:-1:-1;;;977:9:1;1113:33;;;;;907:247;227:2691;;;;;;",
  "sourcePath": "contracts/Purchese.sol",
  "type": "contract"
}